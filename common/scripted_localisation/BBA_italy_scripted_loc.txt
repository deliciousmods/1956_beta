# Allows you to create your own dynamic keys
# to be called in localization.
# defined_text -> this is it, we're defining the text
# text -> a discrete entry that can be picked to display in loc.
# trigger -> determines if a text entry will be picked or not.
# (The triggers need to be valid for the scope the key is called in
# (eg Root or From.From).)
# localization_key -> points to the localization key
# that'll be used if trigger passes


defined_text = {
	name = GetColorControlledFactoriesForNewIndustrializationProgram
	text = {
		trigger = {
			NOT = { num_of_controlled_factories < ITA_new_industrialization_program_factories_required }
		}
		localization_key = SOV_propaganda_campaigns_taken_requirement_color_green
	}
	text = {
		localization_key = SOV_propaganda_campaigns_taken_requirement_color_red
	}
}

defined_text = {
	name = GetAppropriateRegioEsercitoNsName
	text = {
		trigger = {
			ITA_has_rejected_monarchy = yes
		}
		localization_key = ITA_regio_esercito_name_alt
	}
	text = {
		localization_key = ITA_regio_esercito_name_default
	}
}

defined_text = {
	name = GetAppropriateRegiaAeronauticaNsName
	text = {
		trigger = {
			ITA_has_rejected_monarchy = yes
		}
		localization_key = ITA_regia_aeronautica_name_alt
	}
	text = {
		localization_key = ITA_regia_aeronautica_name_default
	}
}

defined_text = {
	name = GetAppropriateRegiaMarinaNsName
	text = {
		trigger = {
			ITA_has_rejected_monarchy = yes
		}
		localization_key = ITA_regia_marina_name_alt
	}
	text = {
		localization_key = ITA_regia_marina_name_default
	}
}

defined_text = {
	name = GetAppropriatePeriodOrColon
	text = {
		trigger = {
			OR = {
				has_completed_focus = ITA_develop_ethiopia
				has_completed_focus = ITA_develop_libya
				has_completed_focus = ITA_develop_eritrea
				has_completed_focus = ITA_develop_somaliland
			}
		}
		localization_key = generic_current_effects
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = { #Assuming ITA is either ROOT/FROM
	name = GetEscortShipsSender
	text = {
		trigger = {
			original_tag = ITA
		}
		localization_key = ITA_cooperation_programs_deal_root_tt
	}
	text = {
		localization_key = ITA_cooperation_programs_deal_from_tt
	}
}

defined_text = { #Assuming ITA is either ROOT/FROM (inverted so that if ITA is ROOT - then receiver is FROM)
	name = GetEscortShipsReceiver
	text = {
		trigger = {
			original_tag = ITA
		}
		localization_key = ITA_cooperation_programs_deal_from_tt
	}
	text = {
		localization_key = ITA_cooperation_programs_deal_root_tt
	}
}


##     ## #### ########  ########  ######## ##    ##    ##    ##  ######     ########  #######   #######  ##       ######## #### ########   ######  
##     ##  ##  ##     ## ##     ## ##       ###   ##    ###   ## ##    ##       ##    ##     ## ##     ## ##          ##     ##  ##     ## ##    ## 
##     ##  ##  ##     ## ##     ## ##       ####  ##    ####  ## ##             ##    ##     ## ##     ## ##          ##     ##  ##     ## ##       
#########  ##  ##     ## ##     ## ######   ## ## ##    ## ## ##  ######        ##    ##     ## ##     ## ##          ##     ##  ########   ######  
##     ##  ##  ##     ## ##     ## ##       ##  ####    ##  ####       ##       ##    ##     ## ##     ## ##          ##     ##  ##              ## 
##     ##  ##  ##     ## ##     ## ##       ##   ###    ##   ### ##    ##       ##    ##     ## ##     ## ##          ##     ##  ##        ##    ## 
##     ## #### ########  ########  ######## ##    ##    ##    ##  ######        ##     #######   #######  ########    ##    #### ##         ######  


defined_text = {
	name = GetResearchPenaltiesTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_end_fiat_ansaldo_duopoly #Focus removes penalties
		}
		localization_key = generic_null
	}
	text = {
		localization_key = ITA_military_industry_dynamic_modifier_research_tt
	}
}

defined_text = {
	name = GetArtyProductionTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_increase_artillery_production #Focus grants bonuses
		}
		localization_key = ITA_military_industry_dynamic_modifier_arty_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetTankettesTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_italian_tankettes #Focus grants bonuses
		}
		localization_key = ITA_military_industry_dynamic_modifier_tankettes_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetSPGTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_self_propelled_guns #Focus grants bonuses
		}
		localization_key = ITA_self_propelled_guns_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetFerreaMoleTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_ferrea_mole_ferreo_cuore #Focus grants bonuses
		}
		localization_key = ITA_ferrea_mole_ferreo_cuore_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetStandardizationOrSpecializationTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_standardization #Focus grants bonuses
		}
		localization_key = ITA_standardization_dynamic_modifier_tt
	}
	text = {
		trigger = {
			has_completed_focus = ITA_specialization #Focus grants bonuses
		}
		localization_key = ITA_specialization_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetLightCruisersTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_cavagnari_plan #Focus grants bonuses
		}
		localization_key = ITA_incrociatori_leggeri_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetHeavyCruisersTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_appoint_campioni
		}
		localization_key = ITA_incrociatori_pesanti_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetDeckConversionsTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_refit_civilian_ships #Focus grants bonuses
		}
		localization_key = ITA_deck_conversions_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetRailwayGunsTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_mobilize_the_railway_guns #Focus grants bonuses
		}
		localization_key = ITA_mobilize_the_railway_guns_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetSuperHeavyAircraftTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_the_king_of_the_skies #Focus grants bonuses
		}
		localization_key = ITA_the_king_of_the_skies_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetSuperHeavyTanksTooltip
	text = {
		trigger = {
			OR = {
				has_completed_focus = ITA_modern_musculus #Focus grants bonuses
				has_completed_focus = ITA_a_time_for_war #Focus grants bonuses
			}
		}
		localization_key = ITA_modern_musculus_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetSuperHeavyShipsTooltip
	text = {
		trigger = {
			has_completed_focus = ITA_caligulas_pride #Focus grants bonuses
		}
		localization_key = ITA_caligulas_pride_dynamic_modifier_tt
	}
	text = {
		localization_key = generic_null
	}
}


#TODO_Manu: This does not work for a character name because of missing scope (regardless of checking inside ROOT and OWNER scopes)
defined_text = {
	name = GetGrandCouncilName
	text = {
		trigger = {
			ITA = {
				has_country_leader = {
					character = ITA_grand_council
					ruling_only = yes
				}
				OR = {
					has_government = democratic
					has_government = neutrality
				}
			}
		}
		localization_key = ITA_grand_council_alt
	}
	text = {
		localization_key = ITA_grand_council
	}
}

defined_text = {
	name = GetRsiOverlord
	text = {
		trigger = {
			check_variable = { ITA_rsi_overlord = 0 compare = not_equals } #The overlord var is not empty
		}
		localization_key = ITA_rsi_overlord_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetRdsOverlord
	text = {
		trigger = {
			check_variable = { ITA_rds_overlord = 0 compare = not_equals } #The overlord var is not empty
		}
		localization_key = ITA_rds_overlord_tt
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetAfricanStates
	text = {
		trigger = {
			has_completed_focus = ITA_ministry_of_italian_africa
		}
		localization_key = BBA_italy_colonial_management_african_states
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetAlbanianStates
	text = {
		trigger = {
			has_completed_focus = ITA_albanian_fascist_militia
		}
		localization_key = BBA_italy_colonial_management_albanian_states
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetAndOrNothing
	text = {
		trigger = {
			has_completed_focus = ITA_ministry_of_italian_africa
			has_completed_focus = ITA_albanian_fascist_militia
		}
		localization_key = BBA_italy_colonial_management_and
	}
	text = {
		localization_key = generic_null
	}
}

defined_text = {
	name = GetItalianConquestofParisDesc
	text = {
		trigger = {
			OR = {
				has_country_leader = {
					character = ITA_grand_council
					ruling_only = yes
				}
				has_country_leader = {
					character = ITA_comitato_di_liberazione_nazionale
					ruling_only = yes
				}
			}
		}
		localization_key = news.114.d_council
	}
	text = {
		localization_key = news.114.d_leader
	}
}


defined_text = { #Text for the UK
	name = GetItalyAsksEngland
	text = {
		trigger = {
			has_country_flag = ITA_italy_asks_ethiopian_host_for_help
		}
		localization_key = BBA_italy_interaction_events.27.desc_hosting_ethiopia
	}
	text = {
		localization_key = BBA_italy_interaction_events.27.desc_standard
	}
}

#Italy negotiates for Somaliland
defined_text = { 
	name = NegotiatingItalianClaimsTitle
	text = { #If Ethiopia refused to sign the peace deal
		trigger = { 
			FROM = {
				has_country_flag = ETH_refused_forced_peace_flag
			}	
		}
		localization_key = BBA_italy_interaction_events.31.t_refused_peace
	}
	text = { #If there is no war between Italy or Ethiopia, or England doesn't host Ethiopia's exiled government
		localization_key = BBA_italy_interaction_events.31.t_negotiate_claims
	}
}
#Italy negotiates for Somaliland
defined_text = { 
	name = GetRatifyStresaFrontEventDesc
	text = { #If Italy signed a peace treaty with Ethiopia
		trigger = { 
			has_country_flag = ITA_italy_suing_for_peace_flag 	
		}
		localization_key = BBA_italy_interaction_events.31.desc_peace_signed
	}
	text = { #If Ethiopia refused to sign the peace deal
		trigger = { 
			FROM = {
				has_country_flag = ETH_refused_forced_peace_flag
			}	
		}
		localization_key = BBA_italy_interaction_events.31.desc_no_peace_deal
	}
	text = { #If there is no war between Italy or Ethiopia, or England doesn't host Ethiopia's exiled government
		localization_key = BBA_italy_interaction_events.31.desc_no_war
	}
}

defined_text = { #Italy's Negotiate Claims event for ENG
	name = GetItalyWantsSocotra
	text = {
		trigger = {
			ROOT = {
				NOT = {
					has_country_flag = ITA_italy_has_started_negotiations_flag
				}
			}
		}
		localization_key = BBA_italy_interaction_events.33.desc_first_negotiation
	}
	text = {
		localization_key = BBA_italy_interaction_events.33.desc_continued_negotiation
	}
}

defined_text = { #Italy's Negotiate Claims event for ENG
	name = GetItalyWantsMalta
	text = {
		trigger = {
			ROOT = {
				NOT = {
					has_country_flag = ITA_italy_has_started_negotiations_flag
				}
			}
		}
		localization_key = BBA_italy_interaction_events.35.desc_first_negotiation
	}
	text = {
		localization_key = BBA_italy_interaction_events.35.desc_continued_negotiation
	}
}

defined_text = { #Italy's Negotiate Claims event for FRA
	name = GetItalyWantsTunisia
	text = {
		trigger = {
			ROOT = {
				NOT = {
					has_country_flag = ITA_italy_has_started_negotiations_flag
				}
			}
		}
		localization_key = BBA_italy_interaction_events.34.desc_first_negotiation
	}
	text = {
		localization_key = BBA_italy_interaction_events.34.desc_continued_negotiation
	}
}

defined_text = { #Italy's Negotiate Claims event for FRA
	name = GetItalyClaimsBalkan
	text = {
		trigger = {
			ROOT = {
				NOT = {
					has_country_flag = ITA_italy_has_started_negotiations_flag
				}
			}
		}
		localization_key = BBA_italy_interaction_events.36.desc_first_negotiation
	}
	text = {
		localization_key = BBA_italy_interaction_events.36.desc_continued_negotiation
	}
}

defined_text = { #Text for Italy
	name = GetItaloEthiopianPeaceDemands
	text = {
		trigger = {
			FROM = { #England has the country flag
				has_country_flag = ITA_italy_asks_ethiopian_host_for_help
			}
		}
		localization_key = BBA_italo_ethiopian_war_events.500.desc_guarantees
	}
	text = {
		localization_key = BBA_italo_ethiopian_war_events.500.desc_territories
	}
}

defined_text = { #Text for England
	name = GetItalyRefusesPeaceTalks
	text = {
		trigger = {
			has_country_flag = ITA_italy_asks_ethiopian_host_for_help
		}
		localization_key = BBA_italo_ethiopian_war_events.502.desc_guarantees
	}
	text = {
		localization_key = BBA_italo_ethiopian_war_events.502.desc_territories
	}
}



#####################
#### MISSIOLINIS ####
#####################

defined_text = { #Color for Strengthened Industry missiolini tooltip.
	name = GetColorNumOfCivsMissiolinis
	text = {
		trigger = {
			NOT = { num_of_civilian_factories < ITA_missiolinis_required_civs }
		}
		localization_key = SOV_propaganda_campaigns_taken_requirement_color_green
	}
	text = {
		localization_key = SOV_propaganda_campaigns_taken_requirement_color_red
	}
}




###PURGE THE PARY#####
defined_text = { #Titles for Purge the Party News Event
	name = GetPurgeEventTitles
	text = { #SOME is purged
		trigger = { 
			OR = {
				AND = {
					has_country_flag = ITA_some_fascists_purged 
					NOT = { has_country_flag = ITA_many_fascists_purged }
				}
				AND = {
					has_country_flag = ITA_many_fascists_purged
					has_country_flag = ITA_no_fascists_purged
				}
			}
		}
		localization_key = bba_news.100.t_some_purged
	}
	text = { #MANY is purged
		trigger = { 
			NOT = { has_country_flag = ITA_no_fascists_purged }
			has_country_flag = ITA_many_fascists_purged 
		}
		localization_key = 	bba_news.100.t_many_purged
	}
	text = { #NONE is purged
		localization_key = 	bba_news.100.t_none_purged
	}
}

defined_text = { #Description for Purge the Party News Event
	name = GetPurgeEventDesc
	text = { #SOME is purged
		trigger = { 
			OR = {
				AND = {
					has_country_flag = ITA_some_fascists_purged 
					NOT = { has_country_flag = ITA_many_fascists_purged }
				}
				AND = {
					has_country_flag = ITA_many_fascists_purged
					has_country_flag = ITA_no_fascists_purged
				}
			}
		}
		localization_key = bba_news.100.desc_some_purged
	}
	text = { #MANY is purged
		trigger = { 
			NOT = { has_country_flag = ITA_no_fascists_purged }
			has_country_flag = ITA_many_fascists_purged 
		}
		localization_key = 	bba_news.100.desc_many_purged
	}
	text = { #NONE is purged
		localization_key = 	bba_news.100.desc_none_purged
	}
}

defined_text = { #Options for Purge the Party News Event
	name = GetPurgeEventOptions
	text = { #SOME is purged
		trigger = { 
			OR = {
				AND = {
					has_country_flag = ITA_some_fascists_purged 
					NOT = { has_country_flag = ITA_many_fascists_purged }
				}
				AND = {
					has_country_flag = ITA_many_fascists_purged
					has_country_flag = ITA_no_fascists_purged
				}
			}
		}
		localization_key = bba_news.100.a_some_purged
	}
	text = { #MANY is purged
		trigger = { 
			NOT = { has_country_flag = ITA_no_fascists_purged }
			has_country_flag = ITA_many_fascists_purged 
		}
		localization_key = 	bba_news.100.a_many_purged
	}
	text = { #NONE is purged
		localization_key = 	bba_news.100.a_none_purged
	}
}

defined_text = { #The Trial of Mussolini Title
	name = GetTrialOfMussoliniTitles
	text = { #INNOCENT
		trigger = { 
			has_country_flag = ITA_mussolini_is_innocent 	
		}
		localization_key = bba_news.102.t_innocent
	}
	text = { #GUILTY
		trigger = { 
			has_country_flag = ITA_mussolini_is_guilty	
		}
		localization_key = bba_news.102.t_guilty
	}
}

defined_text = { #The Trial of Mussolini Description
	name = GetTrialOfMussoliniDesc
	text = { #INNOCENT
		trigger = { 
			has_country_flag = ITA_mussolini_is_innocent 	
		}
		localization_key = bba_news.102.desc_innocent
	}
	text = { #GUILTY
		trigger = { 
			has_country_flag = ITA_mussolini_is_guilty	
		}
		localization_key = bba_news.102.desc_guilty
	}
}

defined_text = { #The Assassination of Mussolini Title
	name = GetAssassinationOfMussoliniTitles
	text = { #Communists
		trigger = { 
			has_country_flag = ITA_mussolini_blame_communists	
		}
		localization_key = bba_news.103.t_communists
	}
	text = { #Cover Story
		trigger = { 
			has_country_flag = ITA_mussolini_cover_story	
		}
		localization_key = bba_news.103.t_coverstory
	}
}

defined_text = { #The Assassination of Mussolini Description
	name = GetAssassinationOfMussoliniDesc
	text = { #Communists
		trigger = { 
			has_country_flag = ITA_mussolini_blame_communists	
		}
		localization_key = bba_news.103.desc_communists
	}
	text = { #Cover Story
		trigger = { 
			has_country_flag = ITA_mussolini_cover_story	
		}
		localization_key = bba_news.103.desc_coverstory
	}
}

defined_text = { #Italy Guarentees Major Back Tooltip
	name = GetItalyGuaranteesMajor
	text = { #Italy has non_aggression pact with Major
		trigger = { 
			any_country = {
				is_major = yes
				has_non_aggression_pact_with = ROOT
			}
		}
		localization_key = ITA_italy_will_guarantee_tt_fulfilled
	}
	text = { #Standard
		localization_key = ITA_italy_will_guarantee_tt_standard
	}
}

defined_text = { #Titles Vittorio Emanuele III Dies
	name = GetVittorioDiesEventTitles
	text = { #Emperor Title
		trigger = { 
			has_completed_focus = ITA_proclaim_the_italian_empire
		}
		localization_key = bba_news.106.t_emperor
	}
	text = { #King Title
		localization_key = bba_news.106.t_king
	}
}

defined_text = { #Desc Vittorio Emanuele III Dies
	name = GetVittorioDiesEventDesc
	text = { #Emperor Desc
		trigger = { 
			has_completed_focus = ITA_proclaim_the_italian_empire
		}
		localization_key = bba_news.106.desc_emperor
	}
	text = { #King Desc
		localization_key = bba_news.106.desc_king
	}
}

defined_text = { #Decolonization event 
	name = GetDecolonizationEventDesc
	text = { #Someone Decolonized
		trigger = { 
			has_country_flag = ITA_someone_decolonized_flag 
		}
		localization_key = BBA_italy_anti_colonialism_events.21.desc_accepted
	}
	text = { #No one Decolonized - DEFAULT
		localization_key = BBA_italy_anti_colonialism_events.21.desc_rejected
	}
}

defined_text = { #Proclamation of Anarchist Confederation
	name = GetAnarchistConfederationEventDesc
	text = { #Anarchist Spain exists
		trigger = { 
			country_exists = SPC 
		}
		localization_key = bba_news.111.desc_joint_proclamation
	}
	text = { #Anarchist Spain does NOT exist - DEFAULT
		localization_key = bba_news.111.desc_single_proclamation
	}
}

defined_text = { #Litoranea Balbo name based on political path
	name = GetAppropriateLitoraneaBalboName
	text = {
		trigger = { 
			has_completed_focus = ITA_defy_the_duce
		}
		localization_key = ITA_litoranea_balbo_alt
	}
	text = {
		localization_key = ITA_litoranea_balbo_default
	}
}

defined_text = { #Moschettieri del Duce name based on political path
	name = GetAppropriateMoschetieridelDuceName
	text = { # Anti-Fascist
		trigger = { 
			has_completed_focus = ITA_defy_the_duce
		}
		localization_key = ITA_moschettieri_del_duce_alt
	}
	text = { # King
		trigger = { 
			has_completed_focus = ITA_monarchia_d_italia
		}
		localization_key = ITA_moschettieri_del_duce_king
	}
	text = { # Default - Duce
		localization_key = ITA_moschettieri_del_duce_default
	}
}

defined_text = { #Albanian Fascist Militia name based on political path
	name = GetAppropriateAlbanianFascistMilitiaName
	text = { # King
		trigger = { 
			has_completed_focus = ITA_monarchia_d_italia
		}
		localization_key = ITA_albanian_fascist_militia_alt
	}
	text = { # Default - Duce
		localization_key = ITA_albanian_fascist_militia_default
	}
}


# GFX FOR EVENTS

defined_text = { #Pressure Government GFX
	name = GetPressureGovernmentGFX
	text = { #SOV
		trigger = { 
			original_tag = SOV
		}
		localization_key = GFX_report_event_SOV_demands
	}
	text = { #Default: Generic
		localization_key = GFX_report_event_generic_sign_treaty2
	}
}

defined_text = { #Promote Ideology GFX
	name = GetPromotingIdeologyGFX
	text = { #SOV
		trigger = { 
			original_tag = SOV
		}
		localization_key = GFX_report_event_soviet_purge_speech
	}
	text = { #Default: Generic
		localization_key = GFX_report_event_communist_leader
	}
}

defined_text = { #Country Becomes Puppet GFX
	name = GetCountryBecomesPuppetGFX
	text = { #SOV
		trigger = { 
			original_tag = SOV
		}
		localization_key = GFX_report_event_stalin_propaganda
	}
	text = { #Default: Generic
		localization_key = GFX_report_event_generic_military_parade
	}
}

defined_text = { #Country Changes Government GFX
	name = GetCountryChangesGovernmentGFX
	text = { #SOV
		trigger = { 
			original_tag = SOV
		}
		localization_key = GFX_report_event_stalin_propaganda
	}
	text = { #Default: Generic
		localization_key = GFX_report_event_fascist_militia
	}
}

defined_text = { #Ultimatum GFX
	name = GetUltimatumGFX
	text = { #SOV
		trigger = { 
			original_tag = SOV
		}
		localization_key = GFX_report_event_SOV_demands
	}
	text = { #Default: Generic
		localization_key = GFX_report_event_generic_read_write
	}
}
