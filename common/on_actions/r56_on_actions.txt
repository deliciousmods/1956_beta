
on_actions = {
	on_create_faction = {
		effect = {
			if = {
				limit = { is_ai = yes }
				if = {
					limit = {
						original_tag = ROM
						has_completed_focus = ROM_balkans_dominance
					}
					if = {
						limit = {
							has_country_leader = {
								name = "Corneliu Codreanu"
								ruling_only = yes
							}
							has_government = fascism
						}
						create_faction = "Legionary Blood Oath"
						news_event = { id = news.159 }
					}
					if = {
						limit = {
							has_government = democratic
						}
						create_faction = "League of Balkanic Cooperation"
						news_event = { id = news.159 }
					}
					if = {
						limit = {
							has_government = neutrality
						}
						create_faction = "Treaty of Bucharest"
						news_event = { id = news.159 }
					}
				}
				else_if = {
					limit = {
						original_tag = GRE
						owns_state = 797
						controls_state = 797
						797 = { is_capital = yes }
					}
					if = {
						limit = {
							has_government = democratic
						}
						create_faction = "Treaty of Constantinople"
						news_event = { id = news.159 }
					}
					if = {
						limit = {
							has_government = neutrality
						}
						create_faction = "Blachernae Protocols"
						news_event = { id = news.159 }
					}
					if = {
						limit = {
							has_government = fascism
						}
						create_faction = "Sacred Roman Treaty"
						news_event = { id = news.159 }
					}
				}
				else_if = {
					limit = {
						original_tag = MEX
						has_government = neutrality
					}
					create_faction = "Convention of Mexico"
					news_event = { id = news.159 }
				}
				else_if = {
					limit = {
						original_tag = USA
						has_government = democratic
					}
					create_faction = "United Nations"
					news_event = { id = news.159 }
				}
			}
		}
	}

	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			if = {
				limit = {
					tag = CAN
					FROM = { tag = QBC }
				}
				#Quebec conscription crisis: Canada
				466 = {
					add_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					set_state_flag = quebec_conscription_crisis_flag
				}
				468 = {
					add_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					set_state_flag = quebec_conscription_crisis_flag
				}
			}
			if = {
				limit = {
					tag = GER
					NOT = { has_government = democratic }
					date < 1941.01.01
				}
				if = {
					limit = { FROM = { tag = HOL } }
					USA = {
						set_country_flag = { flag = USA_dutch_window days = 60 value = 1 }
					}
				}
				else_if = {
					limit = { FROM = { tag = ENG } }
					USA = {
						set_country_flag = { flag = USA_british_window days = 120 value = 1 }
					}
				}
			}
			if = {
				limit = {
					FROM = {
						tag = AUS
						NOT = { has_cosmetic_tag = HUN_EMPIRE }
					}
				}
				AUS = {
					set_politics = { ruling_party = democratic elections_allowed = yes }
					add_popularity = {
						ideology = democratic
						popularity = 0.45
					}
					load_focus_tree = generic_focus
					if = {
						limit = {
							NOT = {
								has_idea = AUS_austrian_neutrality
							}
						}
						add_ideas = AUS_austrian_neutrality
					}
				}
			}

			if = {
				limit = {
					FROM = { tag = CZE }
				}
				CZE = {
					set_politics = { ruling_party = democratic elections_allowed = yes }
					add_popularity = {
						ideology = democratic
						popularity = 0.5
					}
					load_focus_tree = generic_focus
					remove_ideas = {
						emil_hacha
						CZKE_national_unity_government_idea
						CZKE_fifth_column
						CZKE_fifth_column_2
						CZKE_unruly_minorities
						CZKE_unruly_minorities_2
					}
					if = {
						limit = {
							ENG = {
								has_government = democratic
								democratic > 0.35
							}
							ROOT = {
								NOT = { tag = ENG }
							}
						}
						every_operative = {
							limit = {
								has_trait = operative_double_agent
							}
							turn_operative = { turned_by = ENG }
						}
					}
				}
			}
			#probably remove in the future to avoid clones
			if = {
				limit = {
					ROOT = { tag = AUS }
					FROM = {
						tag = HUN
						is_ai = yes
					}
				}
				AUS = {
					create_operative_leader = {
						name = "Eugenio Zilahy Kiss"
						portrait_path = gfx/leaders/Europe/portrait_europe_generic_operative_male_5.dds
						traits = { operative_well_groomed }
						bypass_recruitment = no
						available_to_spy_master = yes
						nationalities = { HUN AUS ARG }
					}
				}
			}
			if = {
				limit = {
					OR = {
						is_independent_warlords = no
						NOT = { has_country_flag = is_warlords }
					}
					FROM = {
						tag = event_target:KMT_central_gov_tag
					}
				}
				if = {
					limit = {
						NOT = { original_tag = FROM }
					}
					clear_global_event_target = KMT_central_gov_tag
					set_global_flag = KMT_central_government_destroyed
#					every_other_country = {
#						limit = {
#							OR = {
#								is_independent_warlords = yes
#								has_country_flag = is_warlords
#							}
#						}
#						country_event = { id = claim_central.6 }
#					}
				}
				else = {
					set_country_flag = KMT_central_government_flag
					save_global_event_target_as = KMT_central_gov_tag
					capital_scope = {
						set_state_flag = KMT_central_gov_capital
					}
#					country_event = { id = claim_central.7 }
#					every_other_country = {
#						limit = {
#							OR = {
#								is_independent_warlords = yes
#								has_country_flag = is_warlords
#							}
#
#						}
#						country_event = { id = claim_central.8 }
#					}
				}
			}
		}
	}

###---> On Capitulation <><> <><> <><>
	on_capitulation = { #ROOT is surrendering country, FROM is winner.
		effect = {
			if = {
				limit = {
					is_major = yes
				}
				set_major = no
			}

			every_state = {
				limit = { has_state_flag = r56_aluminium_collection }
				add_resource = {
					type = aluminium
					amount = -1
				}
				clr_state_flag = r56_aluminium_collection
			}
			if = { #
				limit = { tag = VIC }
				random_other_country = {
					limit = {
						has_country_flag = free_france
					}
					annex_country = { target = VIC transfer_troops = yes }
				}
			}
			if = { #MOD. Small OPT
				limit = {
					has_dlc = "Man the Guns"
					has_government = democratic
				}
				if = {
					limit = {
						original_tag = RAJ
						is_subject_of = ENG
					}
					drop_cosmetic_tag = yes
				}
				else_if = {
					limit = {
						original_tag = MAL
						is_subject_of = ENG
					}
					drop_cosmetic_tag = yes
				}
				else_if = {
					limit = {
						original_tag = INS
						is_subject_of = HOL
					}
					drop_cosmetic_tag = yes
				}
			}
			if = {
				limit = {
					original_tag = DNZ
					DNZ = {
						NOT = { has_country_flag = r56_dnz_dont_lose_cores }
					}
				}
				85 = { remove_core_of = DNZ }
			}
			if = {
				limit = {
					original_tag = RUT
					RUT = {
						has_country_flag = r56_UPA_check
					}
				}
				RUT = {
					country_event = { id = axis_minors_ruthenia.8 days = 1 }
				}
				every_state = { 
					limit = {
						is_core_of = RUT
						NOT = {
							is_owned_and_controlled_by = UKR
							is_owned_and_controlled_by = DOU
						}
					}
					add_dynamic_modifier = { modifier = r56_upa_state_modifier } 
				}
			}
			if = {
				limit = {
					original_tag = CHI
					CHI = {
						has_completed_focus = KMT_the_big_rear_concept
					}
				}
				every_state = {
					limit = {
						has_dynamic_modifier = {
							modifier = r56_the_big_rear
						}
					}
					remove_dynamic_modifier = { modifier = r56_the_big_rear } 
				}
				
			}
			if = {
				limit = {
					original_tag = CHI
					CHI = {
						has_completed_focus = KMT_the_big_rear_concept
					}
				}
				every_state = {
					limit = {
						has_dynamic_modifier = {
							modifier = r56_the_big_rear
						}
					}
					remove_dynamic_modifier = { modifier = r56_the_rear } 
				}
				
			}
			if = {
				limit = {
					original_tag = CHI
					CHI = {
						has_completed_focus = KMT_lure_them_in_strategy
					}
				}
				every_state = {
					limit = {
						has_dynamic_modifier = {
							modifier = r56_lure_them_in
						}
					}
					remove_dynamic_modifier = { modifier = r56_lure_them_in } 
				}
			}
			if = {
				limit = {
					original_tag = DEN
					OR = {
						ICE = { is_subject_of = DEN }
						DEN = { owns_state = 100 }
						ICE = { owns_state = 100 }
					}
					NOR = {
						NOT = {
							has_completed_focus = NOR_reclaim_the_islands
							has_completed_focus = NOR_icelandic-faroese_revolt
							has_completed_focus = NOR_reclaim_danish
							has_completed_focus = NOR_unite_the_scandinavian_workers
						}
					}
				}
				country_event = { id = wtt_denmark.1 days = 1 }
			}

			if = {
				limit = {
					ROOT = {
						OR = {
							tag = SHX
							tag = GXC
							tag = XSM
							tag = YUN
							tag = SIK
							tag = TNG
							tag = CHI
						}
						has_country_flag = is_warlords
						is_in_faction_with = event_target:KMT_central_gov_tag
						has_idea = KMT_united_front
					}
				}
				event_target:KMT_central_gov_tag = {
					country_event = { id = kmt.300 }
				}
			}

			if = {
				limit = {
					ROOT = {
						tag = MAN
						is_subject_of = JAP
						has_country_leader = {
							name = "Aisin Gioro Puyi"
							ruling_only = yes
						}
					}
					FROM = {
						OR = {
							tag = CHI
							tag = PRC
							tag = event_target:KMT_central_gov_tag
						}
					}
				}
				FROM = {
					country_event = { id = kmt.303 }
				}
			}

			if = {
				limit = {
					ROOT = {
						OR = {
							tag = PGR
							has_cosmetic_tag = HCPC
						}
						is_puppet_of = CHI
					}
				}
				CHI = {
					country_event = { id = kmt.300 }
				}
				MEN = {
					transfer_state = 611
				}
			}
			if = {
				limit = {
					original_tag = ITA
					ITA = {
						NOT = {
							has_completed_focus = ITA_royal_intervention
						}
						has_government = fascism
						has_completed_focus = ITA_militarize_the_rome_protocols
						has_war_with = GER
					}
					GER = {
						has_government = fascism
						has_war_with = ITA
					}
				}
				ITA = {
					set_cosmetic_tag = ITA_RSI
					set_party_name = {
						ideology = fascism
						long_name = "Partito Fascista Repubblicano"
						name = "PFR"
					}
					retire_ideology_leader = fascism
					if = {
						limit = {
							NOT = {
								has_country_flag = r56_ita_badoglio_is_leader
							}
						}
						if = {
							limit = { has_unit_leader = 690 }
							remove_unit_leader = 690
						}
						create_country_leader = {
							name = "Pietro Badoglio"
							desc = " "
							picture = "gfx/leaders/ITA/Portrait_Italy_Pietro_Badoglio.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = {
								army_connections
							}
						}
					}
				}
			}

			if = {
				limit = { original_tag = POL }
				if = {
					limit = { has_unit_leader = 3180 }
					remove_unit_leader = 3180
				}
				if = {
					limit = {
						NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
						NOT = { has_completed_focus = POL_Seek_Autonomy }
					}
					POL = { set_party_name = { ideology = communism long_name = POL_GL_party_long name = POL_GL_party } }
				}
				if = {
					limit = {
						POL = { is_puppet = no }
					}
					POL = { set_party_name = { ideology = fascism long_name = POL_KN_party_long name = POL_KN_party } }
					POL = { set_party_name = { ideology = neutrality long_name = POL_ZWZ_party_long name = POL_ZWZ_party } }
					set_cosmetic_tag = POLAK
				}
				if = { #MOD. Optimized a little.
					limit = {
						POL = {
							has_civil_war = no
							is_puppet = no
							is_in_faction = yes
							NOT = { has_country_flag = POL_Exile_Government_Formed }
						}
					}
					set_country_flag = POL_Exile_Government_Formed
					if = {
						limit = { POL = { has_government = neutrality } }
						POL = { country_event = poland.196 }
					}
					else_if = {
						limit = { POL = { has_government = democratic } }
						if = {
							limit = {
								POL = {
									NOT = { has_completed_focus = POL_The_Polish_Socialist_Party }
									NOT = { has_completed_focus = POL_The_Endecja_Movement }
								}
							}
							add_offsite_building = { type = arms_factory level = 1 }
							create_country_leader = {
								name = "Władysław Sikorski"
								desc = " "
								picture = "Portrait_Poland_Wladyslaw_Sikorski.dds"
								expire = "1965.1.1"
								ideology = liberalism
								traits = {
									democratic_reformer
									r56_trait_opposed_to_communism
								}
							}
						}
						else_if = {
							limit = { POL = { has_completed_focus = POL_The_Polish_Socialist_Party } }
							POL = { country_event = poland.198 }
						}
						else = {
							set_global_flag = Dmowski_dead
							create_country_leader = {
								name = "Tadeusz Bielecki"
								desc = " "
								picture = "r56_portrait_POL_Tadeusz_Bielecki.dds"
								expire = "1965.1.1"
								ideology = conservatism
								traits = {
									polish_nationalist
									political_pragmatist
									dislikes_germany
								}
							}
							POL = { set_party_name = { ideology = democratic long_name = POL_NOW_long name = POL_NOW_party } }
						}
					}
				}

				94 = { add_core_of = BLR }
				97 = { add_core_of = BLR }
				862 = { add_core_of = BLR }
				863 = { add_core_of = BLR }
				95 = { add_core_of = BLR }
				96 = { add_core_of = BLR }
				89 = { add_core_of = UKR }
				91 = { add_core_of = UKR }
				93 = { add_core_of = UKR }
				784 = { add_core_of = LIT }
			}

			if = {
				limit = { original_tag = GER }
				if = {
					limit = {
						has_global_flag = had_yalta_conference
						NOT = {
							has_global_flag = r56_we_killed_no_no_man
						}
						has_country_leader = {
							name = "Adolf Hitler"
							ruling_only = yes
						}
					}
					kill_ideology_leader = fascism
					create_country_leader = { #more of a easter egg since at this point Germany can't come back from Yalta
						name = "Karl Donitz"
						desc = " "
						picture = "Portrait_Germany_Karl_Donitz.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							retired_admiral
						}
					}
				}
				if = {
					limit = {
						has_country_flag = r56_GER_endsieg_event_happened
						NOT = {
							has_country_flag = r56_GER_endsieg_event_pullback_happened
						}
					}
					delete_unit_template_and_units = {
						division_template = "Volkssturm"
						disband = yes
					}
					delete_unit_template_and_units = {
						division_template = "Heeresgruppe"
						disband = yes
					}
				}
				if = {
					limit = { has_idea = r56_endsieg_idea }
					remove_ideas = r56_endsieg_idea
				}
				if = {
					limit = {
						has_global_flag = had_yalta_conference
						GER = { has_government = fascism }
					}
					#MOD. Reduced.
					every_state = { #removing old German cores
						# 58, 56, 59, 54, 53, 52, 850, 51, 42
						# 42, 51, 52, 53, 54, 56, 58, 59, 850
						# 850, 42, 51. France border
						limit = { is_core_of = GER is_core_of = WGR }
						THIS = { remove_core_of = GER }
					}
					for_each_scope_loop = { #Reduced with array black magic.
						array = GER.core_states #Only check German cores
						if = {
							limit = { #Affect only these states.
								OR = {
									state = 28 state = 39 state = 63 state = 66 state = 67 state = 68 state = 69 state = 85 state = 86 state = 152 state = 153 state = 188 state = 807 state = 885 state = 893
								}
							}
							THIS = { remove_core_of = GER }
						}
					}

					if = { #Remove Claims.
						limit = {
							69 = {
								is_claimed_by = GER
							}
						}
						GER = {
							remove_state_claim = 69
						}
					}
					if = {
						limit = {
							892 = {
								is_claimed_by = GER
							}
						}
						GER = {
							remove_state_claim = 892
						}
					}
					if = {
						limit = {
							86 = {
								is_claimed_by = GER
							}
						}
						GER = {
							remove_state_claim = 86
						}
					}
					if = {
						limit = {
							807 = {
								is_claimed_by = GER
							}
						}
						GER = {
							remove_state_claim = 807
						}
					}
					if = {
						limit = {
							762 = {
								is_claimed_by = GER
							}
						}
						GER = {
							remove_state_claim = 762
						}
					}
					if = {
						limit = {
							885 = {
								is_claimed_by = GER
							}
						}
						GER = {
							remove_state_claim = 885
						}
					}
				}
			}
		}
	}

	on_civil_war_end_before_annexation = {
		effect = {
			if = {
				limit = {
					FROM = {
						original_tag = GER
					}
					NOT = {
						has_global_flag = goering_in_flight
					}
				}
				random_list = {
					60 = {
						set_global_flag = goering_in_flight
					}
					40 = {
						
					}
				}
			}
			if = {
				limit = {
					FROM = { original_tag = SPR }
					NOT = {
						any_other_country = {
							NOT = {
								tag = ROOT
								tag = FROM
							}
							original_tag = SPR
							exists = yes
						}
					}
				}
				if = {
					limit = {
						ROM = { has_country_flag = BUL_sent_volunteers_to_SPD_flag }
					}
					ROM = {
						set_country_flag = BUL_back_from_the_scw_flag
						clr_country_flag = BUL_sent_volunteers_to_SPD_flag
						army_experience = 50
						air_experience = 25
						add_tech_bonus = {
							name = FRA_army_reform
							bonus = 0.5
							uses = 1
							category = land_doctrine
						}
					}
				}
				else_if = {
					limit = {
						ROM = { has_country_flag = BUL_sent_volunteers_to_SPA_flag }
					}
					ROM = {
						clr_country_flag = BUL_sent_volunteers_to_SPA_flag
						army_experience = 50
						air_experience = 25
						add_tech_bonus = {
							name = FRA_army_reform
							bonus = 0.5
							uses = 1
							category = land_doctrine
						}
					}
				}
			}
			if = {
				limit = {
					FROM = { original_tag = HUN }
				}
				FROM = {
					every_unit_leader = {
						set_unit_leader_flag = hungarian_rebel
						set_nationality = FAK
					}
				}
			}

			if = {
				limit = {
					FROM = {
						original_tag = INS
						OR = {
							is_puppet_of = HOL
							AND = {
								is_puppet_of = JAP
								JAP = {
									has_government = democratic
									has_completed_focus = JAP_pacific_guardian
								}
							}
						}
					}
				}
				FROM = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = HOL_indonesia_commander
						}
						set_nationality = HOL
					}
				}
			}
		}
	}

	on_subject_free = {
		effect = {
			if = {
				limit = {
					ROOT = {
						original_tag = INS			
					}
				}
				ROOT = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = HOL_indonesia_commander
						}
						set_nationality = HOL
					}	
				}
			}
			if = {
				limit = {
					original_tag = INS
					has_cosmetic_tag = INS_HOL
				}
				drop_cosmetic_tag = yes
			}
			if = {
				limit = { original_tag = TML }
				every_unit_leader = {
					limit = { has_unit_leader_flag = POR_colonial_commander }
					set_nationality = POR
				}
				set_party_name = {
					ideology = neutrality
					long_name = "Partido Social Democrata"
					name = "PSD"
				}
				set_province_name = { id = 12206 name = "Oecussi"}
				if = {
					limit = { has_cosmetic_tag = TML_POR }
					drop_cosmetic_tag = yes
				}
				if = {
					limit = { date > 1936.01.01 }
					retire_ideology_leader = neutrality
				}
			}
			if = {
				limit = { original_tag = SAF }
				if = {
					limit = { has_cosmetic_tag = SAF_ENG }
					drop_cosmetic_tag = yes
				}
				if = {
					limit = { date > 1936.01.01 }
					retire_ideology_leader = neutrality
				}
				set_party_name = {
					ideology = neutrality
					long_name = "African National Congress"
					name = "ANC"
				}
			}
			if = {
				limit = { 
					original_tag = KOR 
					}
				set_party_name = {
					ideology = fascism
					long_name = "National Association"
					name = "NA"
				}
				if = {
					limit = { date > 1936.01.01 }
					retire_ideology_leader = fascism
				}
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							original_tag = RAJ
							original_tag = MAL
						}
					}
				}
				ROOT = {
					every_unit_leader = {
						limit = { has_unit_leader_flag = ENG_colonial_commander }
						set_nationality = ENG
					}
				}
			}
		}		
	}

###---> On Civil War End <><> <><> <><>
	#ROOT is winner #FROM gets annexed - This will also fire on_annex
	on_civil_war_end = {
		effect = {
			#Cordeanu's revolt
			if = {
				limit = { original_tag = ROM }
				#Cordeanu's revolt, iron guard victory
				if = {
					limit = {
						has_government = fascism
						has_global_flag = cordeanu_civil_war
					}
					clr_global_flag = cordeanu_civil_war
					delete_unit_template_and_units = {
						division_template = "Iron Guard Brigade"
					}
					news_event = { id = r56.news_event.24 days = 2 random_days = 2 }
				}
				#Cordeanu's revolt, monarchist victory
				if = {
					limit = {
						OR = {
							has_government = neutrality
							has_government = democratic
						}
						has_global_flag = cordeanu_civil_war
					}
					clr_global_flag = cordeanu_civil_war
					delete_unit_template_and_units = {
						division_template = "Sentinel of the Motherland"
					}
					news_event = { id = r56.news_event.25 days = 2 random_days = 2 }
				}
				if = {
					limit = {
						OR = {
							has_government = neutrality
							has_government = democratic
						}
						has_focus_tree = generic_focus
						has_dlc = "Death or Dishonor"
					}
					load_focus_tree = { tree = romanian_focus keep_completed = yes }
					complete_national_focus = ROM_institute_royal_dictatorship
					complete_national_focus = ROM_preserve_greater_romania
				}
			}
			#YUG DOD specific as the BFTB rework of YUG was a bit unsatisfactory
			if = {
				limit = {
					OR = {
						original_tag = ROM
						original_tag = HUN
						original_tag = ALB
						original_tag = GRE
						original_tag = BUL
					}

					has_government = communism
					YUG = {
						has_completed_focus = YUG_pan_slavic_workers_congress
						has_government = communism
						has_country_flag = instigating_a_coup
					}
				}
				YUG = {
					add_to_faction = ROOT
				}
				add_opinion_modifier = { target = YUG modifier = huge_increase }
			}
			if = {
				limit = {
					FROM = { original_tag = USA }
				}
				if = {
					limit = {
						has_cosmetic_tag = USA_REBEL
					}
					drop_cosmetic_tag = yes
				}
				every_country = {
					limit = { original_tag = CAN }
					remove_ideas = CAN_american_intervention
				}
			}
			#End of Turkish Civil War
			if = {
				limit = {
					FROM = {
						original_tag = TUR
						OR = {
							has_government = communism
							has_government = neutrality
						}
					}
					original_tag = TUR
					has_global_flag = TUR_civil_war
					NOT = {
						has_global_flag = TUR_civil_war_end
					}
				}
				country_event = { id = turkey.13 days = 1 }
			}

			if = {
				limit = {
					FROM = { original_tag = POR }
				}
				every_country = {
					limit = { original_tag = POR }
					remove_ideas = POR_civil_war_surrender_debuff
				}
			}
			if = {
				limit = {
					ROOT = { original_tag = SPR }
				}
				every_country = {
					limit = { original_tag = SPR }
					remove_ideas = SPR_r56_non_intervention_agreement
					set_capital = { state = 41 }
				}
			}

			# Greek CW
			if = { #MOD. Compressed.
				limit = {
					FROM = { original_tag = GRE }
					ROOT = { original_tag = GRE }
				}
				set_capital = { state = 47 }
				if = {
					limit = { ROOT = { has_government = fascism } }
					country_event = { id = greece.49 }
				}
				if = {
					limit = { ROOT = { has_government = communism } }
					country_event = { id = greece.47 }
				}
			}

			#End of SCW
			#spread revolution Albania commies win
			if = {
				limit = {
					FROM = { original_tag = ALB }
					ROOT = { original_tag = ALB }
				}
				set_capital = { state = 44 }
			}
			#Polish Civil War
			if = {
				limit = {
					FROM = {
						original_tag = FRA
					}
					ROOT = {
						original_tag = FRA
					}
				}
				set_capital = { state = 16 }
			}			
			#Polish Civil War
			if = {
				limit = {
					FROM = {
						original_tag = POL
					}
					ROOT = {
						original_tag = POL
					}
				}
				set_capital = { state = 10 }
			}
			#Romanian Civil War
			if = {
				limit = {
					FROM = {
						original_tag = ROM
					}
					ROOT = {
						original_tag = ROM
					}
				}
				set_capital = { state = 46 }
			}

			#spread revolution siam commies win
			if = {
				limit = {
					FROM = { original_tag = SIA }
					ROOT = { original_tag = SIA }
				}
				set_capital = { state = 289 }
			}

			#spread revolution indo commies win
			if = {
				limit = {
					FROM = { original_tag = INS }
					ROOT = { original_tag = INS }
				}
				set_capital = { state = 335 }
			}

			#spread revolution indian commies win
			if = {
				limit = {
					FROM = {
						original_tag = RAJ
					}
					ROOT = {
						original_tag = RAJ
						has_government = communism
					}
				}
				set_capital = { state = 439 }
			}

			#spread revolution malay commies win
			if = {
				limit = {
					FROM = {
						original_tag = MAL
					}
					ROOT = {
						original_tag = MAL
						has_government = communism
					}
				}
				set_capital = { state = 336 }
			}

			#Russian empire win
			if = {
				limit = {
					FROM = {
						original_tag = SOV
					}
					ROOT = {
						original_tag = SOV
						has_government = fascism
					}
				}
				set_capital = { state = 195 }
			}

# Swedish Civil War
			if = {
				limit = {
					FROM = { original_tag = SWE }
					ROOT = { original_tag = SWE }
				}
				set_capital = { state = 141 }
			}

# Italian Civil War
			else_if = {
				limit = {
					FROM = { original_tag = ITA }
					ROOT = { original_tag = ITA }
				}
				set_capital = { state = 2 } #put capital to Latium either way
				if = {
					#Fascist Wins Italian Civil War
					limit = { 
						ROOT = { 
							has_government = fascism 
						} 
					}
					delete_unit_template_and_units = {
						division_template = "Black Shirts"
					}
					#add victory event
					news_event = { id = r56.news_event.27 days = 2 random_days = 2 }
				}
				if = {
					#Loyalist Wins Italian Civil War
					limit = { ROOT = { has_government = neutrality } }
					delete_unit_template_and_units = {
						division_template = "Loyalist Milita"
					}
					news_event = { id = r56.news_event.28 days = 2 random_days = 2 }
				}
			}

			# Chilean Civil War
			else_if = {
				limit = {
					FROM = { original_tag = CHL }
					ROOT = { original_tag = CHL }
				}
				if = { #Reset capital
					limit = {
						ROOT = { controls_state = 279 }
					}
					set_capital = { state = 279 }
				}
				if = {
					limit = {
						ROOT = { NOT = { has_government = fascism } }
					}
					delete_unit_template_and_units = {
						division_template = "Anti-Nacistas Brigades"
					}
				}
			}

			#British civil war go back to London
			else_if = {
				limit = {
					FROM = { original_tag = ENG }
					ROOT = { original_tag = ENG }
				}
				set_capital = { state = 126 }
			}

			#Paraguay capital reset.
			else_if = {
				limit = {
					FROM = { original_tag = PAR }
					ROOT = { original_tag = PAR }
				}
				set_capital = { state = 301 }
			}

			#Japanese civil war
			else_if = {
				limit = {
					FROM = { original_tag = JAP }
					ROOT = { original_tag = JAP }
				}
				set_capital = { state = 282 }
			}
			#German civil war
			else_if = {
				limit = {
					FROM = { original_tag = GER }
					ROOT = { original_tag = GER }
				}
				set_capital = { state = 64 }
				if = {
					limit = {
						ROOT = {
							has_government = neutrality
							has_country_leader = {
								name = "Ludwig Beck"
								ruling_only = yes
							}
						}
						FROM = {
							NOT = { has_government = democratic }
						}
					}
					ROOT = {
						set_politics = {
							ruling_party = democratic
							elections_allowed = yes
						}
						add_popularity = {
							ideology = democratic
							popularity = 0.5
						}
						drop_cosmetic_tag = yes
					}
				}
			}

#Drop cosmetic tag (MAN)
			if = {
				limit = {
					FROM = { original_tag = MAN }
					ROOT = { original_tag = MAN }
				}
				if = {
					limit = { ROOT = { has_government = neutrality } }
					drop_cosmetic_tag = yes
				}
				if = {
					limit = {
						FROM = { has_government = neutrality }
						ROOT = { has_government = fascism }
					}
					set_country_flag = RFP_wins
					create_wargoal = {
						target = SOV
						type = annex_everything
					}
				}
			}

		#These are a little weird. Seem to be repeats of previous ones, with the added "controls_state" caveat.
			if = {
				limit = {
					FROM = {
						original_tag = MEX
					}
					ROOT = {
						original_tag = MEX
						controls_state = 277
					}
				}
				set_capital = { state = 277 }
			}
			if = {
				limit = {
					FROM = {
						original_tag = POR
					}
					ROOT = {
						original_tag = POR
						controls_state = 112
					}
				}
				set_capital = { state = 112 }
			}
			if = {
				limit = {
					FROM = {
						original_tag = ITA
					}
					ROOT = {
						original_tag = ITA
						controls_state = 2
					}
				}
				set_capital = { state = 2 }
			}
			if = {
				limit = {
					FROM = {
						original_tag = ENG
					}
					ROOT = {
						original_tag = ENG
						controls_state = 126
					}
				}
				set_capital = { state = 126 }
			}
		}
	}

###---> On Declare War <><> <><> <><>
	on_declare_war = {
		effect = {
# Give back POR focus tree to Salazarist Portugal if they win the civil war, copied from LAR
			if = { #Mod. Compressed. This may have the side effect of giving parts of Portugal's tree to "normal" civil wars.
				limit = {
					has_dlc = "La Resistance"
					has_civil_war = yes
					original_tag = POR
					FROM = { original_tag = POR }
					NOT = {
						has_game_rule = {
							rule = POR_focus_tree_selection
							option = R56_TREE
						}
					}
				}
				load_focus_tree = { tree = portuguese_focus keep_completed = no }
				unlock_national_focus = POR_estado_novo
				unlock_national_focus = POR_support_the_spanish_nationalists
				unlock_national_focus = POR_portuguese_legion
				# Give back POR focus tree to Salazarist Portugal if they win the civil war.
				if = {
					limit = {
						has_government = neutrality
						FROM = {
							OR = {
								has_government = fascism
								has_government = communism
							}
						}
					}
					unlock_national_focus = POR_strengthen_the_regime
				}
				# Give back POR focus tree to Fascist Portugal if they win the civil war.
				if = {
					limit = {
						has_government = fascism
						FROM = {
							OR = {
								has_government = neutrality
								has_government = democratic
							}
						}
					}
					unlock_national_focus = POR_national_syndicalism
				}
			}

			if = {
				limit = {
					ROOT = {
						OR = {
							has_government = fascism
							has_government = communism
						}
					}
					FROM = {
						has_government = neutrality
						OR = {
							AND = {
								is_guaranteed_by = ENG
								ENG = { has_government = democratic }
							}
							AND = {
								is_guaranteed_by = FRA
								FRA = { has_government = democratic }
							}
						}
						democratic < 0.3
						NOT = {
							has_country_flag = generic_guarantee_democratic_boost
						}
					}
				}
				FROM = {
					add_popularity = {
						ideology = democratic
						popularity = 0.1
					}
					set_country_flag = generic_guarantee_democratic_boost
				}
			}

			#remove Italian control over Albania if they are at war
			if = {
				limit = {
					ROOT = {
						OR = {
							original_tag = ALB
							original_tag = ITA
						}
					}
					FROM = {
						OR = {
							original_tag = ALB
							original_tag = ITA
						}
					}
				}
				ITA = {
					remove_resource_rights = 44
					remove_resource_rights = 836
				}
			}
			#Remove Soviet-Japanese oil agreement on North Sakhalin if they are at war.
			if = {
				limit = {
					ROOT = {
						OR = {
							original_tag = JAP
							original_tag = SOV
						}
					}
					FROM = {
						OR = {
							original_tag = JAP
							original_tag = SOV
						}
					}
				}
				JAP = {
					remove_resource_rights = 655
					remove_opinion_modifier = { target = SOV modifier = JAP_SOV_sakhalin_oil_agreement }
				}
			}
			#Japanese civil war
			if = { #MOD. Compressed
				limit = {
					ROOT = { original_tag = JAP }
					FROM = { original_tag = JAP }
				}
				if = {
					limit = {
						ROOT = {
							has_government = fascism
							has_country_leader = {
								name = "Hirohito"
								ruling_only = yes
							}
						}
						FROM = { has_government = neutrality }
					}
					ROOT = {
						create_country_leader = {
							name = "Hideki Tojo"
							desc = "Hideki Tojo"
							picture = "gfx/leaders/JAP/Portrait_Japan_Generic_land_2.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = {
								army_connections
								r56_trait_opposed_to_democracy
								r56_trait_opposed_to_communism
							}
						}
					}
					FROM = {
						create_country_leader = {
							name = "Hirohito"
							desc = " "
							picture = "Portrait_Japan_Hirohito.dds"
							expire = "1989.1.1"
							ideology = despotism
							traits = {
								warrior_code
								emperor_showa
							}
							id = 700 #Hirohito
						}
					}
					set_global_flag = japanese_civil_war
				}
				if = {
					limit = {
						ROOT = { has_government = neutrality }
						FROM = {
							has_government = fascism
							has_country_leader = {
								name = "Hirohito"
								ruling_only = yes
							}
						}
					}
					ROOT = {
						create_country_leader = {
							name = "Hirohito"
							desc = " "
							picture = "Portrait_Japan_Hirohito.dds"
							expire = "1989.1.1"
							ideology = despotism
							traits = {
								warrior_code
								emperor_showa
							}
							id = 700 #Hirohito
						}
					}
					FROM = {
						create_country_leader = {
							name = "Hideki Tojo"
							desc = "Hideki Tojo"
							picture = "gfx/leaders/JAP/Portrait_Japan_Generic_land_2.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = {
								army_connections
								r56_trait_opposed_to_democracy
								r56_trait_opposed_to_communism
							}
						}
					}
					set_global_flag = japanese_civil_war
				}
				#democratic civil war
				if = {
					limit = {
						ROOT = { has_government = democratic }
						FROM = { has_government = fascism }
					}
					ROOT = {
						#add hirohito idea here if not added by showa constitution focus.
						if = {
							limit = {
								NOT = {
									has_completed_focus = JAP_strengthen_civilian_government
								}
							}
							add_ideas = JAP_hirohito
						}
					}
					FROM = {
						create_country_leader = {
							name = "Hideki Tojo"
							desc = "Hideki Tojo"
							picture = "gfx/leaders/JAP/Portrait_Japan_Generic_land_2.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = {
								army_connections
								r56_trait_opposed_to_democracy
								r56_trait_opposed_to_communism
							}
						}
						add_war_support = 0.8
						set_cosmetic_tag = JAP2
					}
				}
				if = {
					limit = {
						FROM = { has_government = democratic }
						ROOT = { has_government = fascism }
					}
					FROM = {
						#add hirohito idea here if not added by showa constitution focus.
						if = {
							limit = {
								NOT = {
									has_completed_focus = JAP_strengthen_civilian_government
								}
							}
							add_ideas = JAP_hirohito
						}
					}
					ROOT = {
						create_country_leader = {
							name = "Hideki Tojo"
							desc = "Hideki Tojo"
							picture = "gfx/leaders/JAP/Portrait_Japan_Generic_land_2.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = {
								army_connections
								r56_trait_opposed_to_democracy
								r56_trait_opposed_to_communism
							}
						}
						add_war_support = 0.8
						set_cosmetic_tag = JAP2
					}
				}				
			}

			#Horthy-Horthy civil war
			if = { #MOD. Compressed
				limit = {
					ROOT = { original_tag = HUN }
					FROM = { original_tag = HUN }
				}
				if = {
					limit = {
						ROOT = {
							has_government = fascism
							has_country_leader = {
								name = "Miklós Horthy"
								ruling_only = yes
							}
						}
						FROM = { has_government = neutrality }
					}
					ROOT = {
						create_country_leader = {
							name = "Ferenc Szalasi"
							desc = " "
							picture = "gfx/leaders/HUN/r56_portrait_HUN_Ferenc_Szalasi.dds"
							expire = "1965.1.1"
							ideology = nazism
							traits = {
								anti_communist
								fascist_militia_leader
							}
						}
						set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }
					}
				}
				else_if = { #// MOD. Duplicated
					limit = {
						ROOT = { has_government = neutrality }
						FROM = {
							has_government = fascism
							NOT = {
								has_country_leader = {
									name = "Ferenc Szalasi"
									ruling_only = yes
								}
							}
						}
					}
					FROM = {
						create_country_leader = {
							name = "Ferenc Szalasi"
							desc = " "
							picture = "gfx/leaders/HUN/r56_portrait_HUN_Ferenc_Szalasi.dds"
							expire = "1965.1.1"
							ideology = nazism
							traits = {
								anti_communist
								fascist_militia_leader
							}
						}
						set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }
					}
				}
			}

			# Colonial dutch side with Colonial government
			if = {
				limit = {
					FROM = {
						original_tag = INS
						is_puppet_of = HOL
					}
				}
				ROOT = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = HOL_indonesia_commander
						}
						set_nationality = FROM
					}
				}
			}
			if = {
				limit = {
					ROOT = {
						original_tag = INS
						is_puppet_of = HOL
					}
				}
				FROM = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = HOL_indonesia_commander
						}
						set_nationality = ROOT
					}
				}
			}

			# Chinese Civil war Chiang fascist
			if = {
				limit = {
					ROOT = {
						original_tag = CHI
						has_government = fascism
						has_country_leader = {
							name = "Chiang Kai-Shek"
							ruling_only = yes
						}
					}
					FROM = {
						original_tag = CHI
						has_government = neutrality
						has_country_leader = {
							name = "Chiang Kai-Shek"
							ruling_only = yes
						}
					}
				}
				FROM = {
					retire_country_leader = yes
					create_country_leader = {
						name = "Li Jishen"
						desc = " "
						picture = "gfx/leaders/JAP/Portrait_Japan_Generic_land_4.dds"
						expire = "1965.1.1"
						ideology = moderatism
						traits = {

						}
					}
				}
			}

			#Italian civil war
			if = {
				limit = {
					ROOT = { original_tag = ITA }
					FROM = { original_tag = ITA }
				}
				if = {
					limit = {
						ROOT = {
							has_government = fascism
							has_idea = victor_emmanuel
						}
						FROM = { has_government = neutrality }
					}
					ROOT = {
						remove_ideas = victor_emmanuel
						set_cosmetic_tag = ITA_RSI
						set_party_name = {
							ideology = fascism
							long_name = "Partito Fascista Repubblicano"
							name = "PFR"
						}
					}
					FROM = { set_cosmetic_tag = ITA_anti_fascist }
				}
				else_if = {
					limit = {
						ROOT = { has_government = neutrality }
						FROM = {
							has_government = fascism
							has_idea = victor_emmanuel
						}
					}
					ROOT = { set_cosmetic_tag = ITA_anti_fascist }
					FROM = {
						remove_ideas = victor_emmanuel
						set_cosmetic_tag = ITA_RSI
						set_party_name = {
							ideology = fascism
							long_name = "Partito Fascista Repubblicano"
							name = "PFR"
						}
					}
				}
			}

			#Indian civil war
			if = {
				limit = {
					FROM = {
						original_tag = RAJ
						has_government = neutrality
						is_puppet_of = ENG
					}
				}
				FROM = {
					set_cosmetic_tag = RAJ_UK
				}
			}
			#attack the USSR
			if = {
				limit = {
					AND = {
						JAP = {
							exists = yes
							has_government = neutrality
							is_major = yes
							has_completed_focus = JAP_prepare_for_war_with_the_soviet_union
						}
					}
				}
				hidden_effect = {
					JAP = {
						add_timed_idea = { idea = jap_r56_hokushin_ron days = 140 }
					}
					every_country = {
						limit = {
							is_in_faction_with = JAP
							OR = {
								is_neighbor_of = SOV
								is_neighbor_of = JAP
							}
						}
						add_timed_idea = { idea = jap_r56_hokushin_ron days = 70 } #ally supply lines break first
					}
				}
			}
#Some ww2 interactions
			if = {
				limit = {
					OR = {
						AND = { tag = GER FROM = { tag = SOV } }
						AND = { tag = SOV FROM = { tag = GER } }
					}
					GER = { has_completed_focus = GER_soviet_invasion }
				}
				hidden_effect = {
					GER = {
						add_timed_idea = { idea = GER_barbarossa days = 180 }
						activate_mission = GER_barbarossa_mission
					}
					every_country = {
						limit = {
							is_in_faction_with = GER
							OR = {
								is_neighbor_of = SOV
								is_neighbor_of = GER
							}
						}
						add_timed_idea = { idea = GER_barbarossa days = 90 } #ally supply lines break first
					}
				}
			}

			if = {
				limit = {
					ROOT = { TAG = GER }
					FROM = { TAG = SOV }
				}
				POL = { remove_ideas = POL_Ribbentrop_Beck_Pact }
			}

			if = {
				limit = {
					OR = {
						AND = { FROM = { tag = JAP } tag = USA }
						AND = { FROM = { tag = USA } tag = JAP }
					}
					has_global_flag = MAN_will_join_usa
					MAN = {
						is_puppet_of = JAP
					}
				}
				MAN = {
					overlord = {
						set_autonomy = {
							target = MAN
							autonomy_state = autonomy_free
						}
					}
				}
				USA = {
					set_autonomy = {
						target = MAN
						autonomy_state = autonomy_puppet
					}
					set_autonomy = {
						target = MAN
						autonomy_state = autonomy_free
					}
					if = {
						limit = {
							is_in_faction = no
						}
						create_faction = mck_liberate
						add_to_faction = MAN
						else = {
							random_country = {
								limit = {
									OR = {
										is_in_faction_with = USA
										tag = USA
									}
									is_faction_leader = yes
								}
								add_to_faction = MAN
							}
						}
					}
				}
				MAN = {
					declare_war_on = {
						target = JAP
						type = annex_everything
					}
					hidden_effect = {
						set_politics = {
							ruling_party = democratic
							elections_allowed = no
						}
						set_political_party = {
							ideology = communism
							popularity = 0
						}
						set_political_party = {
							ideology = fascism
							popularity = 5
						}
						set_political_party = {
							ideology = neutrality
							popularity = 20
						}
						set_political_party = {
							ideology = democratic
							popularity = 80
						}
					}
					add_to_war = {
						targeted_alliance = USA
						enemy = JAP
					}
					if = {
						limit = {
							has_idea = MAN_dongbei_partisan
						}
						remove_ideas = MAN_dongbei_partisan
					}
					if = {
						limit = {
							has_idea = MAN_dongbei_partisan_pacified
						}
						remove_ideas = MAN_dongbei_partisan_pacified
					}
				}
			}

			#remove chi ger opinion
			if = {
				limit = {
					OR = {
						AND = {
							FROM = { tag = CHI }
							ROOT = { tag = GER }
						}
						AND = {
							ROOT = { tag = CHI }
							FROM = { tag = GER }
						}
					}
					CHI = {
						has_opinion_modifier = sino_german_cooperation
					}
					GER = {
						has_opinion_modifier = sino_german_cooperation
					}
				}
				CHI = {
					remove_opinion_modifier = {
						target = GER
						modifier = sino_german_cooperation
					}
					remove_opinion_modifier = {
						target = GER
						modifier = more_sino_german_coop
					}
				}
				GER = {
					remove_opinion_modifier = {
						target = CHI
						modifier = sino_german_cooperation
					}
					remove_opinion_modifier = {
						target = CHI
						modifier = more_sino_german_coop
					}
				}
			}

			#gain buff when against commie - f
			if = {
				limit = {
					FROM = {
						has_idea = KMT_resist_the_reds
						NOT = { has_idea = KMT_anti_communism_sentiment }
					}
					ROOT = { has_government = communism }
				}
				FROM = {
					add_ideas = KMT_anti_communism_sentiment
				}
			}

			#gain buff when against commie - r
			if = {
				limit = {
					ROOT = {
						has_idea = KMT_resist_the_reds
						NOT = { has_idea = KMT_anti_communism_sentiment }
					}
					FROM = { has_government = communism }
				}
				ROOT = {
					add_ideas = KMT_anti_communism_sentiment
				}
			}

			#russian civil war
			if = {
				limit = {
					ROOT = {
						original_tag = MAN
						has_country_flag = RFP_wins
					}
					FROM = {
						tag = SOV
					}
				}
				SOV = {
					start_civil_war = {
						ideology = fascism
						capital = 408
						states = { 408 409 560 657 655 537 561 563 }
					}
				}
				random_country = {
					limit = {
						original_tag = SOV
						has_government = fascism
					}
					create_faction = rfp_white_movement
					add_timed_idea = {
						idea = MAN_RFP_white_movement
						days = 1700
					}
					hidden_effect = {
						load_oob = "RFP_anti_bolshelvik"
					}
					annex_country = {
						target = ROOT
						transfer_troops = yes
					}
				}
			}

			#set flag for warred with jap
			if = { #MOD. Slight optimization.
				limit = {
					OR = {
						AND = { ROOT = { tag = CHI } FROM = { tag = JAP } }
						AND = { ROOT = { tag = JAP } FROM = { tag = CHI } }
					}
				}
				set_global_flag = CHI_warred_with_JAP
				if = {
					limit = { country_exists = MEN }
					set_global_flag = KMT_MEN_trigger_by_on_action
				}
			}

			#change to wartime corruption
			if = {
				limit = {
					OR = {
						FROM = { tag = CHI }
						ROOT = { tag = CHI }
					}
					CHI = {
						OR = {
							has_idea = KMT_corrupted_government
							has_idea = KMT_corrupted_government_lesser
						}
					}
				}
				CHI = {
					country_event = { id = kmt.272 }
				}
			}

			#set flag
			if = {
				limit = {
					NOT = {
						has_global_flag = west_expedition_started
					}
					FROM = { tag = XSM }
					ROOT = {
						tag = PRC
						has_completed_focus = PRC_west_expedition
					}
				}
				set_global_flag = west_expedition_started
			}

			#strike prc when west-expedition-ing
			if = {
				limit = {
					FROM = { tag = PRC }
					tag = CHI
					PRC = {
						is_in_faction = no
						has_war_with = XSM
					}
					has_global_flag = west_expedition_started
				}
				PRC = {
					country_event = { id = prc.53 }
				}
			}

			#get revanchism when war with jap
			if = {
				limit = {
					has_idea = PRC_anti_jap_sentiment
					NOT = {
						has_idea = PRC_revanchism
					}
					FROM = { tag = JAP }
				}
				country_event = { id = prc.107 }
			}

			#pop tips for central government
			## You cannot trigger this when join others' war against the central government, since it would not be legitimate
			if = { #// MOD. Duplicated
				limit = {
					OR = {
						has_country_flag = KMT_central_government_flag
						FROM = { has_country_flag = KMT_central_government_flag }
					}
				}
				country_event = { id = prc.107 }
			}

			if = {
				limit = {
					NOT = {
						has_global_flag = PRC_restart_chinese_civil_war
					}
					OR = {
						AND = { tag = PRC FROM = { tag = CHI } }
						AND = { tag = CHI FROM = { tag = PRC } }
					}
				}
				PRC = {
					country_event = { id = china.108 }
					if = {
						limit = {
							NOT = {
								has_completed_focus = PRC_found_our_nation
							}
						}
						drop_cosmetic_tag = yes
						set_cosmetic_tag = GCDcivilwar
						set_global_flag = PRC_civil_war_started
					}
				}
			}
		}
	}

###---> On Government Change <><> <><> <><>
	on_government_change = {
		effect = {
			#Game rule that should avoid the idea related to said rule if the country is non aligned and read it if it's not.
#			if = {
#				limit = {
#					has_game_rule = {
#						rule = ideology_join_faction
#						option = SAME_IDEOLOGY_EXCEPT_NON_ALIGNED
#					}
#				}
#				if = {
#					limit = { NOT = { has_government = neutrality } }
#					add_ideas = generic_can_only_join_factions_same_ideology
#				}
#				else = {
#					remove_ideas = generic_can_only_join_factions_same_ideology
#				}
#			}
			if = { #MOD. Compressed.
				limit = { original_tag = MAN }
				if = {
					limit = {
						NOT = {
							has_country_leader = {
								name = "Aisin Gioro Puyi"
								ruling_only = yes
							}
						}
					}
					every_unit_leader = {
						limit = {
							has_id = 5840
						}
						set_unit_leader_flag = MAN_manchu_monarchist_flag
						set_nationality = FAK
					}
				}
				if = {
					limit = {
						NOT = {
							OR = {
								has_country_leader = {
									name = "Aisin Gioro Puyi"
									ruling_only = yes
								}
								has_country_leader = {
									name = "Aisin Gioro Pujie"
									ruling_only = yes
								}
							}
						}
					}
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 5841
								has_id = 5842
							}
						}
						set_unit_leader_flag = MAN_manchu_monarchist_flag
						set_nationality = FAK
					}
				}
			}

			if = {
				limit = {
					ROOT = {
						original_tag = CRO
						country_exists = YUG
						YUG = {
							has_government = communism
							has_country_leader = {
								name = "Josip Broz Tito"
								ruling_only = yes
							}
						}
						has_country_leader = {
							name = "Josip Broz Tito"
							ruling_only = yes
						}
					}
				}
				ROOT = {
					retire_country_leader = yes
				}
			}
			if = {
				limit = {
					tag = SOV
					NOT = { has_government = communism }
				}
				every_other_country = {
					limit = {
						has_opinion_modifier = anti_comintern_pact_opinion
					}
					remove_opinion_modifier = {
						target = SOV
						modifier = anti_comintern_pact_opinion
					}
				}
			}
			if = {
				limit = {
					original_tag = FRA
					has_government = neutrality
				}
				every_owned_state = {
					limit = {
						NOT = { is_on_continent = Europe }
					}
					add_compliance = 30
				}
			}

			#ensure that concessions are removed in Albania if fascist regime collapse
			if = {
				limit = {
					tag = ITA
					country_exists = ALB
				}
				ITA = {
					remove_resource_rights = 44
					remove_resource_rights = 836
				}
			}
			if = {
				limit = { original_tag = ITA }
				if = {
					limit = {
						NOT = { has_government = fascism }
					}
					set_cosmetic_tag = ITA_anti_fascist
				}
				if = {
					limit = {
						has_government = fascism
						has_cosmetic_tag = ITA_anti_fascist
					}
					drop_cosmetic_tag = yes
				}
			}

			if = { #MOD. Compression
				limit = { original_tag = SOV }
				if = {
					limit = {
						NOT = { has_government = communism }
					}
					if = {
						limit = {
							has_completed_focus = SOV_in_the_name_of_the_czar
						}
						set_cosmetic_tag = SOV4
					}
					else = {
						set_cosmetic_tag = SOV3
					}
				}
				else_if = {
					limit = {
						OR = {
							has_cosmetic_tag = SOV3
							has_cosmetic_tag = SOV4
						}
					}
					drop_cosmetic_tag = yes
				}
			}

			if = { #Simplified trigger
				limit = {
					tag = MAN
					has_government = neutrality
				}
				if = {
					limit = { country_exists = CHI }
					CHI = { country_event = { id = kmt.275 }}
					else = {
						if = {
							limit = { country_exists = PRC }
							PRC = { country_event = { id = kmt.275 }}
						}
					}
				}
			}

#			if = { #//MOD. The event jap.57 does not exist. I'll comment this out for now.
#				limit = {
#					tag = MAN
#					NOT = {
#						has_government = fascism
#						OR = {
#							has_global_flag = JAP_grant_MAN_independence
#							has_completed_focus = MAN_call_usa_to_act
#							has_completed_focus = MAN_coronation
#							has_completed_focus = MAN_independence_war
#						}
#					}
#					is_puppet_of = JAP
#				}
#				overlord = {
#					country_event = { id = jap.57 }
#				}
#			}

			if = { # MOD. Compressed.
				limit = { original_tag = CHI }
				if = {
					limit = {
						has_government = democratic
						NOT = {
							has_country_flag = KMT_party_chosen
						}
					}
					country_event = { id = kmt.279 }
				}
				else_if = {
					limit = {
						has_government = fascism
						is_subject = no
						NOT = { has_completed_focus = KMT_support_pro_japanese_faction }
					}
					country_event = { id = kmt.286 }	#leader change is handled in event
				}
			}

			if = {
				limit = {
					original_tag = AST
					AST = {
						has_government = fascism
						has_completed_focus = AST_R56_australia_first
					}
				}
				set_cosmetic_tag = AST_ALT
			}

			if = {
				limit = {
					original_tag = CAN
					CAN = {
						has_government = communism
						has_completed_focus = r56_CAN_communism
						NOT = {
							has_completed_focus = r56_CAN_imprison_the_trotskyists
						}
					}
				}
				add_ideas = r56_CAN_divided_communists
			}

			if = {
				limit = {
					original_tag = PAR
					PAR = {
						has_government = fascism
						has_country_flag = PAR_franco_in_power
					}
				}
				PAR = {
					retire_ideology_leader = neutrality
				}
			}
		}
	}

###---> On Join Allies <><> <><> <><>
	on_join_allies = {
		effect = {
			#gain buff when against commie - f
			if = {
				limit = {
					any_country = {
						has_idea = KMT_resist_the_reds
						has_war_with = ROOT
						has_war_with = FROM
					}
					ROOT = {
						has_government = communism
					}
				}
				every_other_country = {
					limit = {
						has_idea = KMT_resist_the_reds
						NOT = {
							has_idea = KMT_anti_communism_sentiment
						}
						has_war_with = ROOT
						has_war_with = FROM
					}
					country_event = { id = kmt.252 hours = 1 }
				}
			}

			#gain buff when against commie - r
			if = {
				limit = {
					ROOT = {
						has_idea = KMT_resist_the_reds
						NOT = {
							has_idea = KMT_anti_communism_sentiment
						}
					}
					any_country = {
						has_government = communism
						has_war_with = ROOT
						has_war_with = FROM
					}
				}
				ROOT = {
					country_event = { id = kmt.252 hours = 1 }
				}
			}

			#change to wartime corruption
			if = {
				limit = {
					tag = CHI
					OR = {
						has_idea = KMT_corrupted_government
						has_idea = KMT_corrupted_government_lesser
					}
				}
				country_event = { id = kmt.272 hours = 1 }
			}
		}
	}

###---> On New Term Election <><> <><> <><>
	on_new_term_election = {
		effect = {
			if = {
				limit = {
					tag = CHI
					has_government = neutrality
					NOT = { has_country_flag = KMT_party_chosen }
				}
				country_event = { id = kmt.279 }
			}
			if = {
				limit = {
					original_tag = MEX
					has_country_flag = election_1940
				}
				MEX = {
					country_event = { id = mexico_1940.4 }
				}
			}
			if = {
				limit = { tag = AST }
				country_event = { id = r56_australia.8 }
				country_event = { id = r56_australia.9 }
				country_event = { id = r56_australia.10 }
				country_event = { id = r56_australia.11 }
				country_event = { id = r56_australia.12 }
			}
		}
	}

###---> On Puppet <><> <><> <><>
	on_puppet = {
		effect = {
			## Add flag so USA can warn Germany if it rushes puppet/annex the netherlands/indonesia
			if = { #MOD. Compressed
				limit = {
					is_puppet_of = GER
					GER = {
						NOT = { has_government = democratic }
					}
				}
				if = {
					limit = { tag = HOL }
					USA = {
						set_country_flag = { flag = USA_dutch_window days = 60 value = 1 }
					}
				}
				if = {
					limit = { tag = ENG }
					USA = {
						set_country_flag = { flag = USA_british_window days = 60 value = 1 }
					}
				}
				if = {
					limit = { tag = INS }
					USA = {
						set_country_flag = { flag = USA_dutch_window days = 60 value = 1 }
					}
				}
			}

			## Remove political advisors
			if = { #MOD. Optimized one step.
				limit = { has_government = communism }
				if = {
					limit = { has_idea_with_trait = democratic_reformer }
					remove_ideas_with_trait = democratic_reformer
				}
				if = {
					limit = { has_idea_with_trait = staunch_monarchist }
					remove_ideas_with_trait = staunch_monarchist
				}
				if = {
					limit = { has_idea_with_trait = fascist_demagogue }
					remove_ideas_with_trait = fascist_demagogue
				}
			}
			else_if = {
				limit = { has_government = democratic }
				if = {
					limit = { has_idea_with_trait = communist_revolutionary }
					remove_ideas_with_trait = communist_revolutionary
				}
				if = {
					limit = { has_idea_with_trait = staunch_monarchist }
					remove_ideas_with_trait = staunch_monarchist
				}
				if = {
					limit = { has_idea_with_trait = fascist_demagogue }
					remove_ideas_with_trait = fascist_demagogue
				}
			}
			else_if = {
				limit = { has_government = neutrality }
				if = {
					limit = { has_idea_with_trait = communist_revolutionary }
					remove_ideas_with_trait = communist_revolutionary
				}
				if = {
					limit = { has_idea_with_trait = democratic_reformer }
					remove_ideas_with_trait = democratic_reformer
				}
				if = {
					limit = { has_idea_with_trait = fascist_demagogue }
					remove_ideas_with_trait = fascist_demagogue
				}
			}
			else = {
#				limit = { has_government = fascism }
				if = {
					limit = { has_idea_with_trait = communist_revolutionary }
					remove_ideas_with_trait = communist_revolutionary
				}
				if = {
					limit = { has_idea_with_trait = democratic_reformer }
					remove_ideas_with_trait = democratic_reformer
				}
				if = {
					limit = { has_idea_with_trait = staunch_monarchist }
					remove_ideas_with_trait = staunch_monarchist
				}
			}

			### Non Aligned Britain empowers Philip of Greece (future Philip Mountbatten - husband of Elisabeth II)
			if = { #MOD. Compressed.
				limit = {
					FROM = { tag = ENG }
					ENG = { has_government = neutrality }
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Philip of Greece"
								ruling_only = no
							}
						}
					}
				}
				if = {
					limit = {
						OR = {
							ROOT = { original_tag = GRE }
							ROOT = { original_tag = DEN } ### Same but for Denmark as the house of Glucksburg had relatives on both thrones
						}
					}
					create_country_leader = {
						name = "Philip of Greece"
						desc = ""
						picture = "gfx/leaders/r56_generic/r56_portrait_generic_admiral_europe_3.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							eager_collaborator
							popular_figurehead2
						}
					}
				}
			}

			### Change leaders and commanders of the Korean government
			if = {
                limit = {
                    tag = KOR
					has_government = neutrality
                    FROM = {
						OR = {
							original_tag = CHI
							original_tag = PRC
							original_tag = GXC
							original_tag = YUN
							original_tag = SHX
							original_tag = XSM
							original_tag = SIK
						}
					}
                }
				retire_ideology_leader = neutrality
				retire_ideology_leader = fascism
				set_cosmetic_tag = KOR_tutelage
				#Historical and ironic what more do you want.
				set_party_name = {
					ideology = neutrality
					long_name = KOR_neutrality_party_independence_long
					name = KOR_neutrality_party_independence
				}
			}
			if = {
                limit = {
					OR = {
						tag = YUG
						tag = CRO
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Andrija Hebrang"
								ruling_only = no
							}
						}
					}

					has_government = communism
                    FROM = {
						AND = {
							OR = {
								original_tag = SOV
								is_in_faction_with = SOV
							}
							SOV = {
								has_government = communism
							}
						}
					}
                }
				create_country_leader = {
					name = "Andrija Hebrang"
					desc = ""
					picture = "gfx/leaders/YUG/r56_portrait_YUG_Andrija_Hebrang.dds"
					expire = "1965.1.1"
					ideology = moderatism
					traits = {
						#
					}
				}
			}
			if = {
				limit = {
					original_tag = PER
					has_country_leader = {
						name = "Reza Shah Pahlavi"
						ruling_only = no
					}
					FROM = {
						original_tag = ENG
						OR = {
							has_government = neutrality
							has_government = democratic
						}
					}
				}
				retire_ideology_leader = neutrality
				set_politics = {
					ruling_party = neutrality
				}
				add_popularity = {
					ideology = neutrality
					popularity = 0.5
				}
			}
			if = {
				limit = {
					original_tag = EST
					has_government = fascism
					OR = {
						FROM = {
							original_tag = GER
						}
						any_other_country = {
							has_country_leader = {
								name = "Artur Sirk"
							}
						}
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Hjalmar Mae"
							}
						}
					}
				}
				create_country_leader = {
					name = "Hjalmar Mae"
					picture = "r56_portrait_EST_Hjalmar_Mae.dds"
					expire = "1959.1.1"
					ideology = nazism
					traits = {

					}
				}
			}

# SOV
			if = {
				limit = { original_tag = SOV }
				if = { #Neutral (imperial?) branch
					limit = {
						has_government = neutrality
					}
					if = { #not Vladimir Kirillovich
						limit = {
							FROM = {
								OR = {
									original_tag = SPR
									original_tag = FRA
									original_tag = AUS
									original_tag = HUN
									original_tag = PER
									original_tag = BEL
									NOT = {
										has_country_leader = {
											name = "Anarchist Commune"
											ruling_only = yes
										}
									}
									original_tag = JAP
									original_tag = ROM
									original_tag = BUL
									original_tag = GER
									original_tag = PRE
									original_tag = BAY
									original_tag = BAD
									original_tag = WUR
									original_tag = MEK
									original_tag = SHL
									original_tag = SAX
									original_tag = HAN
									original_tag = DEN
									original_tag = SWE
									original_tag = NOR
									original_tag = CAN
									original_tag = JOR
									original_tag = IRQ
									original_tag = GRE
									original_tag = YUG
									original_tag = HOL
									original_tag = MAN
									original_tag = ARM
									original_tag = EGY
									original_tag = SAU
									original_tag = ITA

									AND = {
										original_tag = POR
										has_country_leader = {
											name = "Dom Duarte Nuno"
											ruling_only = yes
										}
									}
									AND = {
										original_tag = BRA
										has_country_leader = {
											name = "Pedro III"
											ruling_only = yes
										}
									}
									AND = {
										original_tag = USA
										has_country_leader = {
											name = "Wallis I"
											ruling_only = yes
										}
									}
									AND = {
										original_tag = HON
										has_country_leader = {
											name = "Juan III"
											ruling_only = yes
										}
									}
								}
							}
							NOT = {
								any_country = {
									has_country_leader = {
										name = "Vladimir Kirillovich"
										ruling_only = yes
									}
								}
							}
						}
						drop_cosmetic_tag = yes
						set_cosmetic_tag = SOV3
						set_party_name = {
							ideology = neutrality
							long_name = r56_SOV_neu
							name = r56_SOV_neu
						}
						FAK = {
							every_unit_leader = {
								limit = {
									OR = {
										has_id = 6200
										has_id = 6201
										has_id = 6202
										has_id = 6204
										has_id = 6205
										has_id = 6206
										has_id = 6207
										has_id = 6208
										has_id = 6209
										has_id = 6210
										has_id = 6211
										has_id = 6212
										has_id = 6216
									}
								}
								set_nationality = ROOT
							}
						}
						create_country_leader = {
							name = "Vladimir Kirillovich"
							desc = " "
							picture = "r56_portrait_SOV_Vladimir_Kirillovich.dds"
							expire = "1965.1.1"
							ideology = absolute_monarchism
							traits = {
								controversial_figurehead
							}
						}
					}

					if = { #Vladimir Kirillovich, not Grigory Semenov
						limit = {
							FROM = {
								OR = {
									original_tag = JAP
									original_tag = MON
									original_tag = BYA
									original_tag = MAN
									original_tag = PRE
									original_tag = SHX
									original_tag = SIK
									original_tag = GUK
									original_tag = GXC
									original_tag = MEN
									original_tag = BRM
									original_tag = AFG
									original_tag = MEN
									original_tag = CHI
								}
							}

							any_other_country = {
								has_country_leader = {
									name = "Vladimir Kirillovich"
									ruling_only = yes
								}
							}
							NOT = {
								any_country = {
									has_country_leader = {
										name = "Grigory Semenov"
										ruling_only = no
									}
								}
							}
						}
						FAK = {
							every_unit_leader = {
								limit = {
									OR = {
										has_id = 6205
										has_id = 6210
									}
								}
								set_nationality = ROOT
							}
						}
						create_country_leader = {
							name = "Grigory Semenov"
							desc = " "
							picture = "r56_portrait_SOV_Grigory_semenov.dds"
							expire = "1965.1.1"
							ideology = oligarchism
							traits = { }
						}
					}
				}
					###########
				else_if = { #Fascist branch
					limit = {
						has_government = fascism
						any_other_country = {
							has_country_leader = {
								name = "Konstantin Rodzaevsky"
								ruling_only = yes
							}
						}
					}
					if = {
						limit = {
							FROM = {
								OR = {
									original_tag = JAP
									original_tag = MON
									original_tag = BYA
									original_tag = MAN
									original_tag = PRE
									original_tag = SHX
									original_tag = SIK
									original_tag = GUK
									original_tag = GXC
									original_tag = MEN
									original_tag = BRM
									original_tag = AFG
									original_tag = MEN
									original_tag = CHI
								}
							}
						}
						FAK = {
							every_unit_leader = {
								limit = {
									OR = {
										has_id = 6205
										has_id = 6210
									}
								}
								set_nationality = ROOT
							}
						}
						create_country_leader = {
							name = "Grigory Semenov"
							desc = " "
							picture = "r56_portrait_SOV_Grigory_semenov.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = { }
						}
					}

					else = {
						if = {
							limit = {
								NOT = {
									any_other_country = { original_tag = SOV has_unit_leader = 6217 }
								}
							}

							FAK = {
								every_unit_leader = {
									limit = { has_id = 6217 }
									set_nationality = ROOT
									promote_leader = yes
								}
							}
							create_country_leader = {
								name = "Bronislav Kaminsky"
								desc = " "
								picture = "r56_portrait_SOV_Bronislav_Kaminsky.dds"
								expire = "1965.1.1"
								ideology = fascism_ideology
								traits = { }
							}
						}
					}
				}
			}


			#Make Britain called England
			if = {
                limit = {
					ENG = { exists = yes }
					SCO = { exists = yes }
					WLS = { exists = yes }
                }
                ENG = { set_cosmetic_tag = ENG_england }
			}

			#### Trying to fix puppet communist Hungary
			if = {
				limit = {
					original_tag = HUN
					has_government = communism
					has_focus_tree = generic_focus
					has_dlc = "Death or Dishonor"
				}
				load_focus_tree = { tree = hungarian_focus keep_completed = yes }
				complete_national_focus = HUN_economic_intervention
				complete_national_focus = HUN_council_of_peoples_commissars
			}
			if = { #MOD. Compressed a little.
				limit = {
					tag = HUN
					has_focus_tree = hungarian_focus
				}
				if = {
					limit = {
						has_government = communism
					}
					unlock_national_focus = HUN_economic_intervention
					unlock_national_focus = HUN_council_of_peoples_commissars
					unlock_national_focus = HUN_assassinate_horthy
				}
				if = {
					limit = {
						has_idea = HUN_strengthen_fascists
						NOT = { has_government = fascism }
					}
					remove_ideas = HUN_strengthen_fascists
				}
				if = {
					limit = {
						has_completed_focus = HUN_strengthen_fascists
						NOT = { has_idea = HUN_strengthen_fascists }
						has_government = fascism
					}
					add_ideas = HUN_strengthen_fascists
				}
			}

			#Ensures that Carpatho Ukraine has a Magyarone in power if they are non aligned puppet of Hungary
			if = {
				limit = {
					original_tag = RUT
					is_puppet_of = HUN
					HUN = { has_government = neutrality }
				}
				create_country_leader = {
					name = "Stefan Fentsyk"
					desc = ""
					picture = "gfx/leaders/Europe/r56_portrait_generic_europe_augustyn_czartoryski.dds"
					expire = "1965.1.1"
					ideology = moderatism
					traits = {
						silent_workhorse
					}
				}
			}

			#Changing names and leaders of Poland
			if = { #MOD. Compressed
				limit = { tag = POL }
				POL = { remove_ideas = POL_Sanacja_Government }
				if = {
					limit = { has_unit_leader = 3180 }
					remove_unit_leader = 3180
				}
				if = {
					limit = {
						SOV = { has_country_flag = SOV_purge_started }
						NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
						NOT = { has_completed_focus = POL_Seek_Autonomy }
						NOT = { has_country_flag = PPS_Revolutionary_Path }
					}
					create_country_leader = {
						name = "Tymczasowy Rząd Jedności Narodowej"
						desc = " "
						picture = "r56_portrait_POL_Provisional_Government_of_National_Unity.dds"
						expire = "1965.1.1"
						ideology = stalinism
						traits = { }
					}
				}
				if = { #SOV
					limit = {
						is_puppet_of = SOV
						POL = {
							has_government = communism
							NOT = { has_completed_focus = POL_The_Endecja_Movement }
							NOT = { has_completed_focus = POL_The_Polish_Socialist_Party }
						}
					}
					POL = { set_party_name = { ideology = democratic long_name = POL_PSL_long name = POL_PSL_party } }
				}
				if = {
					limit = {
						is_subject_of = SOV
						POL = {
							has_government = communism
							NOT = { has_completed_focus = POL_Seek_Autonomy }
							NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
						}
					}
					POL = { set_party_name = { ideology = communism long_name = POL_ZPP_party_long name = POL_ZPP_party } }
					drop_cosmetic_tag = yes
					create_country_leader = {
						name = "Tymczasowy Rząd Jedności Narodowej"
						desc = " "
						picture = "r56_portrait_POL_Provisional_Government_of_National_Unity.dds"
						expire = "1965.1.1"
						ideology = stalinism
						traits = { }
					}
					if = {
						limit = {
							NOT = { has_unit_leader = 3179 }
							SOV = { NOT = { has_country_flag = purge_1_group_b } }
						}
						create_field_marshal = {
							name = "Konstanty Rokossowski"
							picture = "r56_portrait_POL_Konstanty_Rokossowski.dds"
							traits = { politically_connected panzer_leader panzer_expert offensive_doctrine thorough_planner aggressive_assaulter }
							id = 3179
							skill = 5
							attack_skill = 5
							defense_skill = 2
							planning_skill = 5
							logistics_skill = 4
						}
					}
					if = {
						limit = { NOT = { has_unit_leader = 3156 } }
						create_field_marshal = {
							name = "Michał Rola-Żymierski"
							picture = "r56_portrait_POL_r56_portrait_POL_Michal_Rola_Zymierski.dds"
							traits = { politically_connected career_officer logistics_wizard aggressive_assaulter }
							id = 3156
							skill = 3
							attack_skill = 3
							defense_skill = 2
							planning_skill = 3
							logistics_skill = 2
						}
					}
					if = {
						limit = { NOT = { has_unit_leader = 3157 } }
						create_field_marshal = {
							name = "Zygmunt Berling"
							picture = "r56_portrait_POL_Zygmunt_Berling.dds"
							traits = { politically_connected career_officer infantry_officer inspirational_leader }
							id = 3157
							skill = 1
							attack_skill = 2
							defense_skill = 1
							planning_skill = 1
							logistics_skill = 1
						}
					}
					if = {
						limit = { NOT = { has_unit_leader = 3177 } }
						create_corps_commander = {
							name = "Stanisław Popławski"
							picture = "r56_portriat_POL_Stanislav_Poplavsky.dds"
							traits = { trait_reckless harsh_leader skilled_staffer }
							id = 3177
							skill = 3
							attack_skill = 4
							defense_skill = 2
							planning_skill = 2
							logistics_skill = 2
						}
					}
					if = {
						limit = { NOT = { has_unit_leader = 3178 } }
						create_corps_commander = {
							name = "Karol Świerczewski"
							picture = "r56_portrait_POL_Karol_Swierczewski.dds"
							traits = { substance_abuser harsh_leader }
							id = 3178
							skill = 1
							attack_skill = 1
							defense_skill = 1
							planning_skill = 1
							logistics_skill = 1
						}
					}
					if = { limit = { has_unit_leader = 3129 }
						remove_unit_leader = 3129 }
					if = { limit = { has_unit_leader = 3155 }
						remove_unit_leader = 3155 }
					if = { limit = { has_unit_leader = 3154 }
						remove_unit_leader = 3154 }
					if = { limit = { has_unit_leader = 3131 }
						remove_unit_leader = 3131 }
					if = { limit = { has_unit_leader = 3132 }
						remove_unit_leader = 3132 }
					if = { limit = { has_unit_leader = 3134 }
						remove_unit_leader = 3134 }
					if = { limit = { has_unit_leader = 3133 }
						remove_unit_leader = 3133 }
					if = { limit = { has_unit_leader = 3135 }
						remove_unit_leader = 3135 }
					if = { limit = { has_unit_leader = 3136 }
						remove_unit_leader = 3136 }
					if = { limit = { has_unit_leader = 3151 }
						remove_unit_leader = 3151 }
					if = { limit = { has_unit_leader = 3152 }
						remove_unit_leader = 3152 }
					if = { limit = { has_unit_leader = 3153 }
						remove_unit_leader = 3153 }
					if = { limit = { has_unit_leader = 3128 }
						remove_unit_leader = 3128 }
					if = { limit = { has_unit_leader = 3130 }
						remove_unit_leader = 3130 }
				}

				if = { #GER
					limit = { is_puppet_of = GER }
					POL = { set_cosmetic_tag = POLG }
					POL = { set_party_name = { ideology = fascism long_name = GER_fascism_party_long name = GER_fascism_party } }
					create_country_leader = {
						name = "Hans Frank"
						desc = " "
						picture = "r56_portrait_POL_Hans_Frank.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							prince_of_terror
							governor_general
						}
					}
					create_country_leader = {
						name = "Fryderyk Krystian Wettyn"
						desc = " "
						picture = "r56_portrait_POL_Fryderyk_Krystian_Wettyn.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							POL_king_of_poland
							POL_german_origins
							r56_trait_opposed_to_communism
						}
					}
				}
			}

			if = { #MOD. Compressed
				limit = {
					ROOT = { original_tag = CHI }
					FROM = { tag = JAP }
				}
				if = {
					limit = { JAP = { has_government = fascism } }
					if = {
						limit = {
							any_other_country = {
								has_country_leader = {
									name = "Wang Jingwei"
									ruling_only = no
								}
							}
						}
						create_country_leader = {
							name = "Liang Hongzhi"
							desc = " "
							picture = "gfx/leaders/CHI/r56_portrait_CHI_Liang_Hongzhi.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = {
								eager_collaborator
							}
						}
					#	set_party_name = { ideology = fascism long_name = KMT_wjw name = KMT_wjw }
					}
					else = {
						create_country_leader = {
							name = "Wang Jingwei"
							desc = " "
							picture = "gfx/leaders/CHI/r56_portrait_CHI_Wang_Jingwei.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = {
								eager_collaborator
							}
						}
						set_party_name = { ideology = fascism long_name = KMT_wjw name = KMT_wjw }
					}
				}
				else_if = {
					limit = { JAP = { has_government = neutrality } }
					if = {
						limit = {
							any_other_country = {
								has_country_leader = {
									name = "Wang Jingwei"
									ruling_only = no
								}
							}
						}
						create_country_leader = {
							name = "Liang Hongzhi"
							desc = " "
							picture = "gfx/leaders/CHI/r56_portrait_CHI_Liang_Hongzhi.dds"
							expire = "1965.1.1"
							ideology = despotism
							traits = {
								eager_collaborator
							}
						}
#						set_party_name = { ideology = fascism long_name = KMT_wjw name = KMT_wjw } #// Probably a left over, as "Wang Jingwei's Regime" would make no sense here.
					}
					else = {
						create_country_leader = {
							name = "Wang Jingwei"
							desc = " "
							picture = "gfx/leaders/CHI/r56_portrait_CHI_Wang_Jingwei.dds"
							expire = "1965.1.1"
							ideology = despotism
							traits = {
								eager_collaborator
							}
						}
						set_party_name = { ideology = neutrality long_name = KMT_wjw name = KMT_wjw }
					}
				}
			}

			if = { #MOD. Compressed
				limit = {
					ROOT = { original_tag = MAN }
					FROM = { tag = JAP }
				}
				if = {
					limit = {
						JAP = { has_government = neutrality }
					}
					create_country_leader = {
						name = "Aisin Gioro Pujie"
						desc = " "
						picture = "gfx/leaders/MAN/r56_portrait_MAN_Aisin_Gioro_Pujie.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = { }
					}
				}
				else_if = {
					limit = {
						JAP = { has_government = fascism }
					}
					create_country_leader = {
						name = "Aisin Gioro Pujie"
						desc = " "
						picture = "gfx/leaders/MAN/r56_portrait_MAN_Aisin_Gioro_Pujie.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = { }
					}
				}
			}

			#### adding French Collaborators
			if = { #MOD. Compressed
				limit = {
					ROOT = { original_tag = FRA }
				}
				if = {
					limit = {
						OVERLORD = { has_government = fascism }
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Marcel Bucard"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "Marcel Bucard"
						desc = " "
						picture = "gfx/leaders/FRA/Portrait_France_Generic_land_1.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							r56_trait_opposed_to_communism
						}
					}
				}
				if = {
					limit = {
						OVERLORD = { has_government = fascism }
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Marcel Déat"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "Marcel Déat"
						desc = " "
						picture = "gfx/leaders/FRA/r56_portrait_FRA_Marcel_Deat.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							eager_collaborator
							r56_trait_opposed_to_communism
						}
					}
					set_party_name = { ideology = fascism long_name = FRA_rnp_long name = FRA_rnp }	#RNP
				}
				if = {
					limit = {
						FROM = {
							original_tag = SPR
							OR = {
								has_country_leader = {
									name = "Javier I"
									ruling_only = no
								}
								has_country_leader = {
									name = "Alfonso XIII"
									ruling_only = no
								}
								has_country_leader = {
									name = "Jaime IV"
									ruling_only = no
								}
							}
						}
						OVERLORD = {
							has_government = neutrality
						}
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "André Yvert"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "André Yvert"
						desc = " "
						picture = "gfx/leaders/Europe/Portrait_Europe_Generic_2.dds"
						expire = "1965.1.1"
						ideology = absolute_monarchism
						traits = {
							r56_trait_opposed_to_communism
						}
					}
				}
			}

			#### adding Greek Collaborators
			else_if = { #MOD. Compressed
				limit = {
					ROOT = { original_tag = GRE }
					OVERLORD = { has_government = fascism }
				}
				if = {
					limit = {
						NOT = {
							OR = {
								any_other_country = {
									has_country_leader = {
										name = "Konstadinos Logothetopoulos"
										ruling_only = no
									}
								}
								any_other_country = {
									has_country_leader = {
										name = "Ioannis Rallis"
										ruling_only = no
									}
								}
							}
						}
					}
					random_list = {
						50 = {
							create_country_leader = {
								name = "Konstadinos Logothetopoulos"
								desc = " "
								picture = "gfx/leaders/GRE/r56_portrait_GRE_Konstandinos_Logothetopoulos.dds"
								expire = "1965.1.1"
								ideology = nazism
								traits = {
									r56_trait_opposed_to_communism
								}
							}
						}
						50 = {
							create_country_leader = {
								name = "Ioannis Rallis"
								desc = " "
								picture = "gfx/leaders/GRE/r56_portrait_GRE_ioannis_rallis.dds"
								expire = "1965.1.1"
								ideology = nazism
								traits = {
									r56_trait_opposed_to_communism
								}
							}
						}
					}
				}
				else_if = {
					limit = {
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Konstadinos Logothetopoulos"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "Konstadinos Logothetopoulos"
						desc = " "
						picture = "gfx/leaders/GRE/r56_portrait_GRE_Konstandinos_Logothetopoulos.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							r56_trait_opposed_to_communism
						}
					}
				}
				else_if = {
					limit = {
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Ioannis Rallis"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "Ioannis Rallis"
						desc = " "
						picture = "gfx/leaders/GRE/r56_portrait_GRE_ioannis_rallis.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							r56_trait_opposed_to_communism
						}
					}
				}
			}

			#### adding Romanian Collaborators
			if = {
				limit = {
					ROOT = { original_tag = ROM }
					NOT = { tag = ROM }
				}
				if = {
					limit = {
						OVERLORD = {
							has_government = communism
						}
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Alexandru Draghici"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "Alexandru Draghici"
						desc = " "
						picture = "gfx/leaders/ROM/r56_portrait_ROM_Alexandru_Draghici.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							r56_trait_opposed_to_fascism
							baron_of_terror
						}
					}
				}
				else_if = {
					limit = {
						OVERLORD = {
							has_government = fascism
							FROM = {
								NOT = {
									original_tag = HUN
								}
							}
						}
						NOT = {
							any_other_country = {
								OR = {
									has_country_leader = {
										name = "Horia Sima"
										ruling_only = no
									}
									has_country_leader = {
										name = "Corneliu Codreanu"
										ruling_only = yes
									}
									has_idea = ROM_horia_sima
								}
							}
						}
					}
					create_country_leader = {
						name = "Horia Sima"
						desc = " "
						picture = "gfx/leaders/ROM/r56_portrait_ROM_Horia_Sima.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							fascistic_paramilitarist
						}
					}
				}
			}

			#### adding Lithuanian Collaborators
			else_if = { #MOD. Compressed.
				limit = {
					ROOT = { original_tag = LIT }
					FROM = { tag = GER }
					any_other_country = {
						has_country_leader = {
							name = "Kazys Škirpa"
							ruling_only = no
						}
					}
				}
				if = {
					limit = {
						GER = { has_government = neutrality }
					}
					create_country_leader = {
						name = "Kazys Škirpa"
						desc = " "
						picture = "gfx/leaders/LIT/r56_portrait_LIT_Kazys_Skirpa.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							eager_collaborator
						}
					}
				}
				else_if = {
					limit = {
						GER = { has_government = fascism }
					}
					create_country_leader = {
						name = "Kazys Škirpa"
						desc = " "
						picture = "gfx/leaders/LIT/r56_portrait_LIT_Kazys_Skirpa.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							eager_collaborator
						}
					}
				}
			}

			#### Soviet Monarchy. However that works.
			else_if = { #MOD. Compressed
				limit = { ROOT = { original_tag = SOV } }
				if = {
					limit = {
						OVERLORD = { has_government = neutrality }
						#list of monarchies
						FROM = {
							OR = {
								original_tag = FRA
								original_tag = GER
								original_tag = SPR
								original_tag = ITA
								original_tag = GRE
								original_tag = PER
								original_tag = MON
								original_tag = SWE
								original_tag = DEN
								original_tag = NOR
								original_tag = BEL
								original_tag = ENG
								original_tag = ROM
								original_tag = BUL
								original_tag = AUS
								original_tag = HUN
								original_tag = YUG
								original_tag = EGY
								original_tag = SAU
							}
						}
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Alexei Petrovich Arkhangelsky"
									ruling_only = no
								}
							}
						}
						NOT = {
							ROOT = {
								has_country_leader = {
									name = "Kirill Vladimirovich"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "Alexei Petrovich Arkhangelsky"
						desc = " "
						picture = "gfx/leaders/Europe/Portrait_Europe_Generic_4.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							r56_trait_opposed_to_communism
						}
					}
				}
				if = {
					limit = {
						FROM = {
							OR = {
								original_tag = USA
								original_tag = CSA
							}
						}
						OVERLORD = { has_government = fascism }
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Anastasy Vonsyatsky"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = { #Russian fascist who lived in the USA
						name = "Anastasy Vonsyatsky"
						desc = " "
						picture = "gfx/leaders/r56_generic/r56_portrait_generic_politician_europe_3.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							eager_collaborator
							r56_trait_opposed_to_communism
						}
					}
					set_party_name = { ideology = fascism long_name = FRA_rnp_long name = FRA_rnp }	#RNP
				}
			}

			#### Brazilian Monarchy (restoration)
			else_if = {
				limit = {
					ROOT = { original_tag = BRA }
					#list of monarchies
					FROM = {
						OR = {
							original_tag = FRA
							original_tag = GER
							original_tag = SPR
							original_tag = ITA
							original_tag = GRE
							original_tag = PER
							original_tag = MON
							original_tag = SWE
							original_tag = DEN
							original_tag = NOR
							original_tag = BEL
							original_tag = ENG
							original_tag = ROM
							original_tag = BUL
							original_tag = AUS
							original_tag = HUN
							original_tag = YUG
							original_tag = EGY
							original_tag = SOV
						}
					}
					OVERLORD = {
						has_government = neutrality
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Pedro III"
								ruling_only = no
							}
						}
					}
					NOT = {
						ROOT = {
							has_country_leader = {
								name = "Pedro III"
								ruling_only = no
							}
						}
					}
				}
				create_country_leader = {
					name = "Pedro III"
					desc = " "
					picture = "gfx/leaders/BRA/r56_portrait_BRA_PedroIII.dds"
					expire = "1965.1.1"
					ideology = absolute_monarchism
					traits = { vfb_trait_dompedro_1 vfb_trait_dompedro_3 r56_trait_opposed_to_communism}
				}
			}
		#	if = {
		#		limit = {
		#			ROOT = { original_tag = BEL }
		#			#list of monarchies
		#			FROM = {
		#				OR = {
		#					original_tag = FRA
		#					original_tag = GER
		#					original_tag = SPR
		#					original_tag = ITA
		#					original_tag = GRE
		#					original_tag = PER
		#					original_tag = MON
		#					original_tag = SWE
		#					original_tag = DEN
		#					original_tag = NOR
		#					original_tag = BRA
		#					original_tag = ENG
		#					original_tag = ROM
		#					original_tag = BUL
		#					original_tag = AUS
		#					original_tag = HUN
		#					original_tag = YUG
		#					original_tag = EGY
		#					original_tag = SOV
		#				}
		#			}
		#			OVERLORD = {
		#				has_government = neutrality
		#			}
		#			NOT = {
		#				any_other_country = {
		#					has_country_leader = {
		#						name = "Léopold III"
		#						ruling_only = no
		#					}
		#				}
		#			}
		#			NOT = {
		#				ROOT = {
		#					has_country_leader = {
		#						name = "Léopold III"
		#						ruling_only = no
		#					}
		#				}
		#			}
		#		}
		#		create_country_leader = {
		#			name = "Léopold III"
		#			desc = "Léopold III"
		#			picture = "Portrait_leopold_III_commander.dds"
		#			expire = "1965.1.1"
		#			ideology = moderatism
		#			traits = {
		#				r56_trait_opposed_to_communism
		#				r56_trait_opposed_to_fascism
		#			}
		#		}
		#	}

			if = {
				limit = {
					ROOT = { original_tag = ENG }
					OVERLORD = {
						has_government = fascism
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Charles Edward of Albany"
								ruling_only = no
							}
						}
					}
				}
				create_country_leader = { #pro nazi prince, should appear if there are 2 british collaboration governements
					name = "Charles Edward of Albany"
					desc = ""
					picture = "gfx/leaders/ENG/Portrait_Britain_Generic_3.dds"
					expire = "1965.1.1"
					ideology = nazism
					traits = {
						r56_trait_opposed_to_communism
						eager_collaborator
					}
				}
			}

			else_if = { #MOD. Compressed
				limit = {
					ROOT = { original_tag = USA }
					OVERLORD = { has_government = fascism }
				}
				if = {
					limit = {
						FROM = { tag = GER }
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Gerhard Kunze"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = { #pro fascist Ger American, Fritz Kuhn Otherwise?
						name = "Gerhard Kunze"
						desc = ""
						picture = "gfx/leaders/Europe/Portrait_Europe_Generic_4.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							r56_trait_opposed_to_communism
							eager_collaborator
						}
					}
				}
				else_if = {
					limit = {
						FROM = { tag = ITA }
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Generoso Pope"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = { #pro fascist Italo American
						name = "Generoso Pope"
						desc = ""
						picture = "gfx/leaders/Europe/Portrait_Europe_Generic_6.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							r56_trait_opposed_to_communism
							eager_collaborator
						}
					}
				}
			}

			if = {
				limit = {
					ROOT = { tag = HUN }
				}
				if = {
					limit = {
						ROOT = { has_global_flag = align_hungary_puppet_check }
					}
					clr_global_flag = align_hungary_puppet_check
				}
				if = {
					limit = {
						NOT = {
							FROM = {
								tag = ROM
								has_government = fascism
							}
						}
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Ferenc Szalasi"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "Ferenc Szalasi"
						desc = " "
						picture = "gfx/leaders/HUN/r56_portrait_HUN_Ferenc_Szalasi.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							anti_communist
							fascist_militia_leader
						}
					}
					set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }
				}
				if = {
					limit = {
						FROM = {
							OR = {
								original_tag = ROM
								original_tag = TRA
								original_tag = CZE
								original_tag = SLO
								original_tag = YUG
								original_tag = SER
							}
						}
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Vilmos Rőder"
									ruling_only = no
								}
							}
						}
					}
					if = {
						limit = {
							FROM = { has_government = fascism }
						}
						#the generic portrait is actually him
						create_country_leader = {
							name = "Vilmos Rőder"
							desc = " "
							picture = "gfx/leaders/Europe/portrait_europe_generic_6.dds"
							expire = "1965.1.1"
							ideology = fascism_ideology
							traits = {
								r56_trait_opposed_to_communism
								rearmer
							}
						}
					}
					else_if = {
						limit = {
							FROM = { has_government = neutrality }
						}
						#the generic portrait is actually him
						create_country_leader = {
							name = "Vilmos Rőder"
							desc = " "
							picture = "gfx/leaders/Europe/portrait_europe_generic_6.dds"
							expire = "1965.1.1"
							ideology = oligarchism
							traits = {
								r56_trait_opposed_to_communism
								rearmer
							}
						}
					}
				}
			}

			else_if = { #MOD. Compressed
				limit = { ROOT = { tag = ZIM } }
				if = {
					limit = {
						FROM = { tag = ENG }
					}
					ZIM = {
						set_cosmetic_tag = ZIM_ENG
					}
				}
				else = {
					ZIM = {
						drop_cosmetic_tag = yes #British colony flag
					}
				}
			}

			if = {
				limit = {
					ROOT = {
						tag = ITA
					}
					FROM = {
						OR = {
							original_tag = GER
							original_tag = USA
							AND = {
								original_tag = FRA
								has_country_leader = {
									name = "Jacques Doriot"
									ruling_only = yes
								}
							}
						}

						has_government = fascism
					}
				}
				ROOT = {
					remove_ideas = victor_emmanuel
					set_cosmetic_tag = ITA_RSI
					set_party_name = {
						ideology = fascism
						long_name = "Partito Fascista Repubblicano"
						name = "PFR"
					}
				}
			}
		}
	}

###---> On Release As Puppet <><> <><> <><>
	on_release_as_puppet = {
		effect = {
			#funny cosmetic tags related to French India and Goa
			if = {
				limit = { 
					original_tag = RAJ
					is_puppet_of = FRA
						
				}
				set_cosmetic_tag = RAJ_FRA																		  
			}
			if = {
				limit = { 
					original_tag = RAJ
					is_puppet_of = FRA
					has_government = communism
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Caïlacha Subbiah"
								ruling_only = no
							}
						}									
					}		
				}
				create_country_leader = { #indian in japanese indian army but coulen't find better
					name = "Caïlacha Subbiah"
					desc = "POLITICS_LORD_LINLITHGOW_DESC"
					picture = "gfx/leaders/kr_generic/Portrait_America_Generic_land_5.dds"
					expire = "1965.1.1"
					ideology = stalinism
					traits = {
						
					}
				}
			}
			if = {
				limit = { 
					original_tag = RAJ
					is_puppet_of = FRA
					has_government = neutrality
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Deiva Zivarattinam"
								ruling_only = no
							}
						}									
					}		
				}
				create_country_leader = { #Representative of Pondichéry
					name = "Deiva Zivarattinam"
					desc = "POLITICS_LORD_LINLITHGOW_DESC"
					picture = "gfx/leaders/kr_generic/Portrait_America_Generic_land_6.dds"
					expire = "1965.1.1"
					ideology = centrism
					traits = {
						
					}
				}
			}			
			if = {
				limit = { 
					original_tag = RAJ
					is_puppet_of = FRA
					has_government = fascism
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Prem Sahgal"
								ruling_only = no
							}
						}									
					}		
				}
				create_country_leader = { #indian in japanese indian army but coulen't find better
					name = "Prem Sahgal" # may be his portrait, not sure.
					desc = "POLITICS_LORD_LINLITHGOW_DESC"
					picture = "gfx/leaders/kr_generic/Portrait_India_Generic_land_new_1.dds"
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {
						
					}
				}
			}						
			if = {
				limit = { 
					original_tag = RAJ
					is_puppet_of = POR
						
				}
				set_cosmetic_tag = RAJ_POR																  
			}
			if = {
				limit = { 
					original_tag = RAJ
					is_puppet_of = POR
					has_government = fascism
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Jose Ricardo Pereira Cabral"
								ruling_only = no
							}
						}									
					}
						
				}
				create_country_leader = {
					name = "Jose Ricardo Pereira Cabral"
					desc = " "
					picture = "gfx/leaders/r56_generic/r56_portrait_ITA_generic_land_2.dds"
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {
						committed_colonialist
					}
				}
			}
			if = {
				limit = { 
					original_tag = RAJ
					is_puppet_of = POR
					has_government = democratic
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Jose Ricardo Pereira Cabral"
								ruling_only = no
							}
						}									
					}
						
				}
				create_country_leader = {
					name = "Jose Ricardo Pereira Cabral"
					desc = " "
					picture = "gfx/leaders/r56_generic/r56_portrait_ITA_generic_land_2.dds"
					expire = "1965.1.1"
					ideology = conservatism
					traits = {
						committed_colonialist
					}
				}
			}
			if = {
				limit = { 
					original_tag = RAJ
					is_puppet_of = POR
					has_government = neutrality
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Jose Ricardo Pereira Cabral"
								ruling_only = no
							}
						}									
					}
						
				}
				create_country_leader = {
					name = "Jose Ricardo Pereira Cabral"
					desc = " "
					picture = "gfx/leaders/r56_generic/r56_portrait_ITA_generic_land_2.dds"
					expire = "1965.1.1"
					ideology = moderatism
					traits = {
						committed_colonialist
					}
				}
			}	
			if = {
				limit = { 
					original_tag = RAJ

					has_government = fascism

					
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Subhas Chandra Bose"
								ruling_only = no
							}
						}									
					}
					NOT = {
						has_country_leader = {
							character = RAJ_v._d._savarkar
							ruling_only = no
						}
					}	
				}
				create_country_leader = {
					name = "Subhas Chandra Bose"
					desc = " "
					picture = "gfx/leaders/RAJ/r56_portrait_RAJ_Subhas_Chadra_Bose.dds"
					expire = "1965.1.1"
					ideology = fascism_ideology
					traits = {
						indomitable_perseverance
					}
				}
			}				
			if = {
				limit = {
					original_tag = GER
					is_puppet_of = FRA					
					FROM = {
						has_government = neutrality
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Hans Luther"
								ruling_only = no
							}
						}
					}						
				}
				create_country_leader = {
					name = "Hans Luther"
					desc = " "
					picture = "gfx/leaders/kr_generic/Portrait_Europe_Generic_new_3.dds"
					expire = "1965.1.1"
					ideology = oligarchism
					traits = {
						r56_trait_opposed_to_communism
						naw_thrifty
					}
				}
				#set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }
			}								
			### Vilmos Roder as puppet Hungarian leader
			if = {
				limit = {
					ROOT = { tag = HUN }
					FROM = {
						OR = {
							original_tag = ROM
							original_tag = TRA
							original_tag = CZE
							original_tag = SLO
							original_tag = YUG
							original_tag = SER
						}
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Vilmos Rőder"
								ruling_only = no
							}
						}
					}					
				}
				if = {
					limit = {
						FROM = {
							has_government = fascism
						}
					}
					#the generic portrait is actually him
					#create_country_leader = {
					#	name = "Vilmos Rőder"
					#	desc = " "
					#	picture = "gfx/leaders/Europe/portrait_europe_generic_6.dds"
					#	expire = "1965.1.1"
					#	ideology = fascism_ideology
					#	traits = {
					#		r56_trait_opposed_to_communism
					#		rearmer
					#	}
					#}
					#set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }
					add_country_leader_role = {
						Character = HUN_vilmos_roder
						Promote_leader = yes
						Country_leader = {
							 ideology = fascism_ideology
							 expire = "1965.1.1"
							traits = {
								r56_trait_opposed_to_communism
								rearmer
							}
						}
					}
					HUN_vilmos_roder = {
						promote_character = {
							ideology = fascism_ideology 
						} 
					}																
				}
				if = {
					limit = {
						FROM = {
							has_government = neutrality
						}
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Vilmos Rőder"
									ruling_only = no
								}
							}
						}						
					}
					#the generic portrait is actually him
					add_country_leader_role = {
						Character = HUN_vilmos_roder
						Promote_leader = yes
						Country_leader = {
							 ideology = oligarchism
							 expire = "1965.1.1"
							traits = {
								r56_trait_opposed_to_communism
								rearmer
							}
						}
					}
					HUN_vilmos_roder = {
						promote_character = {
							ideology = oligarchism 
						} 
					}
					#set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }
				}
			}
			if = {
				limit = {
					ROOT = { tag = ENG }
					FROM = {
						OR = {
							original_tag = GER
							original_tag = HAN
							original_tag = PRE
							original_tag = SAX
						}
						has_government = fascism
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Charles Edward of Albany"
								ruling_only = no
							}
						}
					}					
				}
				create_country_leader = { #pro nazi prince, should appear if there are 2 british collaboration governements
					name = "Charles Edward of Albany"
					desc = ""
					picture = "gfx/leaders/ENG/Portrait_Britain_Generic_3.dds"
					expire = "1965.1.1"
					ideology = nazism
					traits = {
						#
					}
				}
			}			
			#### Trying to fix puppet communist Hungary
			if = {
				limit = {
					original_tag = HUN
					has_government = communism
					has_focus_tree = generic_focus
				}
				load_focus_tree = { tree = hungarian_focus keep_completed = yes }
				complete_national_focus = HUN_economic_intervention
				complete_national_focus = HUN_council_of_peoples_commissars
			}

			##### OVERLORD keeps the Panama Canal
			if = {
				limit = {
					original_tag = PAN

					controls_state = 685
					controls_state = 304
					controls_state = 364
				}
				OVERLORD = { transfer_state = 685 }
			}
			### Non Aligned Britain empowers Philip of Greece (future Philip Mountbatten - husband of Elisabeth II)
			if = {  #MOD. Compressed
				limit = {
					FROM = { tag = ENG }
					ENG = { has_government = neutrality }
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Philip of Greece"
								ruling_only = no
							}
						}
					}
				}
				if = {
					limit = {
						OR = {
							ROOT = { original_tag = GRE }
							ROOT = { original_tag = DEN } ### Same but for Denmark as the house of Glucksburg had relatives on both thrones
						}
					}
					create_country_leader = {
						name = "Philip of Greece"
						desc = ""
						picture = "gfx/leaders/r56_generic/r56_portrait_generic_admiral_europe_3.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							eager_collaborator
							popular_figurehead2
						}
					}
				}
			}

			#Andrija Hebrang as pro Soviet Yug/Cro leader
			if = {
                limit = {
					OR = {
						tag = YUG
						tag = CRO
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Andrija Hebrang"
								ruling_only = yes
							}
						}
					}

                    FROM = {
						AND = {
							OR = {
								original_tag = SOV
								is_in_faction_with = SOV
							}
							SOV = {
								has_government = communism
							}
						}

					}
                }
				create_country_leader = {
					name = "Andrija Hebrang"
					desc = ""
					picture = "gfx/leaders/YUG/r56_portrait_YUG_Andrija_Hebrang.dds"
					expire = "1965.1.1"
					ideology = stalinism
					traits = {
						#
					}
				}
			}

			##### GER claims
			if = { #MOD. Compressed
				limit = { is_puppet_of = GER }
				if = {
					limit = {
						original_tag = CZE
						controls_state = 69
						controls_state = 74
						GER = {
							controls_state = 65
							controls_state = 66
						}
					}
					69 = { add_core_of = GER }
					GER = { transfer_state = 69 }
					74 = { add_core_of = GER }
					GER = { transfer_state = 74 }
				}
				if = {
					limit = {
						original_tag = POL
						controls_state = 807
						GER = { controls_state = 63 }
					}
					807 = { add_core_of = GER }
					GER = { transfer_state = 807 }
				}
				if = {
					limit = {
						original_tag = POL
						controls_state = 85
						GER = { controls_state = 763 }
					}
					85 = { add_core_of = GER }
					GER = { transfer_state = 85 }
				}
				if = {
					limit = {
						original_tag = BEL
						controls_state = 893
						GER = {
							OR = {
								controls_state = 42
								controls_state = 51
							}
						}
					}
					893 = { add_core_of = GER }
					GER = { transfer_state = 893 }
				}
				if = {
					limit = {
						original_tag = FRA
						controls_state = 28
						GER = {
							OR = {
								controls_state = 850
								controls_state = 42
							}
						}
					}
					GER = { transfer_state = 28 }
					28 = { add_compliance = 25 }
				}
				if = {
					limit = {
						original_tag = DEN
						controls_state = 892
						GER = { controls_state = 58 }
					}
					GER = { transfer_state = 892 }
					892 = { add_compliance = 25 }
				}
				if = {
					limit = {
						original_tag = LIT
						controls_state = 188
						GER = {
							controls_state = 763
						}
					}
					188 = { add_core_of = GER }
					GER = { transfer_state = 188 }
				}				
			}
			if = { #Same but for Prussia
				limit = { is_puppet_of = PRE }
				if = {
					limit = {
						original_tag = CZE
						controls_state = 69
						controls_state = 74
						PRE = {
							controls_state = 65
							controls_state = 66
						}
					}
					69 = { add_core_of = PRE }
					PRE = { transfer_state = 69 }
					74 = { add_core_of = PRE }
					PRE = { transfer_state = 74 }
				}
				if = {
					limit = {
						original_tag = POL
						controls_state = 807
						PRE = { controls_state = 63 }
					}
					807 = { add_core_of = PRE }
					PRE = { transfer_state = 807 }
				}
				if = {
					limit = {
						original_tag = POL
						controls_state = 85
						PRE = { controls_state = 763 }
					}
					85 = { add_core_of = PRE }
					PRE = { transfer_state = 85 }
				}
				if = {
					limit = {
						original_tag = BEL
						controls_state = 893
						PRE = {
							OR = {
								controls_state = 42
								controls_state = 51
							}
						}
					}
					893 = { add_core_of = PRE }
					PRE = { transfer_state = 893 }
				}
				if = {
					limit = {
						original_tag = FRA
						controls_state = 28
						PRE = {
							OR = {
								controls_state = 850
								controls_state = 42
							}
						}
					}
					PRE = { transfer_state = 28 }
					28 = { add_compliance = 25 }
				}
				if = {
					limit = {
						original_tag = DEN
						controls_state = 892
						PRE = { controls_state = 58 }
					}
					PRE = { transfer_state = 892 }
					892 = { add_compliance = 25 }
				}
				if = {
					limit = {
						original_tag = LIT
						controls_state = 188
						PRE = {
							controls_state = 763
						}
					}
					188 = { add_core_of = PRE }
					PRE = { transfer_state = 188 }
				}				
			}
			#### AUS claims: Republic of German Austria

			if = {
				limit = {
					original_tag = CZE
					is_puppet_of = AUS

					controls_state = 69
					controls_state = 74
					AUS = {
						controls_state = 65
						controls_state = 66
					}
				}
				69 = { add_core_of = AUS }
				AUS = { transfer_state = 69 }
				74 = { add_core_of = AUS }
				AUS = { transfer_state = 74 }
			}

			###
			##### HUN claims
			if = { #MOD. Compressed
				limit = { is_puppet_of = HUN }
				if = {
					limit = {
						OR = {
							original_tag = CZE
							original_tag = SLO
						}
						controls_state = 664
						HUN = {
							OR = {
								controls_state = 155
								controls_state = 43
							}

						}
					}
					664 = { add_core_of = HUN }
					HUN = { transfer_state = 664 }
				}
				if = {
					limit = {
						original_tag = ROM
						controls_state = 76
						HUN = { controls_state = 154 }
					}
					76 = { add_core_of = HUN }
					HUN = { transfer_state = 76 }
				}
				if = {
					limit = {
						OR = {
							original_tag = YUG
							original_tag = SLV
						}
						controls_state = 884
						HUN = { controls_state = 155 }
					}
					884 = { add_core_of = HUN }
					HUN = { transfer_state = 884 }
				}
				if = {
					limit = {
						OR = {
							original_tag = YUG
							original_tag = SER
						}
						controls_state = 45
						HUN = { controls_state = 840 }
					}
					45 = { add_core_of = HUN }
					HUN = { transfer_state = 45 }
				}
			}

			###
			##### ITA claims
			if = { #MOD. Compressed
				limit = { is_puppet_of = ITA }
				if = {
					limit = {
						OR = {
							original_tag = YUG
							original_tag = CRO
						}
						controls_state = 736
						ITA = {
							controls_state = 837
						}
					}
					736 = { add_core_of = ITA }
					ITA = { transfer_state = 736 }
				}
				if = {
					limit = {
						OR = {
							original_tag = YUG
							original_tag = SLV
						}
						controls_state = 837
						ITA = { controls_state = 838 }
					}
					837 = { add_core_of = ITA }
					ITA = { transfer_state = 837 }
				}
				if = {
					limit = {
						original_tag = AUS
						controls_state = 39
						ITA = { controls_state = 159 }
					}
					159 = { add_core_of = ITA }
					ITA = { transfer_state = 159 }
				}
				if = {
					limit = {
						original_tag = FRA
						controls_state = 1
						num_of_controlled_states > 1
						ITA = { controls_state = 114 }
					}
					ITA = { transfer_state = 1 }
				}
			}

			###
			##### POL claims
			if = {
				limit = {
					original_tag = CZE
					is_puppet_of = POL
					controls_state = 72
					POL = {
						controls_state = 88
					}
				}
				72 = { add_core_of = POL }
				POL = { transfer_state = 72 }
			}

			###
			##### TUR claims
			if = { #// Was duplicated.
				limit = {
					original_tag = SYR
					is_puppet_of = TUR
					controls_state = 799
					TUR = {
						controls_state = 344
					}
				}
				799 = { add_core_of = TUR }
				TUR = { transfer_state = 799 }
			}

			###
			##### UKR claims
			if = { #MOD. Compressed
				limit = { is_puppet_of = UKR }
				if = {
					limit = {
						original_tag = POL
						controls_state = 93
						UKR = {
							OR = {
								controls_state = 199
								controls_state = 201
							}
						}
					}
					93 = { add_core_of = UKR }
					UKR = { transfer_state = 93 }
				}
				if = {
					limit = {
						original_tag = POL
						controls_state = 91
						UKR = {
							OR = {
								controls_state = 199
								controls_state = 93
							}
						}
					}
					91 = { add_core_of = UKR }
					UKR = { transfer_state = 91 }
				}
				if = {
					limit = {
						original_tag = POL
						controls_state = 89
						UKR = { controls_state = 91 }
					}
					89 = { add_core_of = UKR }
					UKR = { transfer_state = 89 }
				}
				if = {
					limit = {
						original_tag = ROM
						controls_state = 766
						UKR = { controls_state = 192 }
					}
					UKR = { transfer_state = 766 }
					766 = { add_core_of = UKR }
				}
				if = {
					limit = {
						original_tag = ROM
						controls_state = 80
						UKR = {
							OR = {
								controls_state = 89
								controls_state = 91
							}
						}
					}
					UKR = { transfer_state = 80 }
					80 = { add_core_of = UKR }
				}
				if = {
					limit = {
						OR = {
							original_tag = CZE
							original_tag = HUN
						}
						controls_state = 73
						UKR = { controls_state = 89 }
					}
					UKR = { transfer_state = 73 }
					89 = { add_core_of = UKR }
				}
			}

			###
			##### SOV claims on Romania
			if = { #MOD. Compressed
				limit = {
					original_tag = ROM
					is_puppet_of = SOV
				}
				if = {
					limit = {
						controls_state = 766
						766 = { is_core_of = SOV }
						SOV = { controls_state = 192 }
					}
					SOV = { transfer_state = 766 }
					766 = {
						add_core_of = UKR
						add_core_of = SOV
					}
				}
				if = {
					limit = {
						controls_state = 80
						80 = { is_core_of = SOV }
						SOV = {
							OR = {
								controls_state = 89
								controls_state = 91
							}
						}
					}
					SOV = { transfer_state = 80 }
					80 = {
						add_core_of = UKR
						add_core_of = SOV
					}
				}
			}

			###
			##### LIT claims
			if = {
				limit = {
					original_tag = POL
					is_puppet_of = LIT
					controls_state = 784
					UKR = {
						controls_state = 11
					}
				}
				LIT = { transfer_state = 784 }
			}

			##### IRE claims
			if = {
				limit = {
					original_tag = ENG
					is_puppet_of = IRE
					controls_state = 119
					IRE = {
						OR = {
							controls_state = 113
							controls_state = 134
						}
					}
				}
				IRE = { transfer_state = 119 }
			}

			##### BUL claims
			if = { #MOD. Compressed
				limit = { is_puppet_of = BUL }
				if = {
					limit = {
						OR = {
							original_tag = YUG
							original_tag = SER
						}
						controls_state = 803
						BUL = { controls_state = 48 }
					}
					BUL = { transfer_state = 803 }
				}
				if = {
					limit = {
						OR = {
							original_tag = YUG
							original_tag = SER
						}
						controls_state = 106
						BUL = { controls_state = 48 }
					}
					BUL = { transfer_state = 106 }
				}
				if = {
					limit = {
						original_tag = GRE
						controls_state = 184
						BUL = { controls_state = 212 }
					}
					BUL = { transfer_state = 184 }
				}
				if = {
					limit = {
						original_tag = GRE
						controls_state = 731
						BUL = { controls_state = 212 }
					}
					BUL = { transfer_state = 731 }
					731 = { add_compliance = 10 }
				}
				if = {
					limit = {
						original_tag = ROM
						controls_state = 77
						BUL = { controls_state = 211 }
					}
					BUL = { transfer_state = 77 }
				}
			}

			##### BOL claims
			if = { #MOD. Compressed
				limit = { is_puppet_of = BOL}
				if = {
					limit = {
						original_tag = CHL
						controls_state = 506
						BOL = { controls_state = 302 }
					}
					BOL = { transfer_state = 506 }
				}

				if = {
					limit = {
						original_tag = PAR
						controls_state = 688
						BOL = { controls_state = 302 }
					}
					BOL = { transfer_state = 688 }
				}
			}

			##### BEL claims
			if = {
				limit = {
					original_tag = FRA
					is_puppet_of = BEL
					controls_state = 29
					BEL = {
						OR = {
							has_government = neutrality
							has_government = fascism
						}
						OR = {
							controls_state = 6
							controls_state = 34
						}
					}
				}

				BEL = { transfer_state = 29 }
				29 = {
					add_compliance = 10
				}
			}

			##### FRA claims keep French Basque Country
			if = {
				limit = {
					original_tag = NAV
					is_puppet_of = FRA
					controls_state = 806
					num_of_controlled_states > 1
					FRA = {
						OR = {
							controls_state = 19
							controls_state = 31
						}
					}
				}
				NAV = { transfer_state = 806 }
			}

			###
			##### JAP claims
			if = {
				limit = {
					OR = {
						original_tag = SOV
						original_tag = GUK
					}


					is_puppet_of = JAP

					controls_state = 655
					JAP = {
						controls_state = 537
					}
				}
				JAP = { transfer_state = 655 }
			}
			#########

			### Venezuela
            if = { #MOD. Compressed
                limit = {
                    ROOT = { original_tag = VEN }
				}
				### Non Communist Britain sets up a admiral leader in Venezuela, because why not?
				if = {
					limit = {
						FROM = { tag = ENG }
						ENG = {
							NOT = { has_government = communism }
						}
					}
					create_country_leader = {
						name = "Manley Powers"
						desc = ""
						picture = "gfx/leaders/ENG/r56_portrait_ENG_Arthur_Palliser.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							vfb_trait_rademaker
						}
					}
					create_country_leader = {
						name = "Manley Powers"
						desc = ""
						picture = "gfx/leaders/ENG/r56_portrait_ENG_Arthur_Palliser.dds"
						expire = "1965.1.1"
						ideology = liberalism
						traits = {
							vfb_trait_rademaker
						}
					}
					create_country_leader = {
						name = "Manley Powers"
						desc = ""
						picture = "gfx/leaders/ENG/r56_portrait_ENG_Arthur_Palliser.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							vfb_trait_rademaker
						}
					}
				}
				### Germany empowers Venezuelan Nazi Party
				if = {
					limit = {
						FROM = { tag = GER }
						GER = { has_government = fascism }
					}
					create_country_leader = {
						name = "Arnold Margerie"
						desc = ""
						picture = "gfx/leaders/r56_generic/r56_portrait_generic_politician_europe_3.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							dictator
							r56_trait_opposed_to_communism
						}
					}
					set_party_name = {
						ideology = fascism
						long_name = "Grupo Regional de Venezuela del Partido Nazi"
						name = "GRVPN"
					}
				}
			}

			#########
			#Release Dalmatia put the Dalmatian tag on Croatia
			if = {
				limit = {
					ROOT = { original_tag = CRO }
					NOT = {
						OR = {
							owns_state = 109
							owns_state = 887
							owns_state = 880
						}
					}
				}
				set_cosmetic_tag = dalmatia
			}
			#Release Memel/Klaipėda put the Memel tag on lithuania
			if = {
				limit = {
					ROOT = { original_tag = LIT }
					NOT = {
						OR = {
							owns_state = 189
							owns_state = 11
							owns_state = 784
						}
					}
				}
				set_cosmetic_tag = LIT_MEMEL
			}
			# CHI
			if = { #MOD. Compressed. Fixed bug.
				limit = {
					ROOT = { original_tag = CHI }
					NOT = {
						OR = {
							owns_state = 524
							owns_state = 591
							owns_state = 592
							owns_state = 594
							owns_state = 596
							owns_state = 613
							owns_state = 620
							owns_state = 605
							owns_state = 603
							owns_state = 597
							owns_state = 622
							owns_state = 615
							owns_state = 608
							owns_state = 716
							owns_state = 328
							owns_state = 325
						}
					}
				}
				if = {
					limit = {
						FROM = { original_tag = ENG }
						owns_state = 326
					}
					set_cosmetic_tag = CHI_HK_UK
				}
				else_if = {
					limit = {
						FROM = { original_tag = POR }
						owns_state = 729
					}
					set_cosmetic_tag = CHI_MAC_POR
				}
				else_if = {
					limit = {
						FROM = {
							NOT = { original_tag = POR }
						}
						owns_state = 729
					}
					set_cosmetic_tag = CHI_MAC
				}
				else_if = {
					limit = {
						FROM = {
							NOT = { original_tag = ENG }
						}
						owns_state = 326
					}
					set_cosmetic_tag = CHI_HK
				}
			}

			#Releasing the Açores put the tag on Portugal
			if = {
				limit = {
					ROOT = { original_tag = POR }
					owns_state = 698
					NOT = {
						OR = {
							owns_state = 179
							owns_state = 795
							owns_state = 112
							owns_state = 181
							owns_state = 180
							AND = {
								owns_state = 540
								540 = { is_core_of = ROOT }
							}
							has_cosmetic_tag = KPB_kingdom_portugal_and_brazil
						}
					}
				}
				set_cosmetic_tag = POR_ACORES
			}

			## Czechoslovakia becomes czechia
			if = {
				limit = {
					ROOT = { original_tag = SLO }
					FROM = {
						original_tag = CZE
					}
				}
				FROM = {
					set_cosmetic_tag = CZE_ONLY
				}
			}

			#Britain maintains Monarchy in Iran against abdication of Reza Shah Pahlavi
			if = {
				limit = {
					original_tag = PER
					has_country_leader = {
						name = "Reza Shah Pahlavi"
						ruling_only = no
					}
					FROM = {
						OR = {
							AND = {
								original_tag = ENG
								has_government = democratic
							}
							has_government = neutrality
						}
					}
				}
				retire_ideology_leader = neutrality
				set_politics = {
					ruling_party = neutrality
				}
				add_popularity = {
					ideology = neutrality
					popularity = 0.5
				}
			}
			#Force Hjalmar Mae as collaborator instead of Artur Sirk
			if = {
				limit = {
					original_tag = EST
					has_government = fascism
					OR = {
						FROM = {
							original_tag = GER
						}
						any_other_country = {
							has_country_leader = {
								name = "Artur Sirk"
							}
						}
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Hjalmar Mae"
							}
						}
					}
				}
				create_country_leader = {
					name = "Hjalmar Mae"
					picture = "r56_portrait_EST_Hjalmar_Mae.dds"
					expire = "1959.1.1"
					ideology = nazism
					traits = {

					}
				}
			}

			#Force Wang Jingwei as collaborator
			if = { #MOD. Compressed.
				limit = {
					ROOT = { original_tag = CHI }
					FROM = { tag = JAP }
				}
				if = {
					limit = {
						JAP = { has_government = fascism }
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Wang Jingwei"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "Wang Jingwei"
						desc = " "
						picture = "gfx/leaders/CHI/r56_portrait_CHI_Wang_Jingwei.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							eager_collaborator
						}
					}
					set_party_name = { ideology = fascism long_name = KMT_wjw name = KMT_wjw }
				}
				if = {
					limit = {
						JAP = { has_government = fascism }
						any_other_country = {
							has_country_leader = {
								name = "Wang Jingwei"
								ruling_only = no
							}
						}
					}
					create_country_leader = {
						name = "Liang Hongzhi"
						desc = " "
						picture = "gfx/leaders/CHI/r56_portrait_CHI_Liang_Hongzhi.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							eager_collaborator
						}
					}
					set_party_name = { ideology = fascism long_name = KMT_wjw name = KMT_wjw }
				}
				if = {
					limit = {
						JAP = { has_government = neutrality }
						NOT = {
							any_other_country = {
								has_country_leader = {
									name = "Wang Jingwei"
									ruling_only = no
								}
							}
						}
					}
					create_country_leader = {
						name = "Wang Jingwei"
						desc = " "
						picture = "gfx/leaders/CHI/r56_portrait_CHI_Wang_Jingwei.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							eager_collaborator
						}
					}
					set_party_name = { ideology = neutrality long_name = KMT_wjw name = KMT_wjw }
				}
				if = {
					limit = {
						JAP = { has_government = neutrality }
						any_other_country = {
							has_country_leader = {
								name = "Wang Jingwei"
								ruling_only = no
							}
						}
					}
					create_country_leader = {
						name = "Liang Hongzhi"
						desc = " "
						picture = "gfx/leaders/CHI/r56_portrait_CHI_Liang_Hongzhi.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							eager_collaborator
						}
					}
				}
			}

			if = { #MOD. Compressed.
				limit = { ROOT = { tag = GRL } }
				if = {
					limit = {
						FROM = {
							OR = {
								original_tag = ICE
								original_tag = SWE
								original_tag = ENG
								original_tag = NOR
								original_tag = GER
								original_tag = HOL
								original_tag = FRA
								original_tag = BEL
							}
							has_government = neutrality
						}
					}
					set_global_flag = r56_greenland_release #checks need for government change in USA event with Greenland
					GRL = {
						set_cosmetic_tag = GRLroyal #flag only change no need to drop atm
						set_party_name = {
							ideology = neutrality
							name = GRL_puppet_n_party_name
							long_name = GRL_puppet_n_party_l_name
						}
					}
				}
				if = {
					limit = {
						FROM = {
							original_tag = DEN
							has_government = democratic
						}
					}
					set_global_flag = r56_greenland_release #checks need for government change in USA event with Greenland
					GRL = {
						add_popularity = {
							ideology = fascism
							popularity = -0.01
						}
						add_popularity = {
							ideology = neutrality
							popularity = 0.31
						}
						set_politics = {
							ruling_party = neutrality
						}
						set_party_name = {
							ideology = neutrality
							name = GRL_puppet_n_party_name
							long_name = GRL_puppet_n_party_l_name
						}
					}
				}
			}

			if = {
				limit = {
					tag = QBC
				}
				466 = {
					remove_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					clr_state_flag = quebec_conscription_crisis_flag
				}
				468 = {
					remove_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					clr_state_flag = quebec_conscription_crisis_flag
				}
			}
			if = {
				limit = {
					ROOT = {
						tag = ITA
					}
					FROM = {
						OR = {
							original_tag = GER
							original_tag = USA
							original_tag = POL
							original_tag = IRE
							AND = {
								original_tag = FRA
								has_country_leader = {
									name = "Jacques Doriot"
									ruling_only = yes
								}
							}
						}

						has_government = fascism
					}
				}
				ROOT = {
					remove_ideas = victor_emmanuel
					set_cosmetic_tag = ITA_RSI
					set_party_name = {
						ideology = fascism
						long_name = "Partito Fascista Repubblicano"
						name = "PFR"
					}
				}
			}
			if = {
				limit = {
					ROOT = {
						tag = HUN
					}
					FROM = {
						original_tag = GER
						has_government = fascism
					}
				}
				ROOT = {
					create_country_leader = {
						name = "Ferenc Szalasi"
						desc = " "
						picture = "gfx/leaders/HUN/r56_portrait_HUN_Ferenc_Szalasi.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							anti_communist
							fascist_militia_leader
						}
					}
					set_party_name = { ideology = fascism long_name = HUN_arrow_cross_party_long name = HUN_arrow_cross_party }
				}
			}
			#if = {
			#	limit = {
			#		tag = KOR
			#		is_puppet_of = JAP
			#		NOT = {
			#			has_government = communism
			#		}
			#		NOT = {
			#			has_global_flag = japanse_korean_generals
			#		}
			#	}
			#}
			if = {
				limit = {
					ROOT = { original_tag = KOR }
					FROM = {
						OR = {
							original_tag = USA
							original_tag = ENG
							original_tag = FRA
							original_tag = SHX
							original_tag = GXC
							original_tag = XSM
							original_tag = YUN
							original_tag = TNG
							original_tag = CHI
							original_tag = PRC
						}
					}
				}
				retire_ideology_leader = fascism
				set_party_name = {
					ideology = fascism
					long_name = "National Association"
					name = "NA"
				}
			}
			if = {
                limit = {
                    original_tag = SOV
					has_government = neutrality
                    FROM = {
						OR = {
							original_tag = FRA
							original_tag = AUS
							original_tag = HUN
							original_tag = PER
							original_tag = BEL
							AND = {
								original_tag = SPR
								NOT = {
									has_country_leader = {
										name = "Anarchist Commune"
										ruling_only = yes
									}
								}
							}
							original_tag = JAP
							original_tag = ROM
							original_tag = BUL
							original_tag = GER
							original_tag = PRE
							original_tag = BAY
							original_tag = BAD
							original_tag = WUR
							original_tag = MEK
							original_tag = SHL
							original_tag = SAX
							original_tag = HAN
							original_tag = DEN
							original_tag = SWE
							original_tag = NOR
							original_tag = CAN
							original_tag = JOR
							original_tag = IRQ
							original_tag = GRE
							original_tag = YUG
							original_tag = HOL
							original_tag = MAN
							original_tag = ARM
							original_tag = EGY
							original_tag = SAU
							original_tag = ITA

							AND = {
								original_tag = POR
								has_country_leader = {
									name = "Dom Duarte Nuno"
									ruling_only = yes
								}
							}
							AND = {
								original_tag = BRA
								has_country_leader = {
									name = "Pedro III"
									ruling_only = yes
								}
							}
							AND = {
								original_tag = USA
								has_country_leader = {
									name = "Wallis I"
									ruling_only = yes
								}
							}
							AND = {
								original_tag = HON
								has_country_leader = {
									name = "Juan III"
									ruling_only = yes
								}
							}
						}
					}
					NOT = {
						any_other_country = {
							has_country_leader = {
								name = "Kirill Vladimirovich"
								ruling_only = no
							}
						}
					}
				}
				drop_cosmetic_tag = yes
				set_cosmetic_tag = SOV3
				set_party_name = {
					ideology = neutrality
					long_name = r56_SOV_neu
					name = r56_SOV_neu
				}
			 	create_country_leader = {
					name = "Kirill Vladimirovich"
					desc = " "
					picture = "r56_portrait_SOV_Kirill_Vladimirovich_Romanov.dds"
					expire = "1965.1.1"
					ideology = absolute_monarchism
					traits = {
						anti_communist
					}
				}
			}

			if = { #MOD. Compressed
				limit = { tag = POL }
				if = {
					limit = {
						SOV = { has_country_flag = SOV_purge_started }
						NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
						NOT = { has_completed_focus = POL_Seek_Autonomy }
						NOT = { has_country_flag = PPS_Revolutionary_Path }
					}
					create_country_leader = {
						name = "Tymczasowy Rząd Jedności Narodowej"
						desc = " "
						picture = "r56_portrait_POL_Provisional_Government_of_National_Unity.dds"
						expire = "1965.1.1"
						ideology = stalinism
						traits = { }
					}
				}
				if = {
					limit = {
						is_puppet_of = SOV
						has_government = communism
						NOT = { has_completed_focus = POL_Draw_Closer_To_The_USSR }
						NOT = { has_completed_focus = POL_Seek_Autonomy }
					}
					POL = { set_party_name = { ideology = communism long_name = POL_ZPP_party_long name = POL_ZPP_party } }
					drop_cosmetic_tag = yes
					create_country_leader = {
						name = "Tymczasowy Rząd Jedności Narodowej"
						desc = " "
						picture = "r56_portrait_POL_Provisional_Government_of_National_Unity.dds"
						expire = "1965.1.1"
						ideology = stalinism
						traits = {
						}
					}
					if = {
						limit = {
							NOT = { has_unit_leader = 3179 }
							SOV = { NOT = { has_country_flag = purge_1_group_b } }
						}
						create_field_marshal = {
							name = "Konstanty Rokossowski"
							picture = "r56_portrait_POL_Konstanty_Rokossowski.dds"
							traits = { politically_connected panzer_leader panzer_expert offensive_doctrine thorough_planner aggressive_assaulter }
							id = 3179
							skill = 5
							attack_skill = 5
							defense_skill = 2
							planning_skill = 5
							logistics_skill = 4
						}
					}
					if = {
						limit = { NOT = { has_unit_leader = 3156 } }
						create_field_marshal = {
							name = "Michał Rola-Żymierski"
							picture = "r56_portrait_POL_Michal_Rola_Zymierski.dds"
							traits = { politically_connected career_officer logistics_wizard aggressive_assaulter }
							id = 3156
							skill = 3
							attack_skill = 3
							defense_skill = 2
							planning_skill = 3
							logistics_skill = 2
						}
					}
					if = {
						limit = { NOT = { has_unit_leader = 3157 } }
						create_field_marshal = {
							name = "Zygmunt Berling"
							picture = "r56_portrait_POL_Zygmunt_Berling.dds"
							traits = { politically_connected career_officer infantry_officer inspirational_leader }
							id = 3157
							skill = 1
							attack_skill = 2
							defense_skill = 1
							planning_skill = 1
							logistics_skill = 1
						}
					}
					if = {
						limit = { NOT = { has_unit_leader = 3177 } }
						create_corps_commander = {
							name = "Stanisław Popławski"
							picture = "r56_portriat_POL_Stanislav_Poplavsky.dds"
							traits = { trait_reckless harsh_leader skilled_staffer }
							id = 3177
							skill = 3
							attack_skill = 4
							defense_skill = 2
							planning_skill = 2
							logistics_skill = 2
						}
					}
					if = {
						limit = { NOT = { has_unit_leader = 3178 } }
						create_corps_commander = {
							name = "Karol Świerczewski"
							picture = "r56_portrait_POL_Karol_Swierczewski.dds"
							traits = { substance_abuser harsh_leader }
							id = 3178
							skill = 1
							attack_skill = 1
							defense_skill = 1
							planning_skill = 1
							logistics_skill = 1
						}
					}
					if = { limit = { has_unit_leader = 3129 }
						remove_unit_leader = 3129 }
					if = { limit = { has_unit_leader = 3155 }
						remove_unit_leader = 3155 }
					if = { limit = { has_unit_leader = 3154 }
						remove_unit_leader = 3154 }
					if = { limit = { has_unit_leader = 3131 }
						remove_unit_leader = 3131 }
					if = { limit = { has_unit_leader = 3132 }
						remove_unit_leader = 3132 }
					if = { limit = { has_unit_leader = 3134 }
						remove_unit_leader = 3134 }
					if = { limit = { has_unit_leader = 3133 }
						remove_unit_leader = 3133 }
					if = { limit = { has_unit_leader = 3135 }
						remove_unit_leader = 3135 }
					if = { limit = { has_unit_leader = 3136 }
						remove_unit_leader = 3136 }
					if = { limit = { has_unit_leader = 3151 }
						remove_unit_leader = 3151 }
					if = { limit = { has_unit_leader = 3152 }
						remove_unit_leader = 3152 }
					if = { limit = { has_unit_leader = 3153 }
						remove_unit_leader = 3153 }
					if = { limit = { has_unit_leader = 3128 }
						remove_unit_leader = 3128 }
					if = { limit = { has_unit_leader = 3130 }
						remove_unit_leader = 3130 }
				}
				if = {
					limit = { is_puppet_of = GER }
					POL = { set_cosmetic_tag = POLG }
					POL = { set_party_name = { ideology = fascism long_name = GER_fascism_party_long name = GER_fascism_party } }
					create_country_leader = {
						name = "Hans Frank"
						desc = " "
						picture = "r56_portrait_POL_Hans_Frank.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							prince_of_terror
							governor_general
							r56_trait_opposed_to_communism
						}
					}
					POL = { set_party_name = { ideology = neutrality long_name = POL_monarchy_party_long name = POL_monarchy_party } }
					create_country_leader = {
						name = "Fryderyk Krystian Wettyn"
						desc = " "
						picture = "r56_portrait_POL_Fryderyk_Krystian_Wettyn.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							POL_king_of_poland
							POL_german_origins
							r56_trait_opposed_to_communism
						}
					}
				}
			}

			if = {
				limit = {
					ROOT = { tag = ZIM }
					FROM = {
						NOT = { tag = ENG }
					}
				}
				ZIM = {
					drop_cosmetic_tag = yes #British colony flag
				}
			}
			# Tech inheritance YUG, ITA, FRA splinter states.
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = CRO
							tag = MTN
							tag = SER
							tag = SLV
							tag = BOS
						}
					}
				}
				inherit_technology = YUG
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = VNZ
							tag = NAP
							tag = SAD
							tag = SIC
						}
					}
				}
				inherit_technology = ITA
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = BRI
							tag = OCC
							tag = COR
						}
					}
				}
				inherit_technology = FRA
			}

			# Rule stuff
			if = {
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_COUNTRIES
					}
				}
				create_intelligence_agency = yes
			}

			if = { #SPO
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = ONE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_1
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = TWO_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_2
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = THREE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_3
				}
			}

			if = { #SPO
				limit = {
					has_game_rule = {
						rule = compliance_rule
						option = COMPLIANCE_25_MORE
					}
				}
				every_country = {
					add_ideas = idea_game_rule_compliance_increase_25
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = compliance_rule
						option = COMPLIANCE_25_LESS
					}
				}
				every_country = {
					add_ideas = idea_game_rule_compliance_decrease_25
				}
			}

			if = { #SPO
				limit = {
					has_game_rule = {
						rule = resistance_rule
						option = RESISTANCE_25_MORE
					}
				}
				every_country = {
					add_ideas = idea_game_rule_resistance_increase_25
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = resistance_rule
						option = RESISTANCE_25_LESS
					}
				}
				every_country = {
					add_ideas = idea_game_rule_resistance_decrease_25
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = special_forces_limit
						option = SPECIAL_FORCES_CAP_100
					}
				}
				every_country = {
					add_ideas = idea_game_rule_special_forces_cap_100
				}
			}
		}
	}

###---> On Release As Puppet <><> <><> <><>
#ROOT = nation being released, FROM = overlord
	on_release_as_free = {
		effect = {
			if = {
				limit = {
					ROOT = { original_tag = INS }
				}
				ROOT = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = HOL_indonesia_commander
						}
						set_nationality = HOL
					}
				}
				if = {
					limit = {
						has_cosmetic_tag = INS_HOL
					}
					drop_cosmetic_tag = yes
				}
			}

			if = {
				limit = {
					original_tag = MAL
					has_country_leader = {
						name = "Shenton Thomas"
						ruling_only = yes
					}
				}
				retire_ideology_leader = neutrality
			}
			
			if = {
				limit = {
					original_tag = KOR
				}
				retire_ideology_leader = fascism
				set_party_name = {
					ideology = fascism
					long_name = "National Association"
					name = "NA"
				}
			}

			if = {
				limit = {
					ROOT = { original_tag = SLO }
					FROM = { original_tag = CZE }
				}
				FROM = {
					set_cosmetic_tag = CZE_ONLY
				}
			}
			if = {
				limit = {
					ROOT = { original_tag = CRO }
					NOT = {
						OR = {
							owns_state = 109
							owns_state = 887
							owns_state = 880
						}
					}
				}
				set_cosmetic_tag = dalmatia
			}
			#Release Memel/Klaipėda put the Dalmatian tag on Croatia
			if = {
				limit = {
					ROOT = { original_tag = LIT }
					NOT = {
						OR = {
							owns_state = 189
							owns_state = 11
							owns_state = 784
						}
					}
				}
				set_cosmetic_tag = LIT_MEMEL
			}
			#Glorious Hong Kong
			if = { #MOD. Compressed.
				limit = {
					ROOT = { original_tag = CHI }
					NOT = { #No "proper" mainland china, I think.
						OR = {
							owns_state = 524
							owns_state = 591
							owns_state = 592
							owns_state = 594
							owns_state = 596
							owns_state = 613
							owns_state = 620
							owns_state = 605
							owns_state = 603
							owns_state = 597
							owns_state = 622
							owns_state = 615
							owns_state = 608
							owns_state = 716
							owns_state = 328
							owns_state = 325
						}
					}
				}
				if = {
					limit = {
						FROM = {
							NOT = { original_tag = ENG }
						}
						owns_state = 326
					}
					set_cosmetic_tag = CHI_HK
				}
				else_if = {
					limit = {
						FROM = { original_tag = ENG }
						owns_state = 326
					}
					set_cosmetic_tag = CHI_HK_UK
				}
				#Macau
				else_if = { #// Bug. The second was identical to the first case.
					limit = {
						FROM = {
							NOT = { original_tag = POR }
						}
						owns_state = 789
					}
					set_cosmetic_tag = CHI_MAC
				}
				else_if = {
					limit = {
						FROM = { original_tag = POR }
						owns_state = 789
					}
					set_cosmetic_tag = CHI_MAC_POR
				}
			}

			#Releasing the Açores put the tag on portugal
			if = {
				limit = {
					ROOT = { original_tag = POR }
					owns_state = 698
					NOT = {
						OR = {
							owns_state = 179
							owns_state = 795
							owns_state = 112
							owns_state = 181
							owns_state = 180
							AND = {
								owns_state = 540
								540 = {
									is_core_of = ROOT
								}
							}
							has_cosmetic_tag = KPB_kingdom_portugal_and_brazil
						}
					}
				}
				set_cosmetic_tag = POR_ACORES
			}

			if = {
				limit = {
					tag = QBC
				}
				466 = {
					remove_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					clr_state_flag = quebec_conscription_crisis_flag
				}
				468 = {
					remove_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					clr_state_flag = quebec_conscription_crisis_flag
				}
			}

			if = {
				limit = {
					ROOT = {
						OR = {
							tag = CRO
							tag = MTN
							tag = SER
							tag = SLV
							tag = BOS
						}
					}
				}
				inherit_technology = YUG
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							tag = VNZ
							tag = NAP
							tag = SAD
							tag = SIC
						}
					}
				}
				inherit_technology = ITA
			}
			if = {
				limit = {
					ROOT = {
						tag = CSA
					}
				}
				random_owned_controlled_state = {
						add_extra_state_shared_building_slots = 2
						add_building_construction = {
								type = arms_factory
								level = 3
								instant_build = yes
						}
                    }
				random_owned_controlled_state = {
						add_extra_state_shared_building_slots = 2
						add_building_construction = {
								type = arms_factory
								level = 3
								instant_build = yes
						}
                    }
				random_owned_controlled_state = {
						add_extra_state_shared_building_slots = 2
						add_building_construction = {
								type = arms_factory
								level = 3
								instant_build = yes
						}
                    }
				}

			### Venezuela
			if = { #MOD. Compression
				limit = { ROOT = { original_tag = VEN } }
				### Non Communist Britain sets up a admiral leader in Venezuela, because why not?
				if = {
					limit = {
						FROM = { tag = ENG }
						ENG = {
							NOT = { has_government = communism }
						}
					}
					create_country_leader = {
						name = "Manley Powers"
						desc = ""
						picture = "gfx/leaders/ENG/r56_portrait_ENG_Arthur_Palliser.dds"
						expire = "1965.1.1"
						ideology = despotism
						traits = {
							vfb_trait_rademaker
						}
					}
					create_country_leader = {
						name = "Manley Powers"
						desc = ""
						picture = "gfx/leaders/ENG/r56_portrait_ENG_Arthur_Palliser.dds"
						expire = "1965.1.1"
						ideology = liberalism
						traits = {
							vfb_trait_rademaker
						}
					}
					create_country_leader = {
						name = "Manley Powers"
						desc = ""
						picture = "gfx/leaders/ENG/r56_portrait_ENG_Arthur_Palliser.dds"
						expire = "1965.1.1"
						ideology = fascism_ideology
						traits = {
							vfb_trait_rademaker
						}
					}
				}
				### Germany empowers Venezuelan Nazi Party
				if = {
					limit = {
						FROM = { tag = GER }
						GER = { has_government = fascism }
					}
					create_country_leader = {
						name = "Arnold Margerie"
						desc = ""
						picture = "gfx/leaders/r56_generic/r56_portrait_generic_politician_europe_3.dds"
						expire = "1965.1.1"
						ideology = nazism
						traits = {
							dictator
							r56_trait_opposed_to_communism
						}
					}
					set_party_name = {
						ideology = fascism
						long_name = "Grupo Regional de Venezuela del Partido Nazi"
						name = "GRVPN"
					}
				}
			}

			if = {
				limit = {
					ROOT = {
						OR = {
							tag = BRI
							tag = OCC
							tag = COR
						}
					}
				}
				inherit_technology = FRA
			}

			if = {
				limit = {
					ROOT = { tag = ZIM }
				}
				ZIM = {
					drop_cosmetic_tag = yes #British colony flag
				}
			}

			if = { #SOP
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_COUNTRIES
					}
				}
				create_intelligence_agency = yes
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_MAJORS_AND_STRONG_MINORS
					}
					OR = {
						capital_scope = {
							OR = {
								is_on_continent = north_america
								is_on_continent = europe
							}
						}
						num_of_controlled_states > 2
						original_tag = WLL
						original_tag = FLA
						original_tag = CAT
						original_tag = CRO
						original_tag = SCO
						original_tag = WLS
						original_tag = NIR
						original_tag = ISR
					}
				}
				create_intelligence_agency = yes
			}

			if = { #SOP
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = ONE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_1
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = TWO_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_2
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = THREE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_3
				}
			}

			if = { #SOP
				limit = {
					has_game_rule = {
						rule = compliance_rule
						option = COMPLIANCE_25_MORE
					}
				}
				every_country = {
					add_ideas = idea_game_rule_compliance_increase_25
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = compliance_rule
						option = COMPLIANCE_25_LESS
					}
				}
				every_country = {
					add_ideas = idea_game_rule_compliance_decrease_25
				}
			}

			if = { #SOP
				limit = {
					has_game_rule = {
						rule = resistance_rule
						option = RESISTANCE_25_MORE
					}
				}
				every_country = {
					add_ideas = idea_game_rule_resistance_increase_25
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = resistance_rule
						option = RESISTANCE_25_LESS
					}
				}
				every_country = {
					add_ideas = idea_game_rule_resistance_decrease_25
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = special_forces_limit
						option = SPECIAL_FORCES_CAP_100
					}
				}
				every_country = {
					add_ideas = idea_game_rule_special_forces_cap_100
				}
			}
		}
	}

###---> On Startup <><> <><> <><>
	on_startup = {
		effect = {
			#Initializing array featuring ALL STATES to use for showcasing formable nations states + trying to improve user-friendly shwocase
			every_state = {
				add_to_array = { global.r56_formables_states_array = THIS.id } 
			}

			#Insane AI Option
			if = {
				limit = {
					has_game_rule = {
						rule = rt56_ai_behavior
						option = OLD_SCHOOL
					}
				}
				set_global_flag = rt56_old_school
			}

			# Add the Darien Gap
			304 = {
				add_province_modifier = {
					static_modifiers = { darien_gap }
					province = {
						id = 10482
					}
				}
			}
			#Quebec conscription crisis: canada
			466 = {
				add_province_modifier = {
					static_modifiers = { quebec_conscription_crisis }
					province = {
						all_provinces = yes
					}
				}
				set_state_flag = quebec_conscription_crisis_flag
			}
			468 = {
				add_province_modifier = {
					static_modifiers = { quebec_conscription_crisis }
					province = {
						all_provinces = yes
					}
				}
				set_state_flag = quebec_conscription_crisis_flag
			}
			#Anglo Persian oil concessions (limited for Khuzestan for now for balance reason)
			PER = {
				give_resource_rights = { receiver = ENG state = 413 }
			}
			#Soviet-Japanese agreement over North Sakhalin oil (lasted roughtly until lake Kassan)
			SOV = {
				give_resource_rights = { receiver = JAP state = 655 }
			}
			#Italian control over Albanian underground
			ALB = {
				give_resource_rights = { receiver = ITA state = 836 }
				give_resource_rights = { receiver = ITA state = 44 }
			}
			FRI = {
				#tried to idea...
				set_division_template_lock = {
					division_template = "1st Brigade Coloniale"
					is_locked = yes
				}
				set_division_template_lock = {
					division_template = "1st Régiment de Tirailleurs Indochinois"
					is_locked = yes
				}
			}
			85 = {
				add_building_construction = {
					type = naval_base
					province = 9263
					level = 1
					instant_build = yes
				}
			}
			POL = {
				#if = {
				#	limit = { has_dlc = "Death or Dishonor" }
					create_production_license = {
						target = ROM
						equipment = {
							type = fighter_equipment_0
						}
						cost_factor = 0
					}
				#}
				country_event = poland.69 #MOD. Moved here, as the limitation no longer applies
			}
			FRA = {
				add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 10000 producer = FRA }
			}
			FRA = {
				if = {
					limit = {
						has_game_rule = {
							rule = FRA_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						20 = { set_country_flag = FRA_AI_RANDOM_DEMOCRATIC_HISTORICAL }
						10 = { set_country_flag = FRA_AI_RANDOM_DEMOCRATIC_LITTLE_ENTENTE }
						10 = { set_country_flag = FRA_AI_RANDOM_COMMUNIST_HUMANITE_UNIE }
						10 = { set_country_flag = FRA_AI_RANDOM_COMMUNIST_COMINTERN }
						10 = { set_country_flag = FRA_AI_RANDOM_FASCIST_FRONT_LIBERTE }
						10 = { set_country_flag = FRA_AI_RANDOM_FASCIST_LA_CAGOULE_COUP }
						10 = { set_country_flag = FRA_AI_RANDOM_MONARCHIST_ORLEANISTS }
						10 = { set_country_flag = FRA_AI_RANDOM_MONARCHIST_BONAPARTISTS }
					}
				}
			}
			ITA = {
				#if = {
				#	limit = { has_dlc = "Death or Dishonor" }
					create_production_license = {
						target = POL
						equipment = {
							type = motorized_equipment_1
						}
						cost_factor = 0
					}
				#}
			}

			###Give Sweden anti-tank tech
			SWE = {
				#set_technology = {
				#	interwar_antitank = 1
				#}
				#if = {
				#	limit = { has_dlc = "Death or Dishonor" }
					create_production_license = {
						target = POL
						equipment = {
							type = anti_tank_equipment_1
						}
						cost_factor = 0
					}
				#}
			}


			if = {
				limit = {
					has_dlc = "La Resistance"
				}
				POL = {
					add_equipment_to_stockpile = { #120 kegresse but then 87 remade into armored carks use the generic mdoel btw
						type = gw_armored_car_equipment
						amount = 87
						producer = FRA
					}
					add_equipment_to_stockpile = { #captured 1920, estimation of what was left in 1939
						type = gw_armored_car_equipment
						amount = 10
						producer = SOV
					}
				}
			}

			if = {
				limit = {
					NOT = {
						has_dlc = "No Step Back"
					}					
				}
				AFG = {
					add_equipment_to_stockpile = { #gift for potential export contract
						type = gw_tank_equipment
						amount = 1
						producer = ITA
					}
					add_equipment_to_stockpile = { #captured by the USSR and gifted to Afghanistan in 1921 (4 according to one source and 8 according to another)
						type = gw_tank_equipment
						amount = 8
						producer = POL
					}
					add_equipment_to_stockpile = { #crappy Disston tank + 3 for parts
						type = gw_tank_equipment
						amount = 9
						producer = USA
					}
					add_equipment_to_stockpile = { #just a guess to reach 24 (but with other estimation now we have those), 5 were sold to Afghanistan in 1937
						type = gw_tank_equipment
						amount = 5
						producer = FRA
					}
					## some Lancia armored cars from Italy
				}				
				ALB = {
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 2
						producer = ITA
					}
				}				
				AUS = {
					add_equipment_to_stockpile = {
						type = light_tank_equipment_1
						amount = 35
						producer = ITA
					}
				}
				BUL = {
					add_equipment_to_stockpile = {
						type = light_tank_equipment_1
						amount = 14
						producer = ITA
					}
				}				
				EST = {
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 12
						producer = FRA
					}
				}
				HUN = {
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 5
						producer = ITA
					}
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 10
						producer = SWE
					}
					add_equipment_to_stockpile = {
						type = light_tank_equipment_1
						amount = 30
						producer = ITA
					}
					add_equipment_to_stockpile = {
						type = light_tank_equipment_1
						amount = 20
						producer = SWE
					}
				}	
				IRE = {
					add_equipment_to_stockpile = {
						type = light_tank_equipment_2
						amount = 1
						producer = SWE
					}
				}	
				KUW = {
					add_equipment_to_stockpile = { # bought 2 crappy Disston tank
						type = gw_tank_equipment
						amount = 2
						producer = USA
					}
				}
				MAN = {
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 5
						producer = FRA
					}
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 5
						producer = CHI
					}
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 15
						producer = MAN
					}
				}	
				PHI = {
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 1
						producer = USA
					}
				}
				SPR = {
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 26
						producer = FRA
					}
				}																	
				SWE = {
					add_equipment_to_stockpile = {
						type = gw_tank_equipment
						amount = 10
						producer = SWE
					}
				}								
			}
			if = {
				limit = {
					has_dlc = "No Step Back"					
				}
				AFG = {
					add_equipment_to_stockpile = { #gift for potential export contract
						type = light_tank_chassis_0
						amount = 1
						producer = ITA
					}
					add_equipment_to_stockpile = { #captured by the USSR and gifted to Afghanistan in 1921 (4 according to one source and 8 according to another)
						type = light_tank_chassis_0
						amount = 8
						producer = POL
					}
					add_equipment_to_stockpile = { #crappy Disston tank + 3 for parts
						type = light_tank_chassis_0
						amount = 9
						producer = USA
					}
					add_equipment_to_stockpile = { #just a guess to reach 24 (but with other estimation now we have those), 5 were sold to Afghanistan in 1937
						type = light_tank_chassis_0
						amount = 5
						producer = FRA
					}
					## some Lancia armored cars from Italy
				}				
				ALB = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 2
						producer = ITA
					}
				}				
				AUS = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_1
						amount = 35
						producer = ITA
					}
				}
				BUL = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_1
						amount = 14
						producer = ITA
					}
				}				
				EST = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 12
						producer = FRA
					}
				}
				HUN = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 5
						producer = ITA
					}
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 10
						producer = SWE
					}
					add_equipment_to_stockpile = {
						type = light_tank_chassis_1
						amount = 30
						producer = ITA
					}
					add_equipment_to_stockpile = {
						type = light_tank_chassis_1
						amount = 20
						producer = SWE
					}
				}	
				IRE = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_2
						amount = 1
						producer = SWE
					}
				}		
				KUW = {
					add_equipment_to_stockpile = { # bought 2 crappy Disston tank
						type = light_tank_chassis_0
						amount = 2
						producer = USA
					}
				}	
				MAN = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 5
						producer = FRA
					}
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 5
						producer = CHI
					}
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 15
						producer = MAN
					}
				}	
				PHI = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 1
						producer = USA
					}
				}
				SPR = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 26
						producer = FRA
					}
				}															
				SWE = {
					add_equipment_to_stockpile = {
						type = light_tank_chassis_0
						amount = 10
						producer = SWE
					}
				}							

			}			

			if = {
				limit = {
					has_game_rule = {
						rule = allow_r56_techs
						option = no
					}
				}
				set_global_flag = disable_r56_techs
			}

			BEL = {
				if = {
					limit = {
						has_game_rule = {
							rule = BEL_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						15 = { set_country_flag = BEL_AI_RANDOM_DEMOCRATIC_HISTORICAL }
						10 = { set_country_flag = BEL_AI_RANDOM_DEMOCRATIC_ALTERNATE }
						10 = { set_country_flag = BEL_AI_RANDOM_DEMOCRATIC_BEL_ALLY_BRITAIN }
						10 = { set_country_flag = BEL_AI_RANDOM_DEMOCRATIC_BEL_BENELUX }
						10 = { set_country_flag = BEL_AI_RANDOM_COMMUNISM }
						10 = { set_country_flag = BEL_AI_RANDOM_COMMUNISM_BEL_INDEPENDENT }
						10 = { set_country_flag = AI_RANDOM_FASCISM_BEL_VERDINASO }
						10 = { set_country_flag = AI_RANDOM_BEL_FASCISM_REX }
					}
				}
			}
			AST = {
				if = {
					limit = {
						has_game_rule = {
							rule = AST_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						20 = { set_country_flag = AST_AI_RANDOM_COMMUNIST }
						25 = { set_country_flag = AST_AI_RANDOM_DEMOCRATIC_ALTERNATE }
						25 = { set_country_flag = AST_AI_RANDOM_DEMOCRATIC_HISTORICAL }
						10 = { set_country_flag = AST_AI_RANDOM_FASCIST }
						20 = { set_country_flag = AST_AI_RANDOM_FASCIST_AF }
					}
				}
			}
			CHI = {
				if = {
					limit = {
						has_game_rule = {
							rule = CHI_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						20 = { set_country_flag = CHI_AI_RANDOM_CHI_NEUTRALITY_HISTORICAL }
						20 = { set_country_flag = CHI_AI_RANDOM_CHI_NEUTRALITY_ALTERNATE }
						20 = { set_country_flag = CHI_AI_RANDOM_CHI_DEMOCRATIC }
						20 = { set_country_flag = CHI_AI_RANDOM_CHI_FASCIST_GERMAN }
						20 = { set_country_flag = CHI_AI_RANDOM_CHI_FASCIST_JAPAN }
					}
				}
			}

			CHL = {
				if = {
					limit = {
						has_game_rule = {
							rule = CHL_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						30 = { set_country_flag = CHL_AI_RANDOM_DEMOCRATIC_HISTORICAL }
						25 = { set_country_flag = CHL_AI_RANDOM_NEUTRALITY_LIBERAL_PARTY }
						23 = { set_country_flag = CHL_AI_RANDOM_FASCISM_PARTY }
						22 = { set_country_flag = CHL_AI_RANDOM_COMMUNIST_PARTY }
					}
				}
			}
			RAJ = {
				if = {
					limit = {
						has_game_rule = {
							rule = RAJ_ai_behavior
							option = RANDOM
						}
					}
					random_list = {
						50 = { set_country_flag = PROVINCIAL_ELECTIONS }	#Party Affiliation is already Random
						35 = { set_country_flag = LORD_LINLITHGOW }
						15 = { set_country_flag = FREE_INDIA }
					}
				}
			}
			#Bad guys handicap
			if = { #MOD. OPT
				limit = {
					difficulty > 1
				}
				if = {
					limit = {
						is_historical_focus_on = no
						GER = {
							is_ai = yes
						}
					}
					GER = { #lazy game design? yes it is.
						add_political_power = 75
						add_fuel = 35
						army_experience = 5
						navy_experience = 25
						air_experience = 25
						add_manpower = 750
						if = {
							limit = {
								NOT = {
									has_dlc = "No Step Back"
								}
							}
							add_equipment_to_stockpile = {
								type = infantry_equipment
								amount = 2500
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = support_equipment
								amount = 35
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = light_tank_chassis
								amount = 25
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = motorized_equipment
								amount = 35
								producer = GER
							}							
						}
						else = {
							add_equipment_to_stockpile = {
								type = infantry_equipment
								amount = 500
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = support_equipment
								amount = 35
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = light_tank_chassis
								amount = 25
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = motorized_equipment
								amount = 35
								producer = GER
							}
						}

					}
				}
				if = {
					limit = {
						is_historical_focus_on = yes
						GER = {
							is_ai = yes
						}
					}
					GER = { #lazy game design? yes it is.
						add_political_power = 25
						add_manpower = 1000
						add_fuel = 20
						if = {
							limit = {
								NOT = {
									has_dlc = "No Step Back"
								}
							}
							add_equipment_to_stockpile = {
								type = infantry_equipment
								amount = 125
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = support_equipment
								amount = 10
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = light_tank_chassis
								amount = 5
								producer = GER
							}						
						}
						else = {
							add_equipment_to_stockpile = {
								type = infantry_equipment
								amount = 125
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = support_equipment
								amount = 10
								producer = GER
							}
							add_equipment_to_stockpile = {
								type = light_tank_chassis
								amount = 5
								producer = GER
							}							
						}						

					}
				}
				if = {
					limit = {
						#is_historical_focus_on = no
						AND = {
							ITA = {
								is_ai = yes
							}
							ETH = {
								is_ai = yes
							}
						}
					}
					ITA = { #lazy game design? yes, it is.
						add_political_power = 25
						army_experience = 5
						navy_experience = 25
						add_manpower = 25000
						add_equipment_to_stockpile = {
							type = infantry_equipment
							amount = 300
							producer = ITA
						}
					}
				}
				if = {
					limit = {
						#is_historical_focus_on = no
						SOV = {
							is_ai = yes
						}
					}
					SOV = { #lazy game design? yes it is.
						navy_experience = 25
						add_political_power = 35
						add_equipment_to_stockpile = {
							type = infantry_equipment
							amount = 3500
							producer = SOV
						}
						add_equipment_to_stockpile = {
							type = support_equipment
							amount = 10
							producer = SOV
						}
					}
				}
				if = {
					limit = {
						#is_historical_focus_on = no
						JAP = {
							is_ai = yes
						}
					}
					JAP = {
						add_political_power = 10
						navy_experience = 5
						add_manpower = 2500
						add_fuel = 35
						add_equipment_to_stockpile = {
							type = infantry_equipment
							amount = 85
							producer = JAP
						}
					}
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = ideology_join_faction
						option = SAME_IDEOLOGY
					}
				}
				every_country = {
					add_ideas = generic_can_only_join_factions_same_ideology
				}
			}
#			else_if = {
#				limit = {
#					has_game_rule = {
#						rule = ideology_join_faction
#						option = SAME_IDEOLOGY_EXCEPT_NON_ALIGNED
#					}
#				}
#				every_country = {
#					if = {
#						limit = {
#							NOT = {
#								has_government = neutrality
#							}
#						}
#						add_ideas = generic_can_only_join_factions_same_ideology
#					}
#				}
#			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ideology_join_faction
						option = EVENTS_ONLY
					}
				}
				every_country = {
					set_rule = {
						can_join_factions = no
					}
				}
			}

			#Ukraine
			if = {
				limit = {
					NOT = {
						OR = {
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_FRAGMENTED
							}
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_DECENTRALIZED
							}
						}
					}
				}
				UKR = {
					remove_state_core = 93
					remove_state_core = 91
					remove_state_core = 89


					add_state_claim = 93
					add_state_claim = 91
					add_state_claim = 89
				}
			}

			WHY = {
				set_variable = { global.r56_var_multiplayer = 0 }
			}

			AUS = {
				set_country_flag = GP_AUS_ENABLED
			}

			GXC = {
				set_country_flag = KMT_lzr_tt
			}

			every_country = {
				limit = {
					is_independent_warlords = yes
				}
				add_country_leader_trait = warlords
			}

			every_country = {
				limit = {
					is_ai = no
				}
				country_event = { id = r56.startup.event.01 }
			}
			
			# Game Rules - Annexations
			if = {
				limit = {
					has_game_rule = {
						rule = andorra_annexation_status
						option = ANNEX_INTO_FRANCE
					}
				}
				FRA = {
					annex_country = { target = ADR }
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = andorra_annexation_status
						option = ANNEX_INTO_SPAIN
					}
				}
				SPR = {
					annex_country = { target = ADR }
				}
			}
			
			# Game Rules - Fragmentation
			if = { #SOP
				limit = {
					has_game_rule = {
						rule = BEL_fragmentation_status
						option = BEL_FRAGMENTED
					}
				}
				BEL = {
					every_unit_leader = {
						limit = { has_trait = flemish }
						set_nationality = FLA
					}
					every_unit_leader = {
						limit = { has_trait = walloon }
						set_nationality = WLL
					}
					transfer_units_fraction = {
						target = FLA
						size = 0.5
					}
					transfer_units_fraction = {
						target = WLL
						size = 0.5
					}
				}
				FAK = {
					annex_country = {
					    target = BEL
					    transfer_troops = no
					}
					release = FLA
					release = WLL
				}
				6 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0"
						owner = FLA
					}
					create_unit = {
						division = "name = \"2. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0"
						owner = FLA
					}
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = arms_factory
						level = 1
						instant_build = yes
					}

				}
				34 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0"
						owner = WLL
					}
					create_unit = {
						division = "name = \"2. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0"
						owner = WLL
					}
				}
				if = {
					limit = {
						NOT = {
							has_game_rule = {
								rule = africa_colonization_status
								option = AFRICA_DECOLONIZED
							}
						}
					}
					FLA = {
						puppet = COG
					}
					COG = {
						set_politics = {
							ruling_party = neutrality
							last_election = "1936.1.1"
							election_frequency = 48
							elections_allowed = no
						}
						set_popularities = {
							democratic = 10
							fascism = 5
							communism = 2
							neutrality = 83
						}

						create_country_leader = {
							name = "Pierre Ryckmans"
							desc = "Pierre Ryckmans, Governor General of the Belgian Congo"
							picture = "gfx/leaders/COG/Pierre_Ryckmans.dds"
							expire = "1965.1.1"
							ideology = despotism
							traits = {
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = BEL_fragmentation_status
						option = BEL_FRAGMENTED_GREATER_FLANDERS
					}
				}
				BEL = {
					every_unit_leader = {
						limit = { has_trait = flemish }
						set_nationality = FLA
					}
					every_unit_leader = {
						limit = { has_trait = walloon }
						set_nationality = WLL
					}
				}
				FAK = {
					annex_country = {
					    target = BEL
					    transfer_troops = no
					}
					release = FLA
					release = WLL
				}
				FLA = {
					transfer_state = 29
					change_tag_from = BEL
				}
				29 = {
					add_core_of = FLA
				}
				set_province_name = { id = 575 name = "Duinkerke"}
				set_province_name = { id = 11483 name = "Rijsel"}
				set_province_name = { id = 11548 name = "Kales"}
				6 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5"
						owner = FLA
					}
					create_unit = {
						division = "name = \"2. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5"
						owner = FLA
					}
					create_unit = {
						division = "name = \"3. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5"
						owner = FLA
					}
					create_unit = {
						division = "name = \"4. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5"
						owner = FLA
					}
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = arms_factory
						level = 1
						instant_build = yes
					}
				}
				34 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5"
						owner = WLL
					}
					create_unit = {
						division = "name = \"2. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 0.5"
						owner = WLL
					}
				}
				set_global_flag = BEL_french_cities_renamed_flemish
				if = {
					limit = {
						NOT = {
							has_game_rule = {
								rule = africa_colonization_status
								option = AFRICA_DECOLONIZED
							}
						}
					}
					FLA = {
						puppet = COG
					}
					COG = {
						set_politics = {
							ruling_party = neutrality
							last_election = "1936.1.1"
							election_frequency = 48
							elections_allowed = no
						}
						set_popularities = {
							democratic = 10
							fascism = 5
							communism = 2
							neutrality = 83
						}

						create_country_leader = {
							name = "Pierre Ryckmans"
							desc = "Pierre Ryckmans, Governor General of the Belgian Congo"
							picture = "gfx/leaders/COG/Pierre_Ryckmans.dds"
							expire = "1965.1.1"
							ideology = despotism
							traits = {
							}
						}
					}
				}
			}

# Germany status
			if = { #MOD. Small OP. Due to the number of possible states, a default check seemed like a good idea.
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = DEFAULT
					}
				}
				# This is purposefully empty.
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_DECENTRALIZED
					}
				}
				GER = {
					release_puppet = BAY
				}
				52 = { add_core_of = GER }
				53 = { add_core_of = GER }
				54 = { add_core_of = GER }
				BAY = {
					hidden_effect = {
						load_oob = "BAY_1936"
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_FRAGMENTED
					}
				}
				GER = {
					release = BAY
				}
				52 = { add_core_of = GER }
				53 = { add_core_of = GER }
				54 = { add_core_of = GER }
				BAY = {
					hidden_effect = {
						load_oob = "BAY_1936"
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_EAST_VS_WEST
					}
				}
				set_global_flag = game_rule_flag_germany_fragmented
				WGR = {
					add_state_core = 42
					add_state_core = 50
					add_state_core = 51
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					add_state_core = 55
					add_state_core = 56
					add_state_core = 57
					add_state_core = 58
					add_state_core = 59
					add_state_core = 848
					add_state_core = 849
					add_state_core = 850
					change_tag_from = GER


				}
				DDR = {
					add_state_core = 5
					add_state_core = 60
					add_state_core = 61
					add_state_core = 62
					add_state_core = 63
					add_state_core = 64
					add_state_core = 65
					add_state_core = 66
					add_state_core = 67
					add_state_core = 68
					add_state_core = 763
				}
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}
				}
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}

					release = WGR
					release = DDR
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS
					##give them cores over the other side.
					DDR = {
						add_state_core = 42
						add_state_core = 50
						add_state_core = 51
						add_state_core = 52
						add_state_core = 53
						add_state_core = 54
						add_state_core = 55
						add_state_core = 56
						add_state_core = 57
						add_state_core = 58
						add_state_core = 59
						add_state_core = 848
						add_state_core = 849
						add_state_core = 850
						load_oob = "DDR_1936"
					}
					WGR = {
						add_state_core = 5
						add_state_core = 60
						add_state_core = 61
						add_state_core = 62
						add_state_core = 63
						add_state_core = 64
						add_state_core = 65
						add_state_core = 66
						add_state_core = 67
						add_state_core = 68
						add_state_core = 763
						load_oob = "WGR_1936"
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_EAST_VS_WEST_COM
					}
				}
				set_global_flag = game_rule_flag_germany_fragmented
				WGR = {
					add_state_core = 42
					add_state_core = 50
					add_state_core = 51
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					add_state_core = 55
					add_state_core = 56
					add_state_core = 57
					add_state_core = 58
					add_state_core = 59
					add_state_core = 848
					add_state_core = 849
					add_state_core = 850
					change_tag_from = WGR
				}
				DDR = {
					add_state_core = 5
					add_state_core = 60
					add_state_core = 61
					add_state_core = 62
					add_state_core = 63
					add_state_core = 64
					add_state_core = 65
					add_state_core = 66
					add_state_core = 67
					add_state_core = 68
					add_state_core = 763
				}
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}
				}
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}

					release = WGR
					WGR = {
						load_oob = "WGR_1936"
					}
					release = DDR
					DDR = {
						load_oob = "DDR_1936"
					}
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS
					##give them cores over the other side.
					DDR = {
						add_state_core = 42
						add_state_core = 50
						add_state_core = 51
						add_state_core = 52
						add_state_core = 53
						add_state_core = 54
						add_state_core = 55
						add_state_core = 56
						add_state_core = 57
						add_state_core = 58
						add_state_core = 59
						add_state_core = 848
						add_state_core = 849
						add_state_core = 850
						change_tag_from = GER
					}
					WGR = {
						add_state_core = 5
						add_state_core = 60
						add_state_core = 61
						add_state_core = 62
						add_state_core = 63
						add_state_core = 64
						add_state_core = 65
						add_state_core = 66
						add_state_core = 67
						add_state_core = 68
						add_state_core = 763
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_EAST_VS_WEST_VS_BAVARIA
					}
				}
				set_global_flag = game_rule_flag_germany_fragmented
				change_tag_from = GER
				WGR = {
					add_state_core = 42
					add_state_core = 50
					add_state_core = 51
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					add_state_core = 55
					add_state_core = 56
					add_state_core = 57
					add_state_core = 58
					add_state_core = 59
					add_state_core = 848
					add_state_core = 849
					add_state_core = 850

				}
				DDR = {
					add_state_core = 5
					add_state_core = 60
					add_state_core = 61
					add_state_core = 62
					add_state_core = 63
					add_state_core = 64
					add_state_core = 65
					add_state_core = 66
					add_state_core = 67
					add_state_core = 68
					add_state_core = 763
				}
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}
				}
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}
					release = BAY
					BAY = {
						change_tag_from = GER

					}
					release = WGR
					WGR = {
						load_oob = "WGR_1936"
					}
					release = DDR
					DDR = {
						load_oob = "DDR_1936"
					}
					BAY = {
						load_oob = "BAY_1936"
					}
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS
					##give them cores over the other side.
					DDR = {
						add_state_core = 42
						add_state_core = 50
						add_state_core = 51
						add_state_core = 52
						add_state_core = 53
						add_state_core = 54
						add_state_core = 55
						add_state_core = 56
						add_state_core = 57
						add_state_core = 58
						add_state_core = 59
						add_state_core = 848
						add_state_core = 849
						add_state_core = 850
					}
					WGR = {
						add_state_core = 5
						add_state_core = 52
						add_state_core = 53
						add_state_core = 54
						add_state_core = 60
						add_state_core = 61
						add_state_core = 62
						add_state_core = 63
						add_state_core = 64
						add_state_core = 65
						add_state_core = 66
						add_state_core = 67
						add_state_core = 68
						add_state_core = 763
					}
					if = {
						limit = {
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_COMMONWEALTH
							}
						}
						LIT = { transfer_state = 188 }
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ger_fragmentation_status
						option = GER_GERMAN_KINGDOMS
					}
				}
				set_global_flag = game_rule_flag_germany_fragmented
				BAD = {
					add_state_core = 850
					transfer_state = 850

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					850 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = BAD
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = BAD
						}
					}
				}
				WUR = {
					add_state_core = 50
					transfer_state = 50

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					50 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = WUR
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = WUR
						}
					}
				}
				SAX = {
					add_state_core = 65
					transfer_state = 65

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					65 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = SAX
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = SAX
						}
					}

				}
				MEK = {
					add_state_core = 61
					transfer_state = 61

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					61 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = MEK
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = MEK
						}
					}

				}
				SHL = {
					add_state_core = 58
					transfer_state = 58

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					58 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = SHL
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = SHL
						}
					}
				}
				BAY = {
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					#load_oob = "BAY_1936"

					transfer_state = 52
					transfer_state = 53
					transfer_state = 54
				}
				HAN = {
					add_state_core = 59
					add_state_core = 56
					add_state_core = 57

					transfer_state = 59
					transfer_state = 56
					transfer_state = 57

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}


					56 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = HAN
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = HAN
						}
						create_unit = {
							division = "name = \"3. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = HAN
						}
						create_unit = {
							division = "name = \"4. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = HAN
						}
					}

				}
				PRE = {

					add_state_core = 42
					add_state_core = 51
					add_state_core = 55
					add_state_core = 60
					add_state_core = 64
					add_state_core = 62
					add_state_core = 68
					add_state_core = 63
					add_state_core = 66
					add_state_core = 67
					add_state_core = 5
					add_state_core = 763
					add_state_core = 848
					add_state_core = 849

					transfer_state = 42
					transfer_state = 51
					transfer_state = 55
					transfer_state = 60
					transfer_state = 64
					transfer_state = 62
					transfer_state = 68
					transfer_state = 63
					transfer_state = 66
					transfer_state = 67
					transfer_state = 5
					transfer_state = 763
					transfer_state = 848
					transfer_state = 849

					change_tag_from = GER
				}
				GER = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 1
								has_id = 2
								has_id = 3
								has_id = 5
								has_id = 6
								#Kleist, Hesse
								has_id = 8
								has_id = 9
								has_id = 10
								has_id = 15
								has_id = 16
								has_id = 17
								has_id = 18
								has_id = 19
								has_id = 20
								has_id = 21
								#Georg von Küchler, Hesse
								has_id = 22
								has_id = 25
								has_id = 33
								has_id = 35
								has_id = 26
								has_id = 28
								has_id = 29
								has_id = 31
							}
						}
						set_nationality = PRE
					}
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 34
							}
						}
						set_nationality = HAN
					}
					every_unit_leader = {
						limit = {
							OR = {

								has_id = 27
							}
						}
						set_nationality = SHL
					}
					every_unit_leader = {
						limit = {
							OR = {
								#Rommel
								has_id = 4
								has_id = 7
								has_id = 11
							}
						}
						set_nationality = WUR
					}
					every_unit_leader = {
						limit = {
							OR = {

								has_id = 13
								has_id = 23
								has_id = 24
								has_id = 32
								has_id = 30
							}
						}
						set_nationality = BAY
					}
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 14
							}
						}
						set_nationality = SAX
					}
				}
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}
				}
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}
					BAY = {
						load_oob = "BAY_1936"
					}
					PRE = {
						load_oob = "PRE_1936"
					}
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS
					##give them cores over the other side.
					if = {
						limit = {
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_COMMONWEALTH
							}
						}
						LIT = { transfer_state = 188 }
					}
				}
			}
			else = { #GER_GERMAN_KINGDOMS2
				set_global_flag = game_rule_flag_germany_fragmented
				BAD = {
					add_state_core = 850
					transfer_state = 850

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					850 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = BAD
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = BAD
						}
					}
				}
				WUR = {
					add_state_core = 50
					transfer_state = 50
					add_state_core = 850
					transfer_state = 850

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					50 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = WUR
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = WUR
						}
					}
				}
				SAX = {
					add_state_core = 65
					transfer_state = 65

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					65 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = SAX
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = SAX
						}
					}

				}
				MEK = {
					add_state_core = 61
					transfer_state = 61

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					61 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = MEK
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = MEK
						}
					}

				}
				SHL = {
					add_state_core = 58
					transfer_state = 58

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					58 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = SHL
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = SHL
						}
					}
				}
				BAY = {
					add_state_core = 52
					add_state_core = 53
					add_state_core = 54
					transfer_state = 52
					transfer_state = 53
					transfer_state = 54

				}
				HAN = {
					add_state_core = 59
					add_state_core = 56
					add_state_core = 57
					transfer_state = 59
					transfer_state = 56
					transfer_state = 57

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					56 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = HAN
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = HAN
						}
						create_unit = {
							division = "name = \"3. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = HAN
						}
						create_unit = {
							division = "name = \"4. Division\" division_template = \"Infanterie-Division\" start_experience_factor = 1.0"
							owner = HAN
						}
					}

				}
				PRE = {
					add_state_core = 42
					add_state_core = 51
					add_state_core = 55
					add_state_core = 60
					add_state_core = 64
					add_state_core = 62
					add_state_core = 68
					add_state_core = 63
					add_state_core = 66
					add_state_core = 67
					add_state_core = 5
					add_state_core = 763
					add_state_core = 848
					add_state_core = 849
					transfer_state = 42
					transfer_state = 51
					transfer_state = 55
					transfer_state = 60
					transfer_state = 64
					transfer_state = 62
					transfer_state = 68
					transfer_state = 63
					transfer_state = 66
					transfer_state = 67
					transfer_state = 5
					transfer_state = 763
					transfer_state = 848
					transfer_state = 849

					division_template = {
						name = "Infanterie-Division"

						division_names_group = GER_Inf_01

						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
							infantry = { x = 2 y = 2 }
						}

						support = {
							engineer = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}
					division_template = {
						name = "Panzer-Division"

						division_names_group = GER_Arm_01

						regiments = {
							light_armor = { x = 0 y = 0 }
							light_armor = { x = 0 y = 1 }
							light_armor = { x = 1 y = 0 }
							light_armor = { x = 1 y = 1 }
							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Infanterie-Division (mot.)" 			# Used to be SS division -> New system for SS. Also messed up the civil war by refusing to move to the fascists, and immersion-breaking to have them around as royalists

						division_names_group = GER_MOT_02

						regiments = {
							motorized = { x = 0 y = 0 }
							motorized = { x = 0 y = 1 }
							motorized = { x = 0 y = 2 }

							motorized = { x = 1 y = 0 }
							motorized = { x = 1 y = 1 }
							motorized = { x = 1 y = 2 }

							motorized = { x = 2 y = 0 }
							motorized = { x = 2 y = 1 }
							motorized = { x = 2 y = 2 }
						}
						support = {
							recon = { x = 0 y = 0 }
							 engineer = { x = 0 y = 1 }
							artillery = { x = 0 y = 2 }
						}
					}
					division_template = {
						name = "Gebirgs-Brigade"		# Gebirgsbrigade
						#Note: precursor to Gebirgs-Divisions
						division_names_group = GER_Mnt_01

						regiments = {
							mountaineers = { x = 0 y = 0 }
							mountaineers = { x = 0 y = 1 }
							mountaineers = { x = 0 y = 2 }
							mountaineers = { x = 1 y = 0 }
							mountaineers = { x = 1 y = 1 }
							mountaineers = { x = 1 y = 2 }
						}
					}
					division_template = {
						name = "Kavallerie-Brigade"

						division_names_group = GER_Cav_01

						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
						support = {
							recon = { x = 0 y = 0 }
							artillery = { x = 0 y = 1 }
						}
					}

					create_faction = "Potsdam Pact"
					change_tag_from = GER
				}
				GER = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 1
								has_id = 2
								has_id = 3
								has_id = 5
								has_id = 6
								#Kleist, Hesse
								has_id = 8
								has_id = 9
								has_id = 10
								has_id = 15
								has_id = 16
								has_id = 17
								has_id = 18
								has_id = 19
								has_id = 20
								has_id = 21
								#Georg von Küchler, Hesse
								has_id = 22
								has_id = 25
								has_id = 33
								has_id = 35
								has_id = 26
								has_id = 28
								has_id = 29
								has_id = 31
							}
						}
						set_nationality = PRE
					}
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 34
							}
						}
						set_nationality = HAN
					}
					every_unit_leader = {
						limit = {
							OR = {

								has_id = 27
							}
						}
						set_nationality = SHL
					}
					every_unit_leader = {
						limit = {
							OR = {
								#Rommel
								has_id = 4
								has_id = 7
								has_id = 11
							}
						}
						set_nationality = WUR
					}
					every_unit_leader = {
						limit = {
							OR = {

								has_id = 13
								has_id = 23
								has_id = 24
								has_id = 32
								has_id = 30
							}
						}
						set_nationality = BAY
					}
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 14
							}
						}
						set_nationality = SAX
					}
				}
				PRE = {
					add_to_faction = BAY
					add_to_faction = BAD
					add_to_faction = MEK
					add_to_faction = SAX
					add_to_faction = HAN
					add_to_faction = SHL
					add_to_faction = WUR
				}
				POL = {
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}
				}
				FAK = {
					annex_country = {
					    target = GER
					    transfer_troops = no
					}
					BAY = {
						load_oob = "BAY_1936"
					}
					PRE = {
						load_oob = "PRE_1936"
					}
					#should do nothing in 36, fix 39.
					release = CZE
					release = AUS
					##give them cores over the other side.
					if = {
						limit = {
							has_game_rule = {
								rule = pol_fragmentation_status
								option = POL_COMMONWEALTH
							}
						}
						LIT = { transfer_state = 188 }
					}
				}
			}

#France status
			if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = fra_fragmentation_status
						option = FRA_DECENTRALIZED
					}
				}
				FRA = {
					release_puppet = BRI
					release_puppet = COR
					release_puppet = OCC
				}
				1 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0"
						owner = COR
					}
				}
				OCC = {
					load_oob = "OCC_1936"
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = fra_fragmentation_status
						option = FRA_FRAGMENTED
					}
				}
				FRA = {
					release = BRI
					release = COR
					release = OCC
					transfer_units_fraction = {
						target = OCC
						size = 0.4
					}
					transfer_units_fraction = {
						target = BRI
						size = 0.1
					}
					transfer_units_fraction = {
						target = COR
						size = 0.001
					}
				}
				OCC = {
					load_oob = "OCC_1936"
				}
				1 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0"
						owner = COR
					}
				}
				1 = { add_core_of = FRA }
				14 = { add_core_of = FRA }
				19 = { add_core_of = FRA }
				20 = { add_core_of = FRA }
				21 = { add_core_of = FRA }
				22 = { add_core_of = FRA }
				25 = { add_core_of = FRA }
				26 = { add_core_of = FRA }
				31 = { add_core_of = FRA }
				32 = { add_core_of = FRA }
				735 = { add_core_of = FRA }
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = fra_fragmentation_status
						option = FRA_DECENTRALIZED
					}
				}
				FRA = {
					release_puppet = BRI
					release_puppet = COR
					release_puppet = OCC
				}
				1 = {
					create_unit = {
						division = "name = \"1. Division\" division_template = \"Division d'Infanterie\" start_experience_factor = 1.0"
						owner = COR
					}
				}
				OCC = {
					load_oob = "OCC_1936"
				}
			}

# Italy status
			if = { #MOD. Small OP. Due to the number of possible states, a default check seemed like a good idea.
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = DEFAULT
					}
				}
				# This is purposefully empty.
			}
			else_if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_FRAGMENTED
					}
				}
				ITA = {
					release = SAD
					release = SIC
					release = NAP
					release = VNZ
					transfer_units_fraction = {
						target = NAP
						size = 0.25
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.15
					}
					transfer_units_fraction = {
						target = SIC
						size = 0.05
					}
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}
				}
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }
				ITA = { add_state_claim = 163 }
				160 = { add_core_of = ITA }
				736 = { add_core_of = VNZ }
				163 = { add_core_of = VNZ }
				837 = { add_core_of = VNZ }
				VNZ = {
					transfer_state = 736
					transfer_state = 837
					transfer_state = 163
					transfer_state = 164
					add_state_claim = 103
					add_state_claim = 182
				}
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}

						}
						set_nationality = VNZ
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe

							}

						}
						set_nationality = NAP
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_FRAGMENTED_SERENISSIMA
					}
				}
				ITA = {
					release = SAD
					release = SIC
					release = NAP
					release = VNZ
					transfer_units_fraction = {
						target = NAP
						size = 0.2
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.2
					}
					transfer_units_fraction = {
						target = SIC
						size = 0.05
					}
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}
				}
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }
				160 = { add_core_of = ITA }
				736 = { add_core_of = VNZ }
				163 = { add_core_of = VNZ }
				837 = { add_core_of = VNZ }
				ITA = { add_state_claim = 163 }
				GRE = {
					delete_unit = { state = 182 }
				}
				VNZ = {
					transfer_state = 736
					transfer_state = 163
					transfer_state = 837
					transfer_state = 164
					transfer_state = 103
					transfer_state = 182
					change_tag_from = ITA
				}
				182 = {
					add_compliance = 70
				}

				164 = {
					add_compliance = 70
				}
				103 = {
					add_compliance = 60
				}
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}
						}
						set_nationality = VNZ
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe

							}
						}
						set_nationality = NAP
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_FRAGMENTED_NEAPOLITAN_SICILY
					}
				}
				ITA = {
					release = SAD
					release = NAP
					transfer_units_fraction = {
						target = NAP
						size = 0.3
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.15
					}
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}
				}
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }
				ITA = { add_state_claim = 163 }
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}
						}
						set_nationality = VNZ
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe

							}
						}
						set_nationality = NAP
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_FRAGMENTED_SERENISSIMA_TWO_SICILES
					}
				}
				ITA = {
					release = SAD
					release = NAP
					release = VNZ
					transfer_units_fraction = {
						target = NAP
						size = 0.25
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.2
					}
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}
				}
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }
				160 = { add_core_of = ITA }
				736 = { add_core_of = VNZ }
				163 = { add_core_of = VNZ }
				837 = { add_core_of = VNZ }
				ITA = { add_state_claim = 163 }
				GRE = {
					delete_unit = { state = 182 }
				}
				VNZ = {
					transfer_state = 736
					transfer_state = 837
					transfer_state = 163
					transfer_state = 164
					transfer_state = 103
					transfer_state = 182
					change_tag_from = ITA
				}
				182 = {
					add_compliance = 70
				}

				164 = {
					add_compliance = 70
				}
				103 = {
					add_compliance = 60
				}
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}
						}
						set_nationality = VNZ
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe

							}
						}
						set_nationality = NAP
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = ita_fragmentation_status
						option = ITA_DECENTRALIZED
					}
				}
				ITA = {
					release_puppet = SAD
					release_puppet = SIC
					release_puppet = NAP
					release_puppet = VNZ
					transfer_units_fraction = {
						target = NAP
						size = 0.25
					}
					transfer_units_fraction = {
						target = VNZ
						size = 0.1
					}
					transfer_units_fraction = {
						target = SIC
						size = 0.05
					}
					transfer_units_fraction = {
						target = SAD
						size = 0.005
					}
				}
				156 = { add_core_of = ITA }
				117 = { add_core_of = ITA }
				115 = { add_core_of = ITA }
				114 = { add_core_of = ITA }
				160 = { add_core_of = ITA }
				736 = { add_core_of = VNZ }
				163 = { add_core_of = VNZ }
				837 = { add_core_of = VNZ }
				ITA = { add_state_claim = 163 }
				VNZ = {
					transfer_state = 736
					transfer_state = 837
					transfer_state = 163
				}
				NAP = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				VNZ = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SIC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				SAD = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  690
								has_id =  691
								has_id =  692
								has_id =  693
								has_id =  694
								has_id =  695
								has_id =  696
								has_id =  697
								has_id =  6007
								has_id =  698
								has_id =  699
								has_id =  688
								has_id =  689
								has_id =  6050
								has_id =  686
								has_id =  685
								has_id =  684
								has_id =  683
								has_id =  682
								has_id =  681
								has_id =  680
								has_id =  687
							}

						}
						set_nationality = ITA
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  683 # Giuseppe Fioravanzo born in Venetia
								has_id =  684 #Alberto Da Zara
							}
						}
						set_nationality = VNZ
					}
				}
				ITA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  697 # Ubaldo Soddu
								has_id =  693 # Giovanni Messe

							}
						}
						set_nationality = NAP
					}
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = africa_colonization_status
						option = AFRICA_DECOLONIZED
					}
				}
				FRA = {
					release = MOR
					release = ALG
					release = TUN
					release = DJI
					release = MAD
					release = GAB
					release = RCG
					release = CMR
					release = CAR
					release = CHA
					release = DAH
					release = TOG
					release = IVO
					release = VOL
					release = MLI
					release = GNA
					release = SEN
					release = NGR
					release = MRT
				}
				ITA = {
					release = LBA
					release = ERI
					release = SOM
				}
				SOM = {
					transfer_state = 269
				}
				ENG = {
					release = EGY
					release = SUD
					release = UGA
					release = TZN
					release = ZAM
					release = MLW
					release = KEN
					release = ZIM
					release = BOT
					release = NGA
					release = GHA
					release = SIE
					release = GAM
				}
				BEL = {
					end_puppet = COG
				}
				COG = {
					release = RWA
					release = BRD
					retire_country_leader = yes
					drop_cosmetic_tag = yes
				}
				SAF = {
					release = NMB
				}
				POR = {
					release = MZB
					release = ANG
					release = GNB
				}
				SPR = {
					release = WES
					release = EQG
				}
				ITA = {
					white_peace = {
						tag = ETH
					}
				}
				MOR = {
					transfer_state = 290
					transfer_state = 783
				}
				ENG = {
					set_autonomy = { target = SAF autonomy_state = autonomy_free }
				}
				ZIM = {
					drop_cosmetic_tag = yes
				}
			}

			if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = cze_fragmentation_status
						option = CZE_FRAGMENTED
					}
				}
				CZE = {
					release = SLO
					release = RUT
					set_cosmetic_tag = CZE_ONLY
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = cze_fragmentation_status
						option = CZE_DECENTRALIZED
					}
				}
				CZE = {
					release_puppet = SLO
					release_puppet = RUT
				}
			}

			if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = den_fragmentation_status
						option = DEN_FRAGMENTED
					}
				}
				DEN = {
					release = GRL
					set_autonomy = { target = GRL autonomy_state = autonomy_free }
					release = ICE
					set_autonomy = { target = ICE autonomy_state = autonomy_free }
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = den_fragmentation_status
						option = DEN_DECENTRALIZED
					}
				}
				DEN = {
					release_puppet = GRL
				}
				GRL = {
					set_cosmetic_tag = GRL2
				}
			}

			if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = spr_fragmentation_status
						option = SPR_FRAGMENTED
					}
				}
				SPR = {
					release = CAT
					release = NAV
					release = GLC
					release = CNR
				}
				NAV = {
					172 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0"
							owner = NAV
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0"
							owner = NAV
						}
					}
				}
				CAT = {
					165 = {
						create_unit = {
							division = "name = \"1. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0"
							owner = CAT
						}
						create_unit = {
							division = "name = \"2. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0"
							owner = CAT
						}
						create_unit = {
							division = "name = \"3. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0"
							owner = CAT
						}
					}
				}
				165 = {	add_core_of = SPR }
				171 = {	add_core_of = SPR }
				172 = {	add_core_of = SPR }
				GLC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118
							}

						}
						set_nationality = SPR
					}
				}
				NAV = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118
							}

						}
						set_nationality = SPR
					}
				}
				CAT = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118
							}

						}
						set_nationality = SPR
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = spr_fragmentation_status
						option = SPR_DECENTRALIZED
					}
				}
				SPR = {
					release_puppet = CAT
					release_puppet = GLC
					release_puppet = NAV
					release_puppet = CNR
				}
				165 = {	add_core_of = SPR }
				171 = {	add_core_of = SPR }
				172 = {	add_core_of = SPR }
				CAT = {
					load_oob = "CAT_ARAGON_1936"
				}
				NAV = {
					load_oob = "NAV_1936"
				#	random_owned_controlled_state = {
				#		prioritize = { 172 }
				#		limit = { ROOT = { has_full_control_of_state = PREV } }
				#		create_unit = {
				#			division = "name = \"1. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0"
				#			owner = NAV
				#		}
				#		create_unit = {
				#			division = "name = \"2. Division\" division_template = \"División de Infantería\" start_experience_factor = 1.0"
				#			owner = NAV
				#		}
				#	}
				}
				SPR = {
					transfer_units_fraction = {
						target = NAV
						size = 0.05
					}
					transfer_units_fraction = {
						target = CAT
						size = 0.05
					}
					transfer_units_fraction = {
						target = GLC
						size = 0.05
					}
				}
				GLC = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118
							}

						}
						set_nationality = SPR
					}
				}
				NAV = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118
							}

						}
						set_nationality = SPR
					}
				}
				CAT = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  1102
								has_id =  1103
								has_id =  1104
								has_id =  1105
								has_id =  1106
								has_id =  1107
								has_id =  1108
								has_id =  1109
								has_id =  1110
								has_id =  1111
								has_id =  1112
								has_id =  1113
								has_id =  1114
								has_id =  1115
								has_id =  1116
								has_id =  1117
								has_id =  1118
							}

						}
						set_nationality = SPR
					}
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = spr_fragmentation_status
						option = SPR_15TH_CENTURY_ARAGON
					}
				}
				set_global_flag = XVth_century_aragon_flag
				SPR = {
					release = CAT
					release = NAV
					release = GLC
					release = CNR
					transfer_units_fraction = {
						target = NAV
						size = 0.05
					}
					transfer_units_fraction = {
						target = CAT
						size = 0.15
					}
					transfer_units_fraction = {
						target = GLC
						size = 0.05
					}

				}
				115 = {	add_core_of = CAT }
				114 = {	add_core_of = CAT }
				117 = {	add_core_of = CAT }
				156 = {	add_core_of = CAT }
				166 = {	add_core_of = CAT }
				167 = {	add_core_of = CAT }
				177 = {	add_core_of = CAT }
				794 = {	add_core_of = CAT }
				CAT = {
					load_oob = "CAT_ARAGON_1936"
					if = {
						limit = { has_dlc = "Man the Guns" }
							load_oob = "CAT_ARAGON_1936_naval_mtg"
						else = {
							load_oob = "CAT_ARAGON_1936_naval_legacy"
						}
					}
					transfer_state = 114
					transfer_state = 115
					transfer_state = 117
					transfer_state = 156
					transfer_state = 166

					transfer_state = 167
					transfer_state = 177
					transfer_state = 794
					GLC = {
						every_unit_leader = {
							limit = {
								OR = {
									has_id =  1102
									has_id =  1103
									has_id =  1104
									has_id =  1105
									has_id =  1106
									has_id =  1107
									has_id =  1108
									has_id =  1109
									has_id =  1110
									has_id =  1111
									has_id =  1112
									has_id =  1113
									has_id =  1114
									has_id =  1115
									has_id =  1116
									has_id =  1117
									has_id =  1118
								}

							}
							set_nationality = SPR
						}
					}
					NAV = {
						every_unit_leader = {
							limit = {
								OR = {
									has_id =  1102
									has_id =  1103
									has_id =  1104
									has_id =  1105
									has_id =  1106
									has_id =  1107
									has_id =  1108
									has_id =  1109
									has_id =  1110
									has_id =  1111
									has_id =  1112
									has_id =  1113
									has_id =  1114
									has_id =  1115
									has_id =  1116
									has_id =  1117
									has_id =  1118
								}

							}
							set_nationality = SPR
						}
					}
					CAT = {
						every_unit_leader = {
							limit = {
								OR = {
									has_id =  1102
									has_id =  1103
									has_id =  1104
									has_id =  1105
									has_id =  1106
									has_id =  1107
									has_id =  1108
									has_id =  1109
									has_id =  1110
									has_id =  1111
									has_id =  1112
									has_id =  1113
									has_id =  1114
									has_id =  1115
									has_id =  1116
									has_id =  1117
									has_id =  1118
								}

							}
							set_nationality = SPR
						}
					}
					change_tag_from = SPR
				}
				NAV = {
					load_oob = "NAV_1936"
				}
			}

			if = { #MOD. Small OP.
				limit = { #r56_CAN_quebec_conscription_idea is not removed, but may be intentional.
					has_game_rule = {
						rule = can_fragmentation_status
						option = CAN_FRAGMENTED
					}
				}
				CAN = {
					release = QBC
					if = {
						limit = { has_dlc = "Together for Victory" }
						remove_ideas = CAN_conscription_crisis
					}

					transfer_units_fraction = {
						target = QBC
						size = 0.1
					}
				}
				466 = {
					remove_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					clr_state_flag = quebec_conscription_crisis_flag
				}
				468 = {
					remove_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					clr_state_flag = quebec_conscription_crisis_flag
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = can_fragmentation_status
						option = CAN_DECENTRALIZED
					}
				}
				CAN = {
					release_puppet = QBC
					if = {
						limit = { has_dlc = "Together for Victory" }
						remove_ideas = CAN_conscription_crisis
					}
					transfer_units_fraction = {
						target = QBC
						size = 0.1
					}
				}
				466 = {
					remove_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					clr_state_flag = quebec_conscription_crisis_flag
				}
				468 = {
					remove_province_modifier = {
						static_modifiers = { quebec_conscription_crisis }
						province = {
							all_provinces = yes
						}
					}
					clr_state_flag = quebec_conscription_crisis_flag
				}
			}

			if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = pol_fragmentation_status
						option = DEFAULT
					}
				}
				# This is purposefully empty.
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = pol_fragmentation_status
						option = POL_FRAGMENTED
					}
				}
				GER = {
					annex_country = {
					    target = DNZ
					    transfer_troops = yes
					}
				}

				85 = { add_core_of = GER } #//Wrong state, unless Kerguelen was really intended. Probably 85 (Danzig)
				POL = {
					release = UKR
					release = BLR
					transfer_units_fraction = {
						target = UKR
						size = 0.05
					}
					transfer_units_fraction = {
						target = BLR
						size = 0.05
					}
				}
				LIT = { transfer_state = 784 }
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = pol_fragmentation_status
						option = POL_DECENTRALIZED
					}
				}
				POL = {
					release_puppet = UKR
					release_puppet = BLR
					transfer_units_fraction = {
						target = UKR
						size = 0.05
					}
					transfer_units_fraction = {
						target = BLR
						size = 0.05
					}
				}
				LIT = { transfer_state = 784 }
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = pol_fragmentation_status
						option = POL_COMMONWEALTH
					}
				}
				LAT = {
					every_owned_state = {
						add_core_of = POL
					}
				}
				LIT = {
					every_unit_leader = {
						set_nationality = POL
					}
					every_owned_state = {
						add_core_of = POL
					}
				}
				POL = { #Compressed? #Volver
					annex_country = {
						target = LIT
						transfer_troops = yes
					}
					annex_country = {
						target = LAT
						transfer_troops = no
					}
					annex_country = {
					    target = DNZ
					    transfer_troops = no
					}
					set_global_flag = form_commonwealth_flag
					set_cosmetic_tag = PLC_UNIFIED
				}
				#Prussia
				#Prussia
				763 = { add_core_of = POL }
				POL = { transfer_state = 763 }
				5 = { add_core_of = POL }
				POL = { transfer_state = 5 }

				207 = { add_core_of = POL } #Belarus
				POL = { transfer_state = 207 }
				206 = { add_core_of = POL }
				POL = { transfer_state = 206 }
				204 = { add_core_of = POL }
				POL = { transfer_state = 204 }
				241 = { add_core_of = POL }
				POL = { transfer_state = 241 }
				194 = { add_core_of = POL }
				POL = { transfer_state = 194 }

				193 = { add_core_of = POL } #"Polish" Ukraine
				POL = { transfer_state = 193 }
				203 = { add_core_of = POL }
				POL = { transfer_state = 203 }
				202 = { add_core_of = POL }
				POL = { transfer_state = 202 }
				201 = { add_core_of = POL }
				POL = { transfer_state = 201 }
				199 = { add_core_of = POL }
				POL = { transfer_state = 199 }
				198 = { add_core_of = POL }
				POL = { transfer_state = 198 }
				259 = { add_core_of = POL }
				POL = { transfer_state = 259 }

#				188 = { add_core_of = POL } #Memel. A remnant from the other start date.
#				POL = { transfer_state = 188 }
			}

			if = {
				limit = {
					has_game_rule = {
						rule = rom_fragmentation_status
						option = ROM_DECENTRALIZED
					}
				}
				ROM = {
					release_puppet = TRA
					release_puppet = MOL
					transfer_units_fraction = {
						target = TRA
						size = 0.25
					}
					transfer_units_fraction = {
						target = MOL
						size = 0.25
					}
				}
				766 = { add_core_of = ROM }
				78 = { add_core_of = ROM }
				80 = { add_core_of = ROM }
				84 = { add_core_of = ROM }
				82 = { add_core_of = ROM }
				83 = { add_core_of = ROM }
				76 = { add_core_of = ROM }
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = rom_fragmentation_status
						option = ROM_FRAGMENTED
					}
				}
				ROM = {
					release = TRA
					release = MOL
					transfer_units_fraction = {
						target = TRA
						size = 0.25
					}
					transfer_units_fraction = {
						target = MOL
						size = 0.25
					}
					set_cosmetic_tag = ROM_WALLACHIA
				}
				79 = { add_core_of = MOL }
				MOL = { transfer_state = 79 }
				80 = { add_core_of = MOL }
				MOL = { transfer_state = 80 }
				766 = { add_core_of = ROM }
				78 = { add_core_of = ROM }
				80 = { add_core_of = ROM }
				84 = { add_core_of = ROM }
				82 = { add_core_of = ROM }
				83 = { add_core_of = ROM }
				76 = { add_core_of = ROM }
			}

			if = {# MOD. Small OP.
				limit = {
					has_game_rule = {
						rule = usa_fragmentation_status
						option = USA_FRAGMENTED
					}
				}
				USA = {
					release = CSA
					transfer_units_fraction = {
						target = CSA
						size = 0.35
					}
					remove_ideas = rt56_far_left_suppression
				}

				USA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  7500
								has_id =  7501
								has_id =  7502
								has_id =  7503
								has_id =  7504
								has_id =  7505
								has_id =  601
							}
						}
						set_nationality = CSA
					}
				}
			}

			else_if = {
				limit = {
					has_game_rule = {
						rule = usa_fragmentation_status
						option = USA_FRAGMENTED_DIXIE
					}
				}
				USA = {
					release = CSA
					transfer_units_fraction = {
						target = CSA
						size = 0.35
					}
					remove_ideas = rt56_far_left_suppression
				}

				USA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  7500
								has_id =  7501
								has_id =  7502
								has_id =  7503
								has_id =  7504
								has_id =  7505
								has_id =  601
							}

						}
						set_nationality = CSA
					}
				}
				CSA = { change_tag_from = USA }
				#send Ike back to the US (not sure why I have to do this)
				CSA = {
					add_state_core = 816
					add_state_core = 361
					add_state_core = 374
					add_state_claim = 369
					add_state_claim = 373
					every_unit_leader = {
						limit = {
							has_id =  602
						}
						set_nationality = USA
					}
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = usa_fragmentation_status
						option = USA_FRAGMENTED_VICTORY
					}
				}
				USA = {
					release = CSA
					transfer_units_fraction = {
						target = CSA
						size = 0.36
					}
					remove_ideas = rt56_far_left_suppression
				}

				USA = {
					add_state_claim = 362
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  7500
								has_id =  7501
								has_id =  7502
								has_id =  7503
								has_id =  7504
								has_id =  7505
								has_id =  601
							}

						}
						set_nationality = CSA
					}
				}
				#send Ike back to the US (not sure why I have to do this)
				CSA = {
					add_popularity = {
						ideology = fascism
						popularity = 0.55
					}
					set_politics = {
						ruling_party = fascism
					}
					add_ai_strategy = {
						id = "GER"
						type = alliance
						value = 50
					}
					add_state_core = 816
					add_state_core = 361
					add_state_core = 374
					add_state_claim = 369
					add_state_claim = 373
					every_unit_leader = {
						limit = {
							has_id =  602
						}
						set_nationality = USA
					}
				}
			
				MEX = {
					transfer_units_fraction = {
						target = CSA
						size = 0.05
					}
					add_ai_strategy = {
						id = "CSA"
						type = antagonize
						value = 200
					}
					482 = {
					  transfer_state_to = CSA
					}
					483 = {
						transfer_state_to = CSA
					}
					484 = {
						transfer_state_to = CSA
					}
				}
			}

			else_if = {
				limit = {
					has_game_rule = {
						rule = usa_fragmentation_status
						option = USA_FRAGMENTED_DIXIE_VICTORY
					}
				}
				USA = {
					release = CSA
					transfer_units_fraction = {
						target = CSA
						size = 0.36
					}
					remove_ideas = rt56_far_left_suppression
				}

				USA = {
					add_ai_strategy = {
						id = "CSA"
						type = antagonize
						value = 125
					}
					add_state_claim = 362
					every_unit_leader = {
						limit = {
							OR = {
								has_id =  7500
								has_id =  7501
								has_id =  7502
								has_id =  7503
								has_id =  7504
								has_id =  7505
								has_id =  601
							}

						}
						set_nationality = CSA
					}
				}
				CSA = { change_tag_from = USA }
				#send Ike back to the US (not sure why I have to do this)
				CSA = {
					add_popularity = {
						ideology = fascism
						popularity = 0.55
					}
					set_politics = {
						ruling_party = fascism
					}
					add_state_core = 816
					add_state_core = 361
					add_state_core = 374
					add_state_claim = 369
					add_state_claim = 373
					every_unit_leader = {
						limit = {
							has_id =  602
						}
						set_nationality = USA
					}
				}
				MEX = {
					delete_unit = { state = 482  }
					delete_unit = { state = 483 }
					delete_unit = { state = 484 }
					add_ai_strategy = {
						id = "CSA"
						type = antagonize
						value = 200
					}
					482 = {
					  transfer_state_to = CSA
					}
					483 = {
						transfer_state_to = CSA
					}
					484 = {
						transfer_state_to = CSA
					}
				}
			}


			if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = smi_liberation_status
						option = SMI_LIBERATED
					}
				}
				NOR = {
					release = SMI
				}
				SMI = {
					transfer_state = 144
					transfer_state = 148
					transfer_state = 147
					transfer_state = 666
					transfer_state = 722
					set_capital = { state = 144 }
				}
				144 = {	add_core_of = NOR }
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = smi_liberation_status
						option = SMI_LIBERATED_NOR_SWITCH
					}
				}
				NOR = {
					release = SMI
					transfer_units_fraction = {
						target = SMI
						size = 0.03
					}
				}
				SWE = {
					transfer_units_fraction = {
						target = SMI
						size = 0.03
					}
				}
				FIN = {
					transfer_units_fraction = {
						target = SMI
						size = 0.03
					}
				}
				SMI = {
					transfer_state = 144
					transfer_state = 148
					transfer_state = 147
					transfer_state = 666
					transfer_state = 722
					set_capital = { state = 144 }
					change_tag_from = NOR
				}
				144 = {	add_core_of = NOR }
			}

			if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = kur_liberation_status
						option = KUR_LIBERATED
					}
				}
				IRQ = {
					release = KUR
					676 = {	add_core_of = IRQ }
					transfer_units_fraction = {
						target = KUR
						size = 0.05
					}
				}
				TUR = {
					transfer_units_fraction = {
						target = KUR
						size = 0.05
					}
				}
				PER = {
					transfer_units_fraction = {
						target = KUR
						size = 0.05
					}
				}
				KUR = {
					transfer_state = 352
					transfer_state = 353
					transfer_state = 350
					transfer_state = 419
					transfer_state = 421
					transfer_state = 800
					set_capital = { state = 676 }
				}
				676 = {	add_core_of = IRQ }
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = kur_liberation_status
						option = KUR_LIBERATED_IRQ_SWITCH
					}
				}
				IRQ = {
					release = KUR
				}
				KUR = {
					transfer_state = 352
					transfer_state = 353
					transfer_state = 350
					transfer_state = 419
					transfer_state = 421
					transfer_state = 800
					set_capital = { state = 676 }
					change_tag_from = IRQ
				}
				676 = {	add_core_of = IRQ }
			}

			if = {
				limit = {
					has_game_rule = {
						rule = central_american_unification_status
						option = HON_CENTRAL_AMERICA_UNIFIED
					}
				}
				HON = {
					every_other_country = {
						limit = { OR = { tag = GUA tag = NIC tag = COS tag = ELS tag = BLZ } } #Added belize
						HON = {
							annex_country = {
								target = PREV
								transfer_troops = yes
							}
						}
						every_unit_leader = { set_nationality = HON }
					}
					304 = { add_core_of = HON }
					364 = { add_core_of = HON }
					311 = { add_core_of = HON }
					313 = { add_core_of = HON }
					314 = { add_core_of = HON }
					316 = { add_core_of = HON }
					317 = { add_core_of = HON }
					56 = { add_core_of = HON }
					set_cosmetic_tag = USC_UNIFIED
					set_global_flag = form_united_central_america_flag
				}
			}

#Hispanoamerica status.
			if = {
				limit = {
					has_game_rule = {
						rule = hispanoamerica_unification_status
						option = CHL_HISPANOAMERICA_UNIFIED
					}
				}
				CHL = {
					set_country_flag = r56_hide_formables
					every_other_country = { #Compressed for readability
						limit = { OR = { tag = ARG tag = BOL tag = COL tag = ECU tag = PAR tag = PAN tag = PAR tag = PRU tag = URG tag = VEN tag = CRC } }
						CHL = {
							annex_country = {
								target = PREV
								transfer_troops = yes
							}
						}
						every_unit_leader = { set_nationality = CHL }
					}
					every_controlled_state = { add_core_of = CHL }
                    685 = { add_core_of = CHL } #Panamá Canal
                    695 = { add_core_of = CHL } #Curacao
                    299 = { add_claim_by = CHL } #Falkland
                    720 = { add_claim_by = CHL } #South Georgia
                    502 = { add_claim_by = CHL } #Rio Grande do Sul
                    503 = { add_claim_by = CHL } #Santa Catarina
                    687 = { add_claim_by = CHL } # British Guyana
                    691 = { add_claim_by = CHL } # Trinidad
					set_cosmetic_tag = HIS_UNIFIED
					set_global_flag = form_hispanomerica_flag
				}
			}

			else_if = {
				limit = {
					has_game_rule = {
						rule = hispanoamerica_unification_status
						option = CHL_HISPANOAMERICA_UNIFIED_BIGGER
					}
				}
				CHL = {
					set_country_flag = r56_hide_formables
					every_other_country = { #Compressed for readability
						limit = {
							OR = {
								tag = ARG tag = BOL tag = COL tag = ECU tag = PAR tag = PAN tag = PRU tag = URG tag = VEN #Sudamerica proper
								tag = COS tag = ELS tag = GUA tag = HON tag = NIC tag = MEX tag = CUB tag = DOM  #Centroameria, Mexico and the Caribbean
								tag = BLZ tag = CRC tag = PUE #Belize, Curacao and Puerto Rico; if applicable.
							}
						}
						CHL = {
							annex_country = {
								target = PREV
								transfer_troops = yes
							}
						}
						every_unit_leader = { set_nationality = CHL }
					}
					transfer_state = 311 #Belize
					every_controlled_state = { add_core_of = CHL }
                    685 = { add_core_of = CHL } #Panamá Canal
                    686 = { add_core_of = CHL } #Puerto Rico
                    695 = { add_core_of = CHL remove_claim_by = CHL } #Curacao

                    299 = { add_claim_by = CHL } #Falkland
                    720 = { add_claim_by = CHL } #South Georgia
                    502 = { add_claim_by = CHL } #Rio Grande do Sul
                    503 = { add_claim_by = CHL } #Santa Catarina
                    687 = { add_claim_by = CHL } # British Guyana
					
					366 = { add_claim_by = CHL }#Mexican old clay
					375 = { add_claim_by = CHL }
					376 = { add_claim_by = CHL }
					377 = { add_claim_by = CHL }
					378 = { add_claim_by = CHL }
					379 = { add_claim_by = CHL }
					380 = { add_claim_by = CHL }
					382 = { add_claim_by = CHL }
					# Caribbean
					318 = { add_claim_by = CHL } # Haiti
					689 = { add_claim_by = CHL } # Jamaica
					691 = { add_claim_by = CHL } # Trinidad
					690 = { add_claim_by = CHL } # Bahamas
					693 = { add_claim_by = CHL }
					308 = { add_claim_by = CHL } # Antillas menores
					692 = { add_claim_by = CHL }
					694 = { add_claim_by = CHL }

					set_cosmetic_tag = HIS_UNIFIED
					set_global_flag = form_hispanomerica_flag
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = STARTING_FACTIONS
						option = NO_FACTIONS
					}
				}
				SOV = {
					dismantle_faction = yes
				}
				ENG = {
					dismantle_faction = yes
				}
				GER = {
					dismantle_faction = yes
				}
			}
			if = {
				limit = {
					has_game_rule = {
						rule = allow_national_characters
						option = no
					}
				}
				set_global_flag = NATIONAL_CHARACTERS_BLOCKED
			}

			if = {
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = ONE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_1
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = TWO_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_2
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = extra_operatives
						option = THREE_EXTRA
					}
				}
				every_country = {
					add_ideas = idea_game_rule_extra_spy_3
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = compliance_rule
						option = COMPLIANCE_25_MORE
					}
				}
				every_country = {
					add_ideas = idea_game_rule_compliance_increase_25
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = compliance_rule
						option = COMPLIANCE_25_LESS
					}
				}
				every_country = {
					add_ideas = idea_game_rule_compliance_decrease_25
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = resistance_rule
						option = RESISTANCE_25_MORE
					}
				}
				every_country = {
					add_ideas = idea_game_rule_resistance_increase_25
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = resistance_rule
						option = RESISTANCE_25_LESS
					}
				}
				every_country = {
					add_ideas = idea_game_rule_resistance_decrease_25
				}
			}

			if = {
				limit = {
					has_game_rule = {
						rule = special_forces_limit
						option = SPECIAL_FORCES_CAP_100
					}
				}
				every_country = {
					add_ideas = idea_game_rule_special_forces_cap_100
				}
			}

			if = { #MOD. Small OP. Due to the number of possible states, a default check seemed like a good idea.
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = DEFAULT
					}
				}
				# This is purposefully empty.
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = NON_US_MAJORS
					}
				}
				ENG = {
					create_intelligence_agency = yes
				}
				FRA = {
					create_intelligence_agency = yes
				}
				GER = {
					create_intelligence_agency = yes
				}
				ITA = {
					create_intelligence_agency = yes
				}
				JAP = {
					create_intelligence_agency = yes
				}
				SOV = {
					create_intelligence_agency = yes
				}
				POL = {
					create_intelligence_agency = yes
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_MAJORS
					}
				}
				ENG = {
					create_intelligence_agency = yes
				}
				FRA = {
					create_intelligence_agency = yes
				}
				GER = {
					create_intelligence_agency = yes
				}
				ITA = {
					create_intelligence_agency = yes
				}
				JAP = {
					create_intelligence_agency = yes
				}
				SOV = {
					create_intelligence_agency = yes
				}
				USA = {
					create_intelligence_agency = yes
				}
				POL = {
					create_intelligence_agency = yes
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_MAJORS_AND_STRONG_MINORS
					}
				}
				every_country = {
					limit = { #Changed presentation to more easily spot missing nations. Functionally identical.
						OR = {
							tag = ENG tag = FRA tag = GER tag = ITA tag = JAP tag = SOV tag = USA
							tag = POL tag = CZE tag = LAT tag = EST tag = LIT tag = ROM tag = BUL
							tag = TUR tag = GRE tag = YUG tag = AUS tag = BEL tag = HOL tag = SPR
							tag = POR tag = DEN tag = SWE tag = NOR tag = FIN tag = SAF tag = BRA
							tag = MEX tag = CAN tag = AST tag = CHI tag = PRC
						}
					}
					create_intelligence_agency = yes
				}
			}
			else = {
				every_country = {
					create_intelligence_agency = yes
				}
			}

			if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = compliance_rule
						option = COMPLIANCE_25_MORE
					}
				}
				every_country = {
					add_ideas = idea_game_rule_compliance_increase_25
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = compliance_rule
						option = COMPLIANCE_25_LESS
					}
				}
				every_country = {
					add_ideas = idea_game_rule_compliance_decrease_25
				}
			}

			if = { #MOD. Small OP
				limit = {
					has_game_rule = {
						rule = resistance_rule
						option = RESISTANCE_25_MORE
					}
				}
				every_country = {
					add_ideas = idea_game_rule_resistance_increase_25
				}
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = resistance_rule
						option = RESISTANCE_25_LESS
					}
				}
				every_country = {
					add_ideas = idea_game_rule_resistance_decrease_25
				}
			}
		}
	}

###---> On State Control Changed <><> <><> <><>
#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {

			#instead of revolt use resistance against our enemies to ensure total liberation
		#	if = {
		#		limit = {
		#			ROOT = {
		#				has_war_with = FROM
		#			}
		#			FROM.FROM = {
		#				has_resistance = yes
		#				resistance > 60
		#				NOT = {
		#					OR = {
		#						is_core_of = FROM
		#						is_core_of = ROOT
		#					}
		#				}
		#			}
		#		}
		#	}

			if = { #MOD. City-fall events. Now checks for state ID first, then extra conditions. Order preserved.
				limit = {
					has_war_with = FROM
					FROM.FROM = {
						is_owned_by = FROM
						NOT = { has_state_flag = state_has_fallen }
					}
				}
				# London
				if = {
					limit = { FROM.FROM = { state = 126 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									tag = FRA
									original_tag = ENG
									tag = GER
									tag = ITA
									tag = JAP
									tag = SPR
									tag = USA
									tag = SOV
									tag = POL
									tag = BEL
								}
							}
						}
						news_event = { id = cityfall.69 }
					}
				}
				# Ottawa
				else_if = {
					limit = { FROM.FROM = { state = 276 } }
					if = { #NCW
						limit = {
							ROOT = { has_civil_war = no }
						}
						news_event = { id = cityfall.70 }
					}
				}
				# Berlin
				else_if = {
					limit = { FROM.FROM = { state = 64 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									tag = FRA
									tag = ENG
									tag = YUG
									tag = ITA
									tag = CZE
									tag = JAP
									tag = SPR
									tag = USA
									tag = SOV
									tag = POL
									tag = CHI
									tag = BHU
									tag = BEL
									original_tag = GER
								}
							}
						}
						news_event = { id = cityfall.71 }
					}
				}
				# Rio de Janeiro
				else_if = {
					limit = { FROM.FROM = { state = 500 } }
					if = { #NCW
						limit = {
							NOT = {
								ROOT = {
									has_civil_war = yes
									original_tag = BRA
								}
							}
						}
						news_event = { id = cityfall.72 }
					}
				}
				# Buenos Aires
				else_if = {
					limit = { FROM.FROM = { state = 278 } }
					if = { #NCW
						limit = {
							NOT = {
								ROOT = {
									has_civil_war = yes
									original_tag = ARG
								}
							}
						}
						news_event = { id = cityfall.73 }
					}
				}
				# Mexico
				else_if = {
					limit = { FROM.FROM = { state = 277 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = MEX }
							}
						}
						news_event = { id = cityfall.74 }
					}
				}
				# Delhi
				else_if = {
					limit = { FROM.FROM = { state = 439 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = RAJ }
							}
						}
						news_event = { id = cityfall.75 }
					}
				}
				# Panama Canal
				else_if = {
					limit = { FROM.FROM = { state = 685 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = USA }
							}
						}
						news_event = { id = cityfall.76 }
					}
				}
				# Istanbul
				else_if = {
					limit = { FROM.FROM = { state = 797 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = TUR }
							}
						}
						news_event = { id = cityfall.77 }
					}
				}
				# Tokyo
				else_if = {
					limit = { FROM.FROM = { state = 282 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									tag = CHI
									tag = USA
									tag = SOV
									original_tag = JAP
								}
							}
						}
						news_event = { id = cityfall.78 }
					}
				}
				# Moscow
				else_if = {
					limit = { FROM.FROM = { state = 219 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									tag = AST
									tag = USA
									tag = CAN
									tag = FRA
									tag = SAF
									tag = NZL
									tag = BEL
									tag = ENG
									tag = GER
									tag = FRA
									tag = YUG
									tag = SPR
									tag = JAP
									tag = ITA
									tag = CHI
									tag = BHU
									original_tag = SOV
								}
							}
						}
						news_event = { id = cityfall.79 }
					}
				}
				# Rome
				else_if = {
					limit = { FROM.FROM = { state = 2 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									OR = {
										tag = AST
										tag = USA
										tag = CAN
										tag = FRA
										tag = SAF
										tag = BEL
										tag = ENG
										tag = NZL
										tag = FRA
										original_tag = SOV
										original_tag = ITA
									}
								}
							}
						}
						news_event = { id = cityfall.80 }
					}
				}
				# Budapest
				else_if = {
					limit = { FROM.FROM = { state = 43 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									OR = {
										original_tag = HUN
										tag = AUS
									}
								}
							}
						}
						news_event = { id = cityfall.81 }
					}
				}
				# Pretoria
				else_if = {
					limit = { FROM.FROM = { state = 275 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = SAF }
							}
						}
						news_event = { id = cityfall.82 }
					}
				}
				# Athens
				else_if = {
					limit = { FROM.FROM = { state = 47 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = GRE }
							}
						}
						news_event = { id = cityfall.83 }
					}
				}
				# Paris
				else_if = {
					limit = { FROM.FROM = { state = 16 } }
					if = {
						limit = {
							ROOT = {
								OR = {
									tag = GER
									tag = PRE
									tag = WGR
									tag = DDR
								}
							}
						}
						news_event = { id = news.101 }
					}
					else_if = {
						limit = {
							ROOT = { tag = ITA }
						}
						news_event = { id = news.114 }
					}
					else_if = {
						limit = {
							ROOT = {
								tag = SOV
								has_government = communism
							}
						}
						news_event = { id = news.142 }
					}
					else_if = {
						limit = {
							ROOT = {
								NOT = {
									OR = {
										tag = BEL
										original_tag = FRA
									}
								}
							}
							if = {
								limit = { has_global_flag = fall_of_france }
								NOT = {
									ROOT = {
										OR = {
											tag = AST
											tag = USA
											tag = CAN
											tag = FRA
											tag = SAF
											tag = ENG
											tag = NZL
											tag = RAJ
										}
									}
								}
							}
						}
						news_event = { id = cityfall.84 }
					}
				}
				# Bangkok
				else_if = {
					limit = { FROM.FROM = { state = 289 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = SIA }
							}
						}
						news_event = { id = cityfall.85 }
					}
				}
				# Stockholm
				else_if = {
					limit = { FROM.FROM = { state = 141 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									original_tag = SWE
									original_tag = GER
									original_tag = SOV
									original_tag = USA
									original_tag = ITA
									original_tag = JAP
									original_tag = SPR
									original_tag = ENG
									original_tag = NOR
									original_tag = FIN
									original_tag = BHU
									original_tag = DEN
									original_tag = POL
								}
							}
							NOT = {
								has_global_flag = fall_of_stockholm_ger
								has_global_flag = fall_of_stockholm_sov
								has_global_flag = fall_of_stockholm_usa
								has_global_flag = fall_of_stockholm_ita
								has_global_flag = fall_of_stockholm_jap
								has_global_flag = fall_of_stockholm_spr
								has_global_flag = fall_of_stockholm_eng
								has_global_flag = fall_of_stockholm_nor
								has_global_flag = fall_of_stockholm_fin
								has_global_flag = fall_of_stockholm_den
								has_global_flag = fall_of_stockholm_pol
								has_global_flag = fall_of_stockholm_bhu
							}
						}
						news_event = { id = cityfall.86 }
					}
				}
				# Oslo
				else_if = {
					limit = { FROM.FROM = { state = 110 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									original_tag = SWE
									original_tag = GER
									original_tag = NOR
									original_tag = FIN
									original_tag = DEN
								}
							}
						}
						news_event = { id = cityfall.87 }
					}
				}
				# Cundinamarca
				else_if = {
					limit = { FROM.FROM = { state = 306 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = COL }
							}
						}
						news_event = { id = cityfall.88 }
					}
				}
				# Dublin
				else_if = {
					limit = { FROM.FROM = { state = 113 } }
					if = {
						limit = {
							ROOT = { original_tag = GER }
						}
						# Dublin
						news_event = { id = cityfall.29 }
					}
					else_if = {
						limit = {
							ROOT = {
								NOT = {
									original_tag = IRE
									original_tag = ENG
								}
							}
						}
						news_event = { id = cityfall.89 }
					}
				}
				# Caracas
				else_if = {
					limit = { FROM.FROM = { state = 307 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = VEN }
							}
						}
						news_event = { id = cityfall.90 }
					}
				}
				# Azerbaijan
				else_if = {
					limit = { FROM.FROM = { state = 229 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									original_tag = SOV
									original_tag = AZR
									original_tag = GER
								}
							}
						}
						news_event = { id = cityfall.91 }
					}
				}
				# Generic Stalingrad
				else_if = {
					limit = { FROM.FROM = { state = 217 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									original_tag = GER
									original_tag = SOV
								}
							}
						}
						news_event = { id = cityfall.92 }
					}
				}
				# Generic Leningrad
				else_if = {
					limit = { FROM.FROM = { state = 195 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									original_tag = GER
									original_tag = FIN
									original_tag = SOV
								}
							}
						}
						news_event = { id = cityfall.93 }
					}
				}
				# California.
				else_if = {
					limit = { FROM.FROM = { state = 378 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									original_tag = JAP
									original_tag = PER
								}
							}
						}
						news_event = { id = cityfall.94 }
					}
				}
				# Generic Tehran
				else_if = {
					limit = { FROM.FROM = { state = 266 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = JAP }
							}
						}
						news_event = { id = cityfall.95 }
					}
				}
				# Sevastopol
				else_if = {
					limit = { FROM.FROM = { state = 137 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									original_tag = SOV
									original_tag = GER
								}
							}
						}
						news_event = { id = cityfall.96 }
					}
				}
				# Gibraltar
				else_if = {
					limit = { FROM.FROM = { state = 118 } }
					if = {
						limit = {
							ROOT = {
								NOT = {
									original_tag = SPR
									original_tag = SPA
									original_tag = ITA
									original_tag = GER
								}
							}
						}
						news_event = { id = cityfall.97 }
					}
				}
				# Sydney
				else_if = {
					limit = { FROM.FROM = { state = 285 } }
					if = {
						limit = {
							ROOT = {
								NOT = { original_tag = AST }
							}
						}
						news_event = { id = cityfall.98 }
					}
				}
				# Madrid
				else_if = {
					limit = { FROM.FROM = { state = 41 } }
					if = {
						limit = {
							has_global_flag = scw_over
							ROOT = {
								NOT = { original_tag = SPR }
							}
						}
						news_event = { id = cityfall.99 }
					}
				}				
			}

			################# STUFFS THAT ARE NOT CITY FALL EVENTS BELOW
			if = {
				limit = {
					original_tag = JAP
					has_government = communism

					282 = { is_controlled_by = ROOT }
					FROM = {
						original_tag = JAP
						has_government = fascism
					}
				}
				FROM = { save_event_target_as = jap_civ_loser }
				MAN = { country_event = { id = wtt_japan.121 days = 1 } }
			}

			#Ukrainian Army Grows with recaptured core territory
			if = { #MOD. Compressed
				limit = {
					NOT = { FROM.FROM = { has_state_flag = UKR_recaptured_territory_flag } }
				}
				if = {
					limit = {
						OR = {
							AND = {
								DOU = { is_in_faction_with = ROOT }
								FROM.FROM = { is_core_of = DOU }
							}
							AND = {
								DOU = { is_subject_of = ROOT }
								FROM.FROM = { is_core_of = DOU }
							}
							AND = {
								ROOT = { original_tag = DOU }
								FROM.FROM = { is_core_of = ROOT }
							}
						}
					}
					DOU = {
						add_equipment_to_stockpile = {
							type = infantry_equipment_1
							amount = 1775
							producer = DOU
						}
						add_equipment_to_stockpile = {
							type = support_equipment_1
							amount = 10
							producer = DOU
						}
						add_equipment_to_stockpile = {
							type = artillery_equipment_1
							amount = 2
							producer = DOU
						}
					}
					FROM.FROM = { set_state_flag = UKR_recaptured_territory_flag }
				}

				if = {
					limit = {
						OR = {
							AND = {
								UKR = { is_in_faction_with = ROOT }
								FROM.FROM = { is_core_of = UKR }
							}
							AND = {
								UKR = { is_subject_of = ROOT }
								FROM.FROM = { is_core_of = UKR }
							}
							AND = {
								ROOT = { original_tag = UKR }
								FROM.FROM = { is_core_of = ROOT }
							}
						}
					}
					UKR = {
						add_equipment_to_stockpile = {
							type = infantry_equipment_1
							amount = 1775
							producer = UKR
						}
						add_equipment_to_stockpile = {
							type = support_equipment_1
							amount = 10
							producer = UKR
						}
						add_equipment_to_stockpile = {
							type = artillery_equipment_1
							amount = 2
							producer = UKR
						}
					}
					FROM.FROM = { set_state_flag = UKR_recaptured_territory_flag }
				}

				if = {
					limit = {
						OR = {
							AND = {
								RUT = { is_in_faction_with = ROOT }
								FROM.FROM = { is_core_of = UKR }
							}
							AND = {
								RUT = { is_subject_of = ROOT }
								FROM.FROM = { is_core_of = UKR }
							}
							AND = {
								ROOT = { original_tag = UKR }
								FROM.FROM = { is_core_of = ROOT }
							}
						}
					}
					RUT = {
						add_equipment_to_stockpile = {
							type = infantry_equipment_1
							amount = 1775
							producer = UKR
						}
						add_equipment_to_stockpile = {
							type = support_equipment_1
							amount = 10
							producer = UKR
						}
						add_equipment_to_stockpile = {
							type = artillery_equipment_1
							amount = 2
							producer = UKR
						}
					}
					FROM.FROM = { set_state_flag = UKR_recaptured_territory_flag }
				}
			}

			#Danzig auto-annex workaround, but weird, also check DNZ_join_germany
		#	if = {
		#		limit = {
		#			POL = { controls_state = 807 }
		#			GER = { controls_state = 85 }
		#		}
		#		GER = { transfer_state = 807 }
		#		807 = {	add_core_of = GER }
		#	}
			if = {
				limit = {
					country_exists = DNZ
					DNZ = { is_subject_of = POL }
					GER = { controls_state = 85 }
				}
				DNZ = { country_event = poland.58 }
			}
		}
	}

	on_unit_leader_level_up = {
		effect = {
			if = {
				limit = {
					has_trait = promising
					skill > 2
				}
				remove_unit_leader_trait = promising
			}
		}
	}

	###---> On Subject Autonomy Level Change <><> <><> <><>
	on_subject_autonomy_level_change = {
		effect = {
			#Achievement
			if = {
				limit = { tag = EGY }
				if = {
					limit = { has_autonomy_state = autonomy_colony }
					set_country_flag = achievement_EGY_colony
					log = EGY_colony
				}
				if = {
					limit = { has_autonomy_state = autonomy_dominion }
					set_country_flag = achievement_EGY_dominion
					log = EGY_dominion
				}
			}

			#Add to french tech group
			if = {
				limit = {
					OR = {
						has_autonomy_state = autonomy_colony
						has_autonomy_state = autonomy_dominion
					}
					OVERLORD = { is_in_tech_sharing_group = commonwealth_research }
				}
				add_to_tech_sharing_group = commonwealth_research
			}

			if = {
				limit = {
					tag = FRI
					tag = MOR
					tag = TUN
					tag = SYR
					tag = LEB
					NOT = {
					    has_autonomy_state = autonomy_colony
						has_autonomy_state = autonomy_dominion
					}
				}

				remove_from_tech_sharing_group = french_research
			}
		}
	}

	###---> On Dismantle Faction <><> <><> <><>
	on_dismantle_faction = {
		effect = {
			if = {
				limit = { original_tag = POL }
				remove_ideas = POL_Wanda_Wasilewska
				remove_ideas = POL_Wladyslaw_Studnicki
			}
		}
	}

	###---> On Uncapitulation <><> <><> <><>
	on_uncapitulation = {
		effect = {
			if = { #MOD. OPT
				limit = { original_tag = POL }
				drop_cosmetic_tag = yes
				POL = { set_party_name = { ideology = fascism long_name = POL_fascism_party_long name = POL_fascism_party } }
				if = {
					limit = {
						has_completed_focus = POL_The_Endecja_Movement
					}
					set_party_name = { ideology = democratic long_name = POL_ND_party_long name = POL_ND_party }
				}
				else_if = {
					limit = {
						has_completed_focus = POL_The_Polish_Socialist_Party
					}
					set_party_name = { ideology = democratic long_name = POL_PPS_party_long name = POL_PPS_party }
				}
				else = {
					if = {
						limit = {
							NOT = { is_puppet_of = SOV }
							NOT = { has_government = communism }
						}
						set_party_name = { ideology = democratic long_name = POL_democratic_party_long name = POL_democratic_party }
					}
					else_if = {
						limit = {
							is_puppet_of = SOV
							has_government = communism
						}
						POL = { set_party_name = { ideology = democratic long_name = POL_PSL_long name = POL_PSL_party } }
					}
				}
			}
			if = {
				limit = {
					RUT = {
						has_cosmetic_tag = RUT3
					}
				}
				RUT = {
					drop_cosmetic_tag = yes
				}
			}
		}
	}

	###---> On Liberate (ONLY during peace conference) <><> <><> <><>
	on_liberate = {
		effect = {
			if = {
				limit = { TAG = ZIM }
				ZIM = {
					drop_cosmetic_tag = yes #British colony flag
				}
			}

			if = { #MOD. OPT
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_COUNTRIES
					}
				}
				create_intelligence_agency = yes
			}
			else_if = {
				limit = {
					has_game_rule = {
						rule = starting_agencies
						option = ALL_MAJORS_AND_STRONG_MINORS
					}
					capital_scope = {
						OR = {
							is_on_continent = north_america
							is_on_continent = europe
						}
					}
				}
				create_intelligence_agency = yes
			}
		}
	}

	on_war = { #MOD. OPT
		effect = {
			if = {
				limit = {
					has_war_with = GER
					ROOT = {
						NOT = {
							original_tag = GER
							original_tag = PRE
							original_tag = WUR
							original_tag = BAY
							original_tag = BAD
							original_tag = HAN
							original_tag = WGR
							original_tag = DDR
							original_tag = SHL
							original_tag = HES
						}
					}
				}
				ROOT = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = GER_military_mission_commander
						}
						set_nationality = GER
					}
				}
			}
			if = {
				limit = {
					has_war_with = ITA
					ROOT = {
						NOT = {
							original_tag = ITA
							original_tag = NAP
							original_tag = VNZ
							original_tag = SAD
							original_tag = SIC
						}
					}
				}
				ROOT = {
					every_unit_leader = {
						limit = {
							has_unit_leader_flag = ITA_military_mission_commander
						}
						set_nationality = ITA
					}
				}
			}

			if = {
				limit = {
					has_global_flag = POL_gamelin_convention
					tag = POL
					has_defensive_war = yes
					OR = {
						has_government = neutrality
						has_government = democratic
					}
					is_in_faction = no
				}
				if = {
					limit = { FRA = { is_faction_leader = yes } }
					FRA = { country_event = poland.126 }
				}
				else_if = {
					limit = {
						ENG = {
							is_faction_leader = yes
							is_in_faction_with = FRA
						}
					}
					ENG = { country_event = poland.126 }
				}
			}
		}
	}

	on_ruling_party_change = {
		# temp var old_ideology_token is available for effects

		effect = { #// MOD. OPT. I think this was supposed to do something interesting at some point, but was never fully implemented.
			if = {
				limit = {
					original_tag = SOV
				}
				if = {
					limit = {
						has_government = communism
					}
					drop_cosmetic_tag = yes
				}
				else_if = {
					limit = {
						NOT = {
							has_cosmetic_tag = SOV2
							has_cosmetic_tag = SOV_Russian_Federation
							has_cosmetic_tag = SOV_Russian_Empire
						}
					}
					set_cosmetic_tag = SOV3
				}
			}
			#little script to make countries changing government leave factions, currently only if at peace
			if = {
				limit = {
					is_in_faction = yes
					is_faction_leader = no
					NOT = {
						OR = {
							is_subject = yes #that should be the same thing alright?
							is_puppet = yes #Fun fact: no. It depends on the level of autonomy, as some have "puppet = yes" and other don't. Only those that do are puppets, the rest subjects. I'm unclear if puppets are also subjects, but light testing suggest no.
							has_capitulated = yes
						}
						
					}
					NOT = {
						AND = {
							OR = {
								tag = FIN
								tag = NOR
							}
							OR = {
								has_government = neutrality
								has_government = democratic
							}
							is_in_faction_with = SWE
							SWE = {
								is_faction_leader = yes
								OR = {
									has_government = neutrality
									has_government = democratic
								}
							}
						}
					}
					NOT = {
						AND = {
							OR = {
								has_government = neutrality
								has_government = fascism
							}
							is_in_faction_with = JAP
							JAP = {
								is_faction_leader = yes
								OR = {
									has_government = neutrality
									has_government = fascism
								}
							}
						}
					}
					faction_leader = { #MOD. OPT: Cutting the chase.
						NOT = {
							has_government = ROOT
						}
					}					
				}					
				country_event = { id = r56i.event.10 }
			}

			#little script to make puppet countries changing government leave factions and declare independence
			if = {
				limit = {
					OR = { #that should be the same thing alright? But is_puppet doesn't work?
						is_subject = yes
						is_puppet = yes
					}
					OVERLORD = {
						NOT = {
							has_government = ROOT
						}
					}

					NOT = {
						OR = {
							AND = {
								original_tag = MEN
								date < 1936.04.01
							}
							
							has_country_flag = dont_trigger_independence_event						
														
							tag = TIB
							tag = BHU
							tag = MOR
							tag = TUN
							has_focus_tree = indian_focus
							has_focus_tree = new_zealander_focus
							has_focus_tree = canadian_focus
							has_focus_tree = australian_focus
							has_focus_tree = r56_australian_focus
							AND = {
								is_subject_of = FRA
							#	FRA = {
							#		has_completed_focus = FRA_autonomy_indochina
							#	}
								OR = {
									original_tag = VIN
									original_tag = CAM
									original_tag = LAO
								}
							}
						}
					}
				}
				country_event = { id = r56i.event.12 }
			}
		}
	}
	#ROOT - country that just went to peace
	on_peaceconference_ended = {
		effect = {
			#try to fix war propaganda decision bug, open the way to mini exploits but would be exploited by increased national morale.
			if = {
				limit = {
					has_country_flag = war_propaganda_campaign_running
				}
				clr_country_flag = war_propaganda_campaign_running
			}
			#wait we are not that big? Return to generic Hungary
			if = {
				limit = {
					tag = HUN
					has_cosmetic_tag = HUN_EMPIRE
					AUS = {
						country_exists = yes
					}
					num_of_controlled_states < 7
				}
				drop_cosmetic_tag  = yes
			}
			if = {
				limit = {
					has_global_flag = r56_yalta_script_is_a_go
					ROOT = {
						TAG = SOV
					}
				}
				if = {
					limit = {
						WGR = {
							is_ai = yes
						}
					}
					WGR = { change_tag_from = GER }
				}
				SOV = {
					country_event = { id = r56.ger.3 }
				}
			}
			if = {
				limit = {
					has_global_flag = r56_yalta_script_is_a_go
					OR = {
						country_exists = DDR
						country_exists = WGR
					}
				}
				set_global_flag = r56_yalta_peacedeal_over
			}
		}
	}

	on_unit_leader_created = {
		effect = {
			if = {
				limit = {
					FROM = {
						OR = {
							has_completed_focus = YUG_adriatic_specialization
							has_completed_focus = CRO_adriatic_specialization
							has_completed_focus = SER_adriatic_specialization
						}
					}
				}
				FROM = {
					every_navy_leader = {
						limit = {
							NOT = {
								has_trait = inshore_fighter
							}
						}
						add_unit_leader_trait = inshore_fighter
					}
				}
			}
			if = {
				limit = {
					YUG = {
						has_completed_focus = YUG_adriatic_specialization
					}
					FROM = {
						OR = {
							AND = {
								original_tag = CRO
								has_global_flag = yugoslav_croat_adriatic_training
							}
							AND = {
								original_tag = SER
								has_global_flag = yugoslav_serb_adriatic_training
							}
							AND = {
								original_tag = MNT
								has_global_flag = yugoslav_montenegrin_adriatic_training
							}
							AND = {
								original_tag = SLV
								has_global_flag = yugoslav_slovene_adriatic_training
							}
						}
					}
				}
				FROM = {
					every_navy_leader = {
						limit = {
							NOT = {
								has_trait = inshore_fighter
							}
						}
						add_unit_leader_trait = inshore_fighter
					}
				}
			}
		}
	}

	on_paradrop = {
		effect = {
			#THIS = {
			#	CONTROLLER = {  # AIRBORNE INVASION ALERT. Could work probably but ROOT is invader and it's difficult to trigger it for the previous controller.
			#		if = {
			#			limit = {
			#				tag = ROOT
			#			}
			#			country_event = { id = r56i.event.18 }
			#		}
			#	}
			#}
		}
	}

	# root country that invades
	# scope state that is invaded
	# from scope state that the invasion started
	on_naval_invasion = {
	 	effect = {
		#	if = { # NAVAL INVASION ALERT. Could work probably but ROOT is invader and it's difficult to trigger it for the previous controller.
		#		limit = {
		#			NOT = {
		#				OR = {
		#					has_global_flag = global_stop_naval_invasion_alert_event
		#					has_country_flag = country_stop_naval_invasion_alert_event
		#				}
		#			}
		#		}
		#		THIS = {
		#			CONTROLLER = {
		#				if = {
		#					limit = {
		#						NOT = {
		#							tag = ROOT ###### THIS LINE IS STUPID
		#						}
		#					}
		#					country_event = { id = r56i.event.17 }
		#				}
		#			}
		#		}
		#	}
		}
	}

	on_send_volunteers = {
		effect = {
			if = { #Bulgaria has sent volunteers to Spanish Republicans/Nationalists (LaR)
				limit = {
					tag = ROM
					FROM = { original_tag = SPR }
					has_dlc = "La Resistance"
					SPR_scw_in_progress = yes
				}
				if = {
					limit = {
						FROM = { tag = SPD }
					}
					set_country_flag = ROM_sent_volunteers_to_SPD_flag
				}
				else = {
					set_country_flag = ROM_sent_volunteers_to_SPA_flag
				}
			}
			else_if = {
				limit = {
					tag = BUL
					FROM = { original_tag = SPR }
					NOT = { has_dlc = "La Resistance" }
					FROM = { has_civil_war = yes }
				}
				if = {
					limit = {
						FROM = {
							OR = {
								has_government = democratic
								has_government = communism
							}
						}
					}
					set_country_flag = ROM_sent_volunteers_to_SPD_flag
				}
				else = {
					set_country_flag = ROM_sent_volunteers_to_SPA_flag
				}
			}
		}
	}
	#FROM is state the nuke got dropped on - Borrowed from Equestria at War
	on_nuke_drop = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_nuke_drop FROM = [From.GetName]"
			FROM = {
				decrease_population_on_nuke = yes
			}
		}
	}
	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			#Give achievement to nation joining a faction, but not in one from game start
			if = {
				limit = {
					date > 1936.01.02
				}
				FROM = {
					if = {
						limit = {
							is_faction_leader = no
						}
						set_country_flag = achievement_has_joined_faction
					}
				}
			}
			#Remove anti_soviet_pact if joining commie Soviet in faction
			if = {
				limit = {
					OR = {
						AND = {
							original_tag = FRA
							FROM = { original_tag = USA }
						}
						AND = {
							original_tag = USA
							FROM = { original_tag = FRA }
						}
					}
					FRA = { has_government = fascism }
					USA = { has_government = fascism }
				}
				news_event = { id = r56.news_event.21 hours = 12 }
			}
		}
	}

	on_join_faction = {
		effect = {
			#Franco American Fascist alliance
			if = {
				limit = {
					OR = {
						AND = {
							original_tag = FRA
							FROM = { original_tag = USA }
						}
						AND = {
							original_tag = USA
							FROM = { original_tag = FRA }
						}
					}
				}
				news_event = { id = r56.news_event.21 hours = 12 }
			}
		}
	}
}
